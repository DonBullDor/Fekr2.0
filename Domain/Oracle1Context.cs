// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Domain.Models;
#nullable disable

namespace Data
{
    public partial class Oracle1Context : DbContext
    {
        public Oracle1Context()
        {
        }

        public Oracle1Context(DbContextOptions<Oracle1Context> options)
            : base(options)
        {
        }

        public virtual DbSet<A> A { get; set; }
        public virtual DbSet<AMoyenne> AMoyenne { get; set; }
        public virtual DbSet<ANote> ANote { get; set; }
        public virtual DbSet<AValidationNote> AValidationNote { get; set; }
        public virtual DbSet<AaPwdEns> AaPwdEns { get; set; }
        public virtual DbSet<AaTemp> AaTemp { get; set; }
        public virtual DbSet<Aab> Aab { get; set; }
        public virtual DbSet<Ab> Ab { get; set; }
        public virtual DbSet<AddNiv9eme> AddNiv9eme { get; set; }
        public virtual DbSet<AffectationExamen> AffectationExamen { get; set; }
        public virtual DbSet<AspNetRoleClaims> AspNetRoleClaims { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUserRoles> AspNetUserRoles { get; set; }
        public virtual DbSet<AspNetUserTokens> AspNetUserTokens { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<Champ> Champ { get; set; }
        public virtual DbSet<ChampStr> ChampStr { get; set; }
        public virtual DbSet<Classe> Classe { get; set; }
        public virtual DbSet<CodeNomenclature> CodeNomenclature { get; set; }
        public virtual DbSet<Comite> Comite { get; set; }
        public virtual DbSet<ComiteSpecialite> ComiteSpecialite { get; set; }
        public virtual DbSet<Comitevalidation> Comitevalidation { get; set; }
        public virtual DbSet<Commentaire> Commentaire { get; set; }
        public virtual DbSet<ComptCert> ComptCert { get; set; }
        public virtual DbSet<Compteur> Compteur { get; set; }
        public virtual DbSet<ConMoy0605> ConMoy0605 { get; set; }
        public virtual DbSet<DateEnt> DateEnt { get; set; }
        public virtual DbSet<Decid> Decid { get; set; }
        public virtual DbSet<DemandeAttestationAlfikr> DemandeAttestationAlfikr { get; set; }
        public virtual DbSet<Emploisemetud> Emploisemetud { get; set; }
        public virtual DbSet<EnteteReclamation> EnteteReclamation { get; set; }
        public virtual DbSet<EspAbsNotTransSite> EspAbsNotTransSite { get; set; }
        public virtual DbSet<EspAbscence> EspAbscence { get; set; }
        public virtual DbSet<EspAbsence> EspAbsence { get; set; }
        public virtual DbSet<EspAbsenceEnseignant> EspAbsenceEnseignant { get; set; }
        public virtual DbSet<EspAbsenceList> EspAbsenceList { get; set; }
        public virtual DbSet<EspAbsenceNew> EspAbsenceNew { get; set; }
        public virtual DbSet<EspAbsenceTmp> EspAbsenceTmp { get; set; }
        public virtual DbSet<EspActiviteExtra> EspActiviteExtra { get; set; }
        public virtual DbSet<EspActiviteJoin> EspActiviteJoin { get; set; }
        public virtual DbSet<EspAdmis1415> EspAdmis1415 { get; set; }
        public virtual DbSet<EspAdmission> EspAdmission { get; set; }
        public virtual DbSet<EspAdreeseMailEtudiant> EspAdreeseMailEtudiant { get; set; }
        public virtual DbSet<EspAdresseMailEspEtudiant> EspAdresseMailEspEtudiant { get; set; }
        public virtual DbSet<EspAffGroupEtudiant> EspAffGroupEtudiant { get; set; }
        public virtual DbSet<EspAffectationEmploi> EspAffectationEmploi { get; set; }
        public virtual DbSet<EspAideCours> EspAideCours { get; set; }
        public virtual DbSet<EspAppreciation> EspAppreciation { get; set; }
        public virtual DbSet<EspArchivageEtudiant> EspArchivageEtudiant { get; set; }
        public virtual DbSet<EspAssRubEtIns> EspAssRubEtIns { get; set; }
        public virtual DbSet<EspAuditAdmission> EspAuditAdmission { get; set; }
        public virtual DbSet<EspAuditChangeClasse> EspAuditChangeClasse { get; set; }
        public virtual DbSet<EspAuditConnexion> EspAuditConnexion { get; set; }
        public virtual DbSet<EspAuditCredit> EspAuditCredit { get; set; }
        public virtual DbSet<EspBilanPrepa> EspBilanPrepa { get; set; }
        public virtual DbSet<EspBlacklist> EspBlacklist { get; set; }
        public virtual DbSet<EspCahierText> EspCahierText { get; set; }
        public virtual DbSet<EspCalcul> EspCalcul { get; set; }
        public virtual DbSet<EspCcna3> EspCcna3 { get; set; }
        public virtual DbSet<EspCertif> EspCertif { get; set; }
        public virtual DbSet<EspComportementDiscpline> EspComportementDiscpline { get; set; }
        public virtual DbSet<EspCompteur> EspCompteur { get; set; }
        public virtual DbSet<EspContrat> EspContrat { get; set; }
        public virtual DbSet<EspConvocation> EspConvocation { get; set; }
        public virtual DbSet<EspCorrespIdetCompte> EspCorrespIdetCompte { get; set; }
        public virtual DbSet<EspCorrespondanceOkFikr> EspCorrespondanceOkFikr { get; set; }
        public virtual DbSet<EspCoursSoutienAdmin> EspCoursSoutienAdmin { get; set; }
        public virtual DbSet<EspCoursSoutienEns> EspCoursSoutienEns { get; set; }
        public virtual DbSet<EspCreditPanier> EspCreditPanier { get; set; }
        public virtual DbSet<EspCritereEval> EspCritereEval { get; set; }
        public virtual DbSet<EspDept> EspDept { get; set; }
        public virtual DbSet<EspDescpline> EspDescpline { get; set; }
        public virtual DbSet<EspDetailContrat> EspDetailContrat { get; set; }
        public virtual DbSet<EspDetailResultat> EspDetailResultat { get; set; }
        public virtual DbSet<EspDevoirsMaison> EspDevoirsMaison { get; set; }
        public virtual DbSet<EspDirection> EspDirection { get; set; }
        public virtual DbSet<EspDispClass> EspDispClass { get; set; }
        public virtual DbSet<EspDispenseEtudiant> EspDispenseEtudiant { get; set; }
        public virtual DbSet<EspDisponibiliteEns> EspDisponibiliteEns { get; set; }
        public virtual DbSet<EspDomaineEnseignement> EspDomaineEnseignement { get; set; }
        public virtual DbSet<EspDossiersScolaires> EspDossiersScolaires { get; set; }
        public virtual DbSet<EspEmploi> EspEmploi { get; set; }
        public virtual DbSet<EspEncadrement> EspEncadrement { get; set; }
        public virtual DbSet<EspEncadrementGp> EspEncadrementGp { get; set; }
        public virtual DbSet<EspEnseignant> EspEnseignant { get; set; }
        public virtual DbSet<EspEnseignantAbs> EspEnseignantAbs { get; set; }
        public virtual DbSet<EspEnseignantFichepfe> EspEnseignantFichepfe { get; set; }
        public virtual DbSet<EspEnteteAbsence> EspEnteteAbsence { get; set; }
        public virtual DbSet<EspEnteteNote> EspEnteteNote { get; set; }
        public virtual DbSet<EspEnteteNoteRat> EspEnteteNoteRat { get; set; }
        public virtual DbSet<EspEtNotTransfFin> EspEtNotTransfFin { get; set; }
        public virtual DbSet<EspEtudiant> EspEtudiant { get; set; }
        public virtual DbSet<EspEtudiant2013> EspEtudiant2013 { get; set; }
        public virtual DbSet<EspEtudiantEnreg> EspEtudiantEnreg { get; set; }
        public virtual DbSet<EspEtudiantNoteGroupe> EspEtudiantNoteGroupe { get; set; }
        public virtual DbSet<EspEtudiantSeminaire> EspEtudiantSeminaire { get; set; }
        public virtual DbSet<EspEtudiantTmp> EspEtudiantTmp { get; set; }
        public virtual DbSet<EspEvalClModule> EspEvalClModule { get; set; }
        public virtual DbSet<EspEvaluation> EspEvaluation { get; set; }
        public virtual DbSet<EspEvaluationPrepa> EspEvaluationPrepa { get; set; }
        public virtual DbSet<EspEvaluationScolaires> EspEvaluationScolaires { get; set; }
        public virtual DbSet<EspExamen> EspExamen { get; set; }
        public virtual DbSet<EspFichePfe> EspFichePfe { get; set; }
        public virtual DbSet<EspFiliere> EspFiliere { get; set; }
        public virtual DbSet<EspGpProjet> EspGpProjet { get; set; }
        public virtual DbSet<EspGroupeProjet> EspGroupeProjet { get; set; }
        public virtual DbSet<EspGroupeTarif> EspGroupeTarif { get; set; }
        public virtual DbSet<EspIdMoodle> EspIdMoodle { get; set; }
        public virtual DbSet<EspImportscore> EspImportscore { get; set; }
        public virtual DbSet<EspInscri> EspInscri { get; set; }
        public virtual DbSet<EspInscription> EspInscription { get; set; }
        public virtual DbSet<EspJournalEtudiant> EspJournalEtudiant { get; set; }
        public virtual DbSet<EspJournalInscription> EspJournalInscription { get; set; }
        public virtual DbSet<EspJournalMdpEns> EspJournalMdpEns { get; set; }
        public virtual DbSet<EspJournalNote> EspJournalNote { get; set; }
        public virtual DbSet<EspJournalOpRubrique> EspJournalOpRubrique { get; set; }
        public virtual DbSet<EspLogin> EspLogin { get; set; }
        public virtual DbSet<EspMailEnseignant> EspMailEnseignant { get; set; }
        public virtual DbSet<EspMessage> EspMessage { get; set; }
        public virtual DbSet<EspModule> EspModule { get; set; }
        public virtual DbSet<EspModuleEtudiant> EspModuleEtudiant { get; set; }
        public virtual DbSet<EspModulePanierClasseSaiso> EspModulePanierClasseSaiso { get; set; }
        public virtual DbSet<EspMoyModuleEtSemestriel> EspMoyModuleEtSemestriel { get; set; }
        public virtual DbSet<EspMoyModuleEtudiant> EspMoyModuleEtudiant { get; set; }
        public virtual DbSet<EspMoyPanierEtudiant> EspMoyPanierEtudiant { get; set; }
        public virtual DbSet<EspMoyUeEtudiant> EspMoyUeEtudiant { get; set; }
        public virtual DbSet<EspNiveauLangue> EspNiveauLangue { get; set; }
        public virtual DbSet<EspNote> EspNote { get; set; }
        public virtual DbSet<EspNoteAnglaisS2> EspNoteAnglaisS2 { get; set; }
        public virtual DbSet<EspNoteFikr> EspNoteFikr { get; set; }
        public virtual DbSet<EspNoteFrancaisS2> EspNoteFrancaisS2 { get; set; }
        public virtual DbSet<EspNoteQiS2New> EspNoteQiS2New { get; set; }
        public virtual DbSet<EspNoteRat> EspNoteRat { get; set; }
        public virtual DbSet<EspObservationEnseignant> EspObservationEnseignant { get; set; }
        public virtual DbSet<EspObservationEtudiant> EspObservationEtudiant { get; set; }
        public virtual DbSet<EspOrientation> EspOrientation { get; set; }
        public virtual DbSet<EspParentPwd> EspParentPwd { get; set; }
        public virtual DbSet<EspPrevision> EspPrevision { get; set; }
        public virtual DbSet<EspProjet> EspProjet { get; set; }
        public virtual DbSet<EspProjetEtudiant> EspProjetEtudiant { get; set; }
        public virtual DbSet<EspProjetN> EspProjetN { get; set; }
        public virtual DbSet<EspProjetNew> EspProjetNew { get; set; }
        public virtual DbSet<EspPvClasse> EspPvClasse { get; set; }
        public virtual DbSet<EspRealise> EspRealise { get; set; }
        public virtual DbSet<EspReglementOnline> EspReglementOnline { get; set; }
        public virtual DbSet<EspRemarqueAbsence> EspRemarqueAbsence { get; set; }
        public virtual DbSet<EspResultat> EspResultat { get; set; }
        public virtual DbSet<EspRubrique> EspRubrique { get; set; }
        public virtual DbSet<EspSaisonClasse> EspSaisonClasse { get; set; }
        public virtual DbSet<EspSaisonUniversitaire> EspSaisonUniversitaire { get; set; }
        public virtual DbSet<EspSalleClasse> EspSalleClasse { get; set; }
        public virtual DbSet<EspSanction> EspSanction { get; set; }
        public virtual DbSet<EspScoreSpecialite> EspScoreSpecialite { get; set; }
        public virtual DbSet<EspSeanceEns> EspSeanceEns { get; set; }
        public virtual DbSet<EspSession> EspSession { get; set; }
        public virtual DbSet<EspSuiviProjetIndiv> EspSuiviProjetIndiv { get; set; }
        public virtual DbSet<EspTabPlanSalle> EspTabPlanSalle { get; set; }
        public virtual DbSet<EspTempEtudiantEnreg> EspTempEtudiantEnreg { get; set; }
        public virtual DbSet<EspTempScore> EspTempScore { get; set; }
        public virtual DbSet<EspTestEns> EspTestEns { get; set; }
        public virtual DbSet<EspTestEtud> EspTestEtud { get; set; }
        public virtual DbSet<EspTicketInscription> EspTicketInscription { get; set; }
        public virtual DbSet<EspTmpMailEns> EspTmpMailEns { get; set; }
        public virtual DbSet<EspToeicNb> EspToeicNb { get; set; }
        public virtual DbSet<EspTraceCorrectNumcpt> EspTraceCorrectNumcpt { get; set; }
        public virtual DbSet<EspTraceImpPiece> EspTraceImpPiece { get; set; }
        public virtual DbSet<EspTrvCours> EspTrvCours { get; set; }
        public virtual DbSet<EspTrvQuot> EspTrvQuot { get; set; }
        public virtual DbSet<EspUe> EspUe { get; set; }
        public virtual DbSet<EspUe5emetelinfo> EspUe5emetelinfo { get; set; }
        public virtual DbSet<EspUp> EspUp { get; set; }
        public virtual DbSet<EspWhiteList> EspWhiteList { get; set; }
        public virtual DbSet<EtatPaiement> EtatPaiement { get; set; }
        public virtual DbSet<EtuEmp> EtuEmp { get; set; }
        public virtual DbSet<Fichepfe> Fichepfe { get; set; }
        public virtual DbSet<FrCursus> FrCursus { get; set; }
        public virtual DbSet<Fran> Fran { get; set; }
        public virtual DbSet<HistoriquePaiement> HistoriquePaiement { get; set; }
        public virtual DbSet<LiaisonNavScoNumtel> LiaisonNavScoNumtel { get; set; }
        public virtual DbSet<LiaisonScoNavFikr> LiaisonScoNavFikr { get; set; }
        public virtual DbSet<Messages> Messages { get; set; }
        public virtual DbSet<NoteS12018> NoteS12018 { get; set; }
        public virtual DbSet<Noteseminaire> Noteseminaire { get; set; }
        public virtual DbSet<Pbcatcol> Pbcatcol { get; set; }
        public virtual DbSet<Pbcatedt> Pbcatedt { get; set; }
        public virtual DbSet<Pbcatfmt> Pbcatfmt { get; set; }
        public virtual DbSet<Pbcattbl> Pbcattbl { get; set; }
        public virtual DbSet<Pbcatvld> Pbcatvld { get; set; }
        public virtual DbSet<PlanTable> PlanTable { get; set; }
        public virtual DbSet<Presidentjury> Presidentjury { get; set; }
        public virtual DbSet<Presoutenance> Presoutenance { get; set; }
        public virtual DbSet<Quitus> Quitus { get; set; }
        public virtual DbSet<Reclamationn> Reclamationn { get; set; }
        public virtual DbSet<ResultatEtEdserve> ResultatEtEdserve { get; set; }
        public virtual DbSet<ResultatFinalS12018> ResultatFinalS12018 { get; set; }
        public virtual DbSet<ResultatFinaleSem2> ResultatFinaleSem2 { get; set; }
        public virtual DbSet<ResultatSemestre2> ResultatSemestre2 { get; set; }
        public virtual DbSet<Salle> Salle { get; set; }
        public virtual DbSet<Scoredo> Scoredo { get; set; }
        public virtual DbSet<Seminaire> Seminaire { get; set; }
        public virtual DbSet<Sequence> Sequence { get; set; }
        public virtual DbSet<Sessionetudiant> Sessionetudiant { get; set; }
        public virtual DbSet<Sessionpresoutenance> Sessionpresoutenance { get; set; }
        public virtual DbSet<Sessionsoutenance> Sessionsoutenance { get; set; }
        public virtual DbSet<Societe> Societe { get; set; }
        public virtual DbSet<Soutenance> Soutenance { get; set; }
        public virtual DbSet<Specialite> Specialite { get; set; }
        public virtual DbSet<StrNome> StrNome { get; set; }
        public virtual DbSet<TableImport> TableImport { get; set; }
        public virtual DbSet<TypeMvt> TypeMvt { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasDefaultSchema("ESPRIT_ADMIN")
                .HasAnnotation("Relational:Collation", "USING_NLS_COMP");

            modelBuilder.Entity<A>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.IdEt)
                    .HasMaxLength(26)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.Nom)
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("NOM");

                entity.Property(e => e.Pnom)
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("PNOM");

                entity.Property(e => e.PwdP)
                    .HasMaxLength(26)
                    .IsUnicode(false)
                    .HasColumnName("PWD_P");
            });

            modelBuilder.Entity<AMoyenne>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("A_MOYENNE");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.Moyenne)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOYENNE");

                entity.Property(e => e.Semestre)
                    .HasPrecision(2)
                    .HasColumnName("SEMESTRE");
            });

            modelBuilder.Entity<ANote>(entity =>
            {
                entity.HasKey(e => new { e.IdEt, e.IdEns, e.CodeCl, e.AnneeDeb, e.CodeModule, e.Semestre })
                    .HasName("A_NOTE_PK");

                entity.ToTable("A_NOTE");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.Semestre)
                    .HasPrecision(2)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.AbsDc1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ABS_DC1");

                entity.Property(e => e.AbsDc2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ABS_DC2");

                entity.Property(e => e.AbsDs)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ABS_DS");

                entity.Property(e => e.AbsOr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ABS_OR");

                entity.Property(e => e.AbsTe)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ABS_TE");

                entity.Property(e => e.AbsTp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ABS_TP");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE")
                    .HasDefaultValueSql("sysdate\n   ");

                entity.Property(e => e.Dc1)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("DC1");

                entity.Property(e => e.Dc2)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("DC2");

                entity.Property(e => e.Ds)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("DS");

                entity.Property(e => e.Orale)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("ORALE");

                entity.Property(e => e.Te)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("TE");

                entity.Property(e => e.Tp)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("TP");
            });

            modelBuilder.Entity<AValidationNote>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("A_VALIDATION_NOTE");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.Module)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MODULE");

                entity.Property(e => e.Semestre)
                    .HasColumnType("NUMBER")
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.VDate)
                    .HasColumnType("DATE")
                    .HasColumnName("V_DATE")
                    .HasDefaultValueSql("sysdate\n   ");
            });

            modelBuilder.Entity<AaPwdEns>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("AA_PWD_ENS");

                entity.Property(e => e.Aa)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("AA");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.Nom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOM");

                entity.Property(e => e.Pnom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PNOM");
            });

            modelBuilder.Entity<AaTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("AA_TEMP");

                entity.Property(e => e.Acomptabiliser)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ACOMPTABILISER");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.AnneeFin)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_FIN");

                entity.Property(e => e.ApCs)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AP_CS");

                entity.Property(e => e.CalculRat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CALCUL_RAT");

                entity.Property(e => e.ChargeEns1P1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHARGE_ENS1_P1");

                entity.Property(e => e.ChargeEns1P2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHARGE_ENS1_P2");

                entity.Property(e => e.ChargeEns2P1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHARGE_ENS2_P1");

                entity.Property(e => e.ChargeEns2P2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHARGE_ENS2_P2");

                entity.Property(e => e.ChargeEns3P1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHARGE_ENS3_P1");

                entity.Property(e => e.ChargeEns3P2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHARGE_ENS3_P2");

                entity.Property(e => e.ChargeEns4P1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHARGE_ENS4_P1");

                entity.Property(e => e.ChargeEns4P2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHARGE_ENS4_P2");

                entity.Property(e => e.ChargeEns5P1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHARGE_ENS5_P1");

                entity.Property(e => e.ChargeEns5P2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHARGE_ENS5_P2");

                entity.Property(e => e.ChargeP1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHARGE_P1");

                entity.Property(e => e.ChargeP2)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CHARGE_P2");

                entity.Property(e => e.Chargep1add)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CHARGEP1ADD");

                entity.Property(e => e.Chargep2add)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CHARGEP2ADD");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.CodePlan)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_PLAN");

                entity.Property(e => e.CodeUe)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODE_UE");

                entity.Property(e => e.Coef)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("COEF");

                entity.Property(e => e.DateDebut)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DATE_DEBUT");

                entity.Property(e => e.DateExamen)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DATE_EXAMEN");

                entity.Property(e => e.DateFin)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DATE_FIN");

                entity.Property(e => e.DateRat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DATE_RAT");

                entity.Property(e => e.DateRattrapage)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DATE_RATTRAPAGE");

                entity.Property(e => e.Description)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.DesignationNew)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DESIGNATION_NEW");

                entity.Property(e => e.ExisteCc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXISTE_CC");

                entity.Property(e => e.ExisteTp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXISTE_TP");

                entity.Property(e => e.HeureExam)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("HEURE_EXAM");

                entity.Property(e => e.HeureRat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("HEURE_RAT");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.IdEns2)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS2");

                entity.Property(e => e.IdEns3)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS3");

                entity.Property(e => e.IdEns4)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS4");

                entity.Property(e => e.IdEns5)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS5");

                entity.Property(e => e.NbEcts)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NB_ECTS");

                entity.Property(e => e.NbHeures)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NB_HEURES");

                entity.Property(e => e.NbHeuresEns)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NB_HEURES_ENS");

                entity.Property(e => e.NbHeuresEns2)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NB_HEURES_ENS2");

                entity.Property(e => e.NbHoraireRealises)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NB_HORAIRE_REALISES");

                entity.Property(e => e.Nbheuradd)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NBHEURADD");

                entity.Property(e => e.NumPanier)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PANIER");

                entity.Property(e => e.NumPeriodfe)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PERIODFE");

                entity.Property(e => e.NumSemestre)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NUM_SEMESTRE");

                entity.Property(e => e.Numpromotioncs)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NUMPROMOTIONCS");

                entity.Property(e => e.Periode)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PERIODE");

                entity.Property(e => e.Salle)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SALLE");

                entity.Property(e => e.SalleExam)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SALLE_EXAM");

                entity.Property(e => e.SalleExam2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SALLE_EXAM2");

                entity.Property(e => e.SeanceUnique)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SEANCE_UNIQUE");

                entity.Property(e => e.Surveillant)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SURVEILLANT");

                entity.Property(e => e.Surveillant2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SURVEILLANT2");

                entity.Property(e => e.TypeEpreuve)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_EPREUVE");
            });

            modelBuilder.Entity<Aab>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("AAB");

                entity.Property(e => e.AnneeDeb)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.DateModif)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DATE_MODIF");

                entity.Property(e => e.DateSaisie)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DATE_SAISIE");

                entity.Property(e => e.DescriptionUe)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION_UE");

                entity.Property(e => e.DomaineEnseigement)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DOMAINE_ENSEIGEMENT");

                entity.Property(e => e.NiveauScolaires)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NIVEAU_SCOLAIRES");

                entity.Property(e => e.Priode)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRIODE");

                entity.Property(e => e.UeEnseignement)
                    .IsUnicode(false)
                    .HasColumnName("UE_ENSEIGNEMENT");
            });

            modelBuilder.Entity<Ab>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("AB");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(26)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.Nom)
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("NOM");

                entity.Property(e => e.Pnom)
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("PNOM");

                entity.Property(e => e.PwdP)
                    .HasMaxLength(26)
                    .IsUnicode(false)
                    .HasColumnName("PWD_P");
            });

            modelBuilder.Entity<AddNiv9eme>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ADD_NIV_9EME");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.NiveauAccees)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NIVEAU_ACCEES");
            });

            modelBuilder.Entity<AffectationExamen>(entity =>
            {
                entity.HasKey(e => new { e.NumSemestre, e.AnneeDeb, e.CodeCl, e.CodeModule, e.Salle })
                    .HasName("AFFECTATION_EXAMEN_PK");

                entity.ToTable("AFFECTATION_EXAMEN");

                entity.Property(e => e.NumSemestre)
                    .HasColumnType("NUMBER")
                    .HasColumnName("NUM_SEMESTRE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.Salle)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SALLE");

                entity.Property(e => e.DateExamen)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_EXAMEN");

                entity.Property(e => e.Heure)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("HEURE");

                entity.Property(e => e.IdEns)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.NombreHeureExamen)
                    .HasColumnType("NUMBER")
                    .HasColumnName("NOMBRE_HEURE_EXAMEN");

                entity.HasOne(d => d.CodeModuleNavigation)
                    .WithMany(p => p.AffectationExamen)
                    .HasForeignKey(d => d.CodeModule)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("AFFECTATION_EXAMEN_FK2");

                entity.HasOne(d => d.SalleNavigation)
                    .WithMany(p => p.AffectationExamen)
                    .HasForeignKey(d => d.Salle)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("AFFECTATION_EXAMEN_FK3");

                entity.HasOne(d => d.EspModulePanierClasseSaiso)
                    .WithMany(p => p.AffectationExamen)
                    .HasForeignKey(d => new { d.CodeModule, d.CodeCl, d.AnneeDeb, d.NumSemestre })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("AFFECTATION_EXAMEN_FK1");
            });

            modelBuilder.Entity<AspNetRoleClaims>(entity =>
            {
                entity.HasIndex(e => e.RoleId, "IX_AspNetRoleClaims_RoleId");

                entity.Property(e => e.Id).HasPrecision(10);

                entity.Property(e => e.RoleId).IsRequired();

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.AspNetRoleClaims)
                    .HasForeignKey(d => d.RoleId);
            });

            modelBuilder.Entity<AspNetRoles>(entity =>
            {
                entity.HasIndex(e => e.NormalizedName, "RoleNameIndex")
                    .IsUnique();

                entity.Property(e => e.Name).HasMaxLength(256);

                entity.Property(e => e.NormalizedName).HasMaxLength(256);
            });

            modelBuilder.Entity<AspNetUserClaims>(entity =>
            {
                entity.HasIndex(e => e.UserId, "IX_AspNetUserClaims_UserId");

                entity.Property(e => e.Id).HasPrecision(10);

                entity.Property(e => e.UserId).IsRequired();

                entity.HasOne(d => d.User)
                    .WithMany(p => p.AspNetUserClaims)
                    .HasForeignKey(d => d.UserId);
            });

            modelBuilder.Entity<AspNetUserLogins>(entity =>
            {
                entity.HasKey(e => new { e.LoginProvider, e.ProviderKey });

                entity.HasIndex(e => e.UserId, "IX_AspNetUserLogins_UserId");

                entity.Property(e => e.LoginProvider).HasMaxLength(128);

                entity.Property(e => e.ProviderKey).HasMaxLength(128);

                entity.Property(e => e.UserId).IsRequired();

                entity.HasOne(d => d.User)
                    .WithMany(p => p.AspNetUserLogins)
                    .HasForeignKey(d => d.UserId);
            });

            modelBuilder.Entity<AspNetUserRoles>(entity =>
            {
                entity.HasKey(e => new { e.UserId, e.RoleId });

                entity.HasIndex(e => e.RoleId, "IX_AspNetUserRoles_RoleId");

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.AspNetUserRoles)
                    .HasForeignKey(d => d.RoleId);

                entity.HasOne(d => d.User)
                    .WithMany(p => p.AspNetUserRoles)
                    .HasForeignKey(d => d.UserId);
            });

            modelBuilder.Entity<AspNetUserTokens>(entity =>
            {
                entity.HasKey(e => new { e.UserId, e.LoginProvider, e.Name });

                entity.Property(e => e.LoginProvider).HasMaxLength(128);

                entity.Property(e => e.Name).HasMaxLength(128);

                entity.HasOne(d => d.User)
                    .WithMany(p => p.AspNetUserTokens)
                    .HasForeignKey(d => d.UserId);
            });

            modelBuilder.Entity<AspNetUsers>(entity =>
            {
                entity.HasIndex(e => e.NormalizedEmail, "EmailIndex");

                entity.HasIndex(e => e.NormalizedUserName, "UserNameIndex")
                    .IsUnique();

                entity.Property(e => e.AccessFailedCount).HasPrecision(10);

                entity.Property(e => e.Email).HasMaxLength(256);

                entity.Property(e => e.EmailConfirmed).HasPrecision(1);

                entity.Property(e => e.LockoutEnabled).HasPrecision(1);

                entity.Property(e => e.LockoutEnd).HasPrecision(7);

                entity.Property(e => e.NormalizedEmail).HasMaxLength(256);

                entity.Property(e => e.NormalizedUserName).HasMaxLength(256);

                entity.Property(e => e.PhoneNumberConfirmed).HasPrecision(1);

                entity.Property(e => e.TwoFactorEnabled).HasPrecision(1);

                entity.Property(e => e.UserName).HasMaxLength(256);
            });

            modelBuilder.Entity<Champ>(entity =>
            {
                entity.HasKey(e => new { e.CodeStr, e.CodeNome, e.CodeChamp });

                entity.ToTable("CHAMP");

                entity.HasIndex(e => e.ChaCodeStr, "IDX_CODE_STR");

                entity.Property(e => e.CodeStr)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_STR");

                entity.Property(e => e.CodeNome)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODE_NOME");

                entity.Property(e => e.CodeChamp)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CHAMP");

                entity.Property(e => e.ChaCodeStr)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CHA_CODE_STR");

                entity.Property(e => e.Valeur)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("VALEUR");

                entity.HasOne(d => d.C)
                    .WithMany(p => p.Champ)
                    .HasForeignKey(d => new { d.ChaCodeStr, d.CodeChamp })
                    .HasConstraintName("FK_CHAMP_REF_504_CHAMP_ST");

                entity.HasOne(d => d.Code)
                    .WithMany(p => p.Champ)
                    .HasForeignKey(d => new { d.CodeStr, d.CodeNome })
                    .HasConstraintName("FK_CHAMP_REF_495_CODE_NOM");
            });

            modelBuilder.Entity<ChampStr>(entity =>
            {
                entity.HasKey(e => new { e.CodeStr, e.CodeChamp });

                entity.ToTable("CHAMP_STR");

                entity.Property(e => e.CodeStr)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_STR");

                entity.Property(e => e.CodeChamp)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CHAMP");

                entity.Property(e => e.MasqueChamp)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("MASQUE_CHAMP");

                entity.Property(e => e.NomChamp)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_CHAMP");

                entity.HasOne(d => d.CodeStrNavigation)
                    .WithMany(p => p.ChampStr)
                    .HasForeignKey(d => d.CodeStr)
                    .HasConstraintName("FK_CHAMP_ST_REF_483_STR_NOME");
            });

            modelBuilder.Entity<Classe>(entity =>
            {
                entity.HasKey(e => e.CodeCl);

                entity.ToTable("CLASSE");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.AnneeScolaire)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_SCOLAIRE");

                entity.Property(e => e.Categorie)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIE");

                entity.Property(e => e.CodeSpecialite)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_SPECIALITE");

                entity.Property(e => e.DateCr)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_CR");

                entity.Property(e => e.DateDernModif)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_DERN_MODIF");

                entity.Property(e => e.DescriptionCl)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION_CL");

                entity.Property(e => e.Filiere)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FILIERE");

                entity.Property(e => e.FiliereNew)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FILIERE_NEW");

                entity.Property(e => e.LibFiliere)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("LIB_FILIERE");

                entity.Property(e => e.LibSpecialite)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("LIB_SPECIALITE");

                entity.Property(e => e.LibelleCl)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("LIBELLE_CL");

                entity.Property(e => e.Mail)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("MAIL");

                entity.Property(e => e.NiveauAccees)
                    .HasPrecision(1)
                    .HasColumnName("NIVEAU_ACCEES");

                entity.Property(e => e.SallePrincipale)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SALLE_PRINCIPALE");

                entity.Property(e => e.SalleSecondaire2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SALLE_SECONDAIRE_2");

                entity.Property(e => e.SelleSecondaire1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SELLE_SECONDAIRE_1");

                entity.Property(e => e.SiteEsp)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SITE_ESP");
            });

            modelBuilder.Entity<CodeNomenclature>(entity =>
            {
                entity.HasKey(e => new { e.CodeStr, e.CodeNome });

                entity.ToTable("CODE_NOMENCLATURE");

                entity.Property(e => e.CodeStr)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_STR");

                entity.Property(e => e.CodeNome)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODE_NOME");

                entity.Property(e => e.LibNome)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("LIB_NOME");

                entity.HasOne(d => d.CodeStrNavigation)
                    .WithMany(p => p.CodeNomenclature)
                    .HasForeignKey(d => d.CodeStr)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CODE_NOM_REF_490_STR_NOME");
            });

            modelBuilder.Entity<Comite>(entity =>
            {
                entity.HasKey(e => e.IdGrp)
                    .HasName("SYS_C008097");

                entity.ToTable("COMITE");

                entity.Property(e => e.IdGrp)
                    .HasPrecision(10)
                    .ValueGeneratedNever()
                    .HasColumnName("ID_GRP");

                entity.Property(e => e.Dateethour)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("DATEETHOUR");

                entity.Property(e => e.Nom)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("NOM");

                entity.Property(e => e.NomSpecialite)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("NOM_SPECIALITE");

                entity.Property(e => e.Salle)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SALLE");
            });

            modelBuilder.Entity<ComiteSpecialite>(entity =>
            {
                entity.HasKey(e => new { e.ComiteIdGrp, e.SptsId })
                    .HasName("SYS_C008104");

                entity.ToTable("COMITE_SPECIALITE");

                entity.HasIndex(e => e.SptsId, "SYS_C008106")
                    .IsUnique();

                entity.Property(e => e.ComiteIdGrp)
                    .HasPrecision(10)
                    .HasColumnName("COMITE_ID_GRP");

                entity.Property(e => e.SptsId)
                    .HasPrecision(10)
                    .HasColumnName("SPTS_ID");

                entity.HasOne(d => d.ComiteIdGrpNavigation)
                    .WithMany(p => p.ComiteSpecialite)
                    .HasForeignKey(d => d.ComiteIdGrp)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK69C211C735557C51");

                entity.HasOne(d => d.Spts)
                    .WithOne(p => p.ComiteSpecialite)
                    .HasForeignKey<ComiteSpecialite>(d => d.SptsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK69C211C72F0BE4F0");
            });

            modelBuilder.Entity<Comitevalidation>(entity =>
            {
                entity.HasKey(e => e.Idcomitevalidation)
                    .HasName("SYS_C008100");

                entity.ToTable("COMITEVALIDATION");

                entity.Property(e => e.Idcomitevalidation)
                    .HasPrecision(10)
                    .ValueGeneratedNever()
                    .HasColumnName("IDCOMITEVALIDATION");

                entity.Property(e => e.Nom)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("NOM");

                entity.Property(e => e.Specialite)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SPECIALITE");
            });

            modelBuilder.Entity<Commentaire>(entity =>
            {
                entity.HasKey(e => e.IdCommentaire)
                    .HasName("SYS_C008110");

                entity.ToTable("COMMENTAIRE");

                entity.Property(e => e.IdCommentaire)
                    .HasPrecision(10)
                    .ValueGeneratedNever()
                    .HasColumnName("ID_COMMENTAIRE");

                entity.Property(e => e.Absence)
                    .HasPrecision(10)
                    .HasColumnName("ABSENCE");

                entity.Property(e => e.CommentaireText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("COMMENTAIRE_TEXT");

                entity.Property(e => e.EtdIdEt)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ETD_ID_ET");

                entity.HasOne(d => d.EtdIdEtNavigation)
                    .WithMany(p => p.Commentaire)
                    .HasForeignKey(d => d.EtdIdEt)
                    .HasConstraintName("FKE0D0FF1ACE9BE5D6");
            });

            modelBuilder.Entity<ComptCert>(entity =>
            {
                entity.HasKey(e => new { e.Cpt, e.DateCert, e.Heure })
                    .HasName("PK_COMPT");

                entity.ToTable("COMPT_CERT");

                entity.Property(e => e.Cpt)
                    .HasColumnType("NUMBER")
                    .HasColumnName("CPT");

                entity.Property(e => e.DateCert)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_CERT");

                entity.Property(e => e.Heure)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("HEURE");
            });

            modelBuilder.Entity<Compteur>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("COMPTEUR");

                entity.Property(e => e.CodeCpt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CPT");

                entity.Property(e => e.DateCr)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_CR");

                entity.Property(e => e.DateLastModif)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_LAST_MODIF");

                entity.Property(e => e.LibCpt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LIB_CPT");
            });

            modelBuilder.Entity<ConMoy0605>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CON_MOY_0605");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.Observation)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVATION")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<DateEnt>(entity =>
            {
                entity.HasKey(e => e.DateEnt1)
                    .HasName("DATE_ENT_PK");

                entity.ToTable("DATE_ENT");

                entity.Property(e => e.DateEnt1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DATE_ENT1");

                entity.Property(e => e.NombrMax)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("NOMBR_MAX");

                entity.Property(e => e.NombreCondidats)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("NOMBRE_CONDIDATS");
            });

            modelBuilder.Entity<Decid>(entity =>
            {
                entity.HasKey(e => e.IdDecid)
                    .HasName("CONSTRAINT1");

                entity.ToTable("DECID");

                entity.Property(e => e.IdDecid)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ID_DECID");

                entity.Property(e => e.EtatDecid)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_DECID");

                entity.Property(e => e.NomDecid)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_DECID");

                entity.Property(e => e.PwdDecid)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PWD_DECID");

                entity.Property(e => e.TitreDecid)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TITRE_DECID");
            });

            modelBuilder.Entity<DemandeAttestationAlfikr>(entity =>
            {
                entity.HasKey(e => new { e.IdEt, e.DateSaisie })
                    .HasName("DEMANDE_ATTESTATION_ALFIKR_PK");

                entity.ToTable("DEMANDE_ATTESTATION_ALFIKR");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE")
                    .HasDefaultValueSql("sysdate");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CauseAbsece)
                    .IsUnicode(false)
                    .HasColumnName("CAUSE_ABSECE");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.Heure)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("HEURE");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.JourSortie)
                    .HasColumnType("DATE")
                    .HasColumnName("JOUR_SORTIE");

                entity.Property(e => e.NomPereEt)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PERE_ET");

                entity.Property(e => e.NomPrenomPereEt)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRENOM_PERE_ET");

                entity.Property(e => e.NumeroCinPere)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_CIN_PERE");

                entity.Property(e => e.PrenomPereEt)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("PRENOM_PERE_ET");

                entity.Property(e => e.TypeDemande)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_DEMANDE");
            });

            modelBuilder.Entity<Emploisemetud>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("EMPLOISEMETUD");

                entity.Property(e => e.Codemploi)
                    .HasPrecision(19)
                    .HasColumnName("CODEMPLOI");

                entity.Property(e => e.Idet)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("IDET");

                entity.HasOne(d => d.IdetNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.Idet)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKA81A4AFBCEB409AB");
            });

            modelBuilder.Entity<EnteteReclamation>(entity =>
            {
                entity.HasKey(e => new { e.IdEnteteReclamation, e.IdEns })
                    .HasName("CONSTRAINT4");

                entity.ToTable("ENTETE_RECLAMATION");

                entity.Property(e => e.IdEnteteReclamation)
                    .HasColumnType("NUMBER")
                    .HasColumnName("ID_ENTETE_RECLAMATION");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.DateReclamation)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_RECLAMATION");

                entity.Property(e => e.Designation)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DESIGNATION");

                entity.Property(e => e.NomEns)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_ENS");

                entity.Property(e => e.TypeReclamation)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_RECLAMATION");
            });

            modelBuilder.Entity<EspAbsNotTransSite>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_ABS_NOT_TRANS_SITE");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.DateSeance)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DATE_SEANCE");

                entity.Property(e => e.DateTransf)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_TRANSF");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.JustifNotTransf)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("JUSTIF_NOT_TRANSF");

                entity.Property(e => e.NumSeance)
                    .HasPrecision(1)
                    .HasColumnName("NUM_SEANCE");

                entity.Property(e => e.Transferrred)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TRANSFERRRED");
            });

            modelBuilder.Entity<EspAbscence>(entity =>
            {
                entity.HasKey(e => new { e.IdEt, e.CodeModule, e.CodeCl, e.AnneeDeb, e.DateSceance, e.NumSceance });

                entity.ToTable("ESP_ABSCENCE");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.DateSceance)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SCEANCE");

                entity.Property(e => e.NumSceance)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("NUM_SCEANCE");

                entity.Property(e => e.AnneeFin)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_FIN");

                entity.Property(e => e.CodeJustif)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_JUSTIF");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.Justification)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("JUSTIFICATION");

                entity.Property(e => e.LibJustif)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LIB_JUSTIF");

                entity.Property(e => e.NumPanier)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PANIER");

                entity.Property(e => e.Semestre)
                    .HasPrecision(1)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Utilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR");

                entity.HasOne(d => d.IdEtNavigation)
                    .WithMany(p => p.EspAbscence)
                    .HasForeignKey(d => d.IdEt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ESP_ABSC_REFERENCE_ESP_ETUD");
            });

            modelBuilder.Entity<EspAbsence>(entity =>
            {
                entity.ToTable("ESP_ABSENCE");

                entity.Property(e => e.Id)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("ID");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.Crenaux)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("CRENAUX");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE")
                    .HasDefaultValueSql("sysdate");

                entity.Property(e => e.IdClasse)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_CLASSE");

                entity.Property(e => e.IdDate)
                    .HasColumnType("DATE")
                    .HasColumnName("ID_DATE");

                entity.Property(e => e.IdEleve)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ELEVE");

                entity.Property(e => e.IdMat)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_MAT");

                entity.Property(e => e.IdProf)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_PROF");

                entity.Property(e => e.Justifier)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("JUSTIFIER");

                entity.Property(e => e.Motif)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MOTIF");

                entity.Property(e => e.Remarque)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REMARQUE");

                entity.Property(e => e.Semestre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEMESTRE");

                entity.HasOne(d => d.IdEleveNavigation)
                    .WithMany(p => p.EspAbsence)
                    .HasForeignKey(d => d.IdEleve)
                    .HasConstraintName("FK_ABSENCE_ETUDIANT");

                entity.HasOne(d => d.IdMatNavigation)
                    .WithMany(p => p.EspAbsence)
                    .HasForeignKey(d => d.IdMat)
                    .HasConstraintName("FK_ABSENCE_MATIERE");
            });

            modelBuilder.Entity<EspAbsenceEnseignant>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_ABSENCE_ENSEIGNANT");

                entity.HasIndex(e => new { e.IdEns, e.CodeModule, e.AnneeDeb, e.CodeCl, e.Date }, "PK_ABSENCE_ENS")
                    .IsUnique();

                entity.Property(e => e.AnneeDeb)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeCl)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeModule)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.CodeMotif)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MOTIF");

                entity.Property(e => e.Date)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE");

                entity.Property(e => e.Dateabsens)
                    .HasColumnType("DATE")
                    .HasColumnName("DATEABSENS");

                entity.Property(e => e.Emploi)
                    .HasPrecision(19)
                    .HasColumnName("EMPLOI");

                entity.Property(e => e.IdEns)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.Idabsens)
                    .HasPrecision(19)
                    .HasColumnName("IDABSENS");

                entity.Property(e => e.Idens1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("IDENS");

                entity.Property(e => e.Motif)
                    .IsRequired()
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("MOTIF");

                entity.Property(e => e.NbHeures)
                    .HasPrecision(2)
                    .HasColumnName("NB_HEURES");

                entity.Property(e => e.NbMinutes)
                    .HasPrecision(2)
                    .HasColumnName("NB_MINUTES");

                entity.Property(e => e.NumSceance)
                    .HasPrecision(1)
                    .HasColumnName("NUM_SCEANCE");

                entity.Property(e => e.Observation)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVATION");

                entity.Property(e => e.Semestre)
                    .HasPrecision(1)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.TypeAbs)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_ABS");

                entity.Property(e => e.Userid)
                    .HasPrecision(19)
                    .HasColumnName("USERID");

                entity.Property(e => e.Utilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR");

                entity.HasOne(d => d.CodeModuleNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.CodeModule)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ABS_ENS_MODULE");
            });

            modelBuilder.Entity<EspAbsenceList>(entity =>
            {
                entity.ToTable("ESP_ABSENCE_LIST");

                entity.Property(e => e.Id)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("ID");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.Dt)
                    .HasColumnType("DATE")
                    .HasColumnName("DT");

                entity.Property(e => e.Idagent)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDAGENT");

                entity.Property(e => e.Idclasse)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDCLASSE");

                entity.Property(e => e.Idcreneau)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCRENEAU");

                entity.Property(e => e.Idmodule)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDMODULE");

                entity.Property(e => e.Idprof)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDPROF");

                entity.Property(e => e.Semestre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEMESTRE");

                entity.HasOne(d => d.IdmoduleNavigation)
                    .WithMany(p => p.EspAbsenceList)
                    .HasForeignKey(d => d.Idmodule)
                    .HasConstraintName("FK_ABSENCE_LIST_MATIERE");
            });

            modelBuilder.Entity<EspAbsenceNew>(entity =>
            {
                entity.HasKey(e => new { e.IdEt, e.CodeModule, e.CodeCl, e.AnneeDeb, e.DateSeance, e.NumSeance })
                    .HasName("PK_ESP_ABSCENCE_NEW");

                entity.ToTable("ESP_ABSENCE_NEW");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.DateSeance)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SEANCE");

                entity.Property(e => e.NumSeance)
                    .HasColumnType("NUMBER")
                    .HasColumnName("NUM_SEANCE");

                entity.Property(e => e.AConvoquer)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("A_CONVOQUER")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.CodeJustif)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_JUSTIF");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE")
                    .HasDefaultValueSql("SYSDATE");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.Justification)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("JUSTIFICATION")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.LibJustif)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LIB_JUSTIF");

                entity.Property(e => e.Observation)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVATION");

                entity.Property(e => e.Semestre)
                    .HasPrecision(1)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Utilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR");

                entity.HasOne(d => d.IdEtNavigation)
                    .WithMany(p => p.EspAbsenceNew)
                    .HasForeignKey(d => d.IdEt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ABS_NEW__REF_ESP_ETUD");
            });

            modelBuilder.Entity<EspAbsenceTmp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_ABSENCE_TMP");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.AnneeFin)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_FIN");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE");

                entity.Property(e => e.DateSceance)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SCEANCE");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.NumPanier)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PANIER");

                entity.Property(e => e.NumSceance)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("NUM_SCEANCE");

                entity.Property(e => e.Semestre)
                    .HasPrecision(1)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Utilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR");
            });

            modelBuilder.Entity<EspActiviteExtra>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.IdEt, e.TypeActivite })
                    .HasName("ESP_ACTIVITE_EXTRA_PK");

                entity.ToTable("ESP_ACTIVITE_EXTRA");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.TypeActivite)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_ACTIVITE");

                entity.Property(e => e.CodeModule)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE")
                    .HasDefaultValueSql("sysdate");
            });

            modelBuilder.Entity<EspActiviteJoin>(entity =>
            {
                entity.HasKey(e => e.IdEt)
                    .HasName("ESP_ACTIVITE_JOIN_PK");

                entity.ToTable("ESP_ACTIVITE_JOIN");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.Confirmer)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CONFIRMER");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE")
                    .HasDefaultValueSql("sysdate\n   ");
            });

            modelBuilder.Entity<EspAdmis1415>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_ADMIS1415");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.NoteAn)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("NOTE_AN");

                entity.Property(e => e.NoteFr)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("NOTE_FR");

                entity.Property(e => e.NoteQi)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("NOTE_QI");
            });

            modelBuilder.Entity<EspAdmission>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_ADMISSION");

                entity.Property(e => e.AngScore)
                    .HasColumnType("NUMBER(15,6)")
                    .HasColumnName("ANG_SCORE");

                entity.Property(e => e.Anglais)
                    .HasPrecision(15)
                    .HasColumnName("ANGLAIS");

                entity.Property(e => e.AnneeBac)
                    .HasPrecision(15)
                    .HasColumnName("ANNEE_BAC");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.Champ33)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("CHAMP33");

                entity.Property(e => e.CodeSpecOrigine)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("CODE_SPEC_ORIGINE");

                entity.Property(e => e.Colonne1)
                    .HasPrecision(15)
                    .HasColumnName("COLONNE1");

                entity.Property(e => e.Colonne2)
                    .HasPrecision(15)
                    .HasColumnName("COLONNE2");

                entity.Property(e => e.CycleEt)
                    .HasPrecision(15)
                    .HasColumnName("CYCLE_ET");

                entity.Property(e => e.DateBac)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("DATE_BAC");

                entity.Property(e => e.DateNaisEt)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("DATE_NAIS_ET");

                entity.Property(e => e.Entretien)
                    .HasPrecision(15)
                    .HasColumnName("ENTRETIEN");

                entity.Property(e => e.EtabBac)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ETAB_BAC");

                entity.Property(e => e.EtabOrigine)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ETAB_ORIGINE");

                entity.Property(e => e.FrScore)
                    .HasColumnType("NUMBER(15,6)")
                    .HasColumnName("FR_SCORE");

                entity.Property(e => e.Francais)
                    .HasPrecision(15)
                    .HasColumnName("FRANCAIS");

                entity.Property(e => e.Id)
                    .HasPrecision(10)
                    .HasColumnName("ID");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.IdEt2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET2");

                entity.Property(e => e.LibSpecOrigine)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("LIB_SPEC_ORIGINE");

                entity.Property(e => e.MoyBacEt)
                    .HasPrecision(15)
                    .HasColumnName("MOY_BAC_ET");

                entity.Property(e => e.NatureBac)
                    .HasPrecision(15)
                    .HasColumnName("NATURE_BAC");

                entity.Property(e => e.NiveauAcces)
                    .HasPrecision(15)
                    .HasColumnName("NIVEAU_ACCES");

                entity.Property(e => e.NiveauDiplomeSupEt)
                    .HasPrecision(15)
                    .HasColumnName("NIVEAU_DIPLOME_SUP_ET");

                entity.Property(e => e.NomEt)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("NOM_ET");

                entity.Property(e => e.NumLot)
                    .HasPrecision(10)
                    .HasColumnName("NUM_LOT");

                entity.Property(e => e.PnomEt)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PNOM_ET");

                entity.Property(e => e.Qi)
                    .HasPrecision(15)
                    .HasColumnName("QI");

                entity.Property(e => e.QiScore)
                    .HasColumnType("NUMBER(15,6)")
                    .HasColumnName("QI_SCORE");

                entity.Property(e => e.ScoreFinal)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("SCORE_FINAL");

                entity.Property(e => e.Scoreagebac)
                    .HasPrecision(15)
                    .HasColumnName("SCOREAGEBAC");

                entity.Property(e => e.Scorebac)
                    .HasPrecision(15)
                    .HasColumnName("SCOREBAC");

                entity.Property(e => e.Scoreentretien)
                    .HasColumnType("NUMBER(15,6)")
                    .HasColumnName("SCOREENTRETIEN");

                entity.Property(e => e.Scoreexam)
                    .HasColumnType("NUMBER(15,6)")
                    .HasColumnName("SCOREEXAM");

                entity.Property(e => e.Scorefinalentretien)
                    .HasColumnType("NUMBER(15,6)")
                    .HasColumnName("SCOREFINALENTRETIEN");

                entity.Property(e => e.Scoremoybac)
                    .HasPrecision(15)
                    .HasColumnName("SCOREMOYBAC");

                entity.Property(e => e.SpecialiteEspEt)
                    .HasPrecision(15)
                    .HasColumnName("SPECIALITE_ESP_ET");
            });

            modelBuilder.Entity<EspAdreeseMailEtudiant>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_ADREESE_MAIL_ETUDIANT");

                entity.Property(e => e.AdresseMail)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ADRESSE_MAIL");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");
            });

            modelBuilder.Entity<EspAdresseMailEspEtudiant>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_ADRESSE_MAIL_ESP_ETUDIANT");

                entity.Property(e => e.AdresseMailEsp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ADRESSE_MAIL_ESP");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");
            });

            modelBuilder.Entity<EspAffGroupEtudiant>(entity =>
            {
                entity.HasKey(e => new { e.IdGroupe, e.AnneeDeb, e.IdEt })
                    .HasName("PK_AFF_GR");

                entity.ToTable("ESP_AFF_GROUP_ETUDIANT");

                entity.Property(e => e.IdGroupe)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_GROUPE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.DateAffectation)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_AFFECTATION")
                    .HasDefaultValueSql("sysdate");

                entity.HasOne(d => d.EspGroupeProjet)
                    .WithMany(p => p.EspAffGroupEtudiant)
                    .HasForeignKey(d => new { d.IdGroupe, d.AnneeDeb })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AFF_GR");
            });

            modelBuilder.Entity<EspAffectationEmploi>(entity =>
            {
                entity.HasKey(e => new { e.CodeEmploi, e.AnneeDeb })
                    .HasName("ESP_AFFECTATION_EMPLOI_PK");

                entity.ToTable("ESP_AFFECTATION_EMPLOI");

                entity.Property(e => e.CodeEmploi)
                    .HasColumnType("NUMBER(25)")
                    .HasColumnName("CODE_EMPLOI");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeCl)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeModule)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.Cren1)
                    .HasColumnType("NUMBER")
                    .HasColumnName("CREN_1");

                entity.Property(e => e.Cren2)
                    .HasColumnType("NUMBER")
                    .HasColumnName("CREN_2");

                entity.Property(e => e.Etat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.IdEns)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.IdEns2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS2");

                entity.Property(e => e.IdEns3)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS3");

                entity.Property(e => e.IdEns4)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS4");

                entity.Property(e => e.Jours)
                    .HasColumnType("DATE")
                    .HasColumnName("JOURS");

                entity.Property(e => e.SallePrincipale)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SALLE_PRINCIPALE");

                entity.HasOne(d => d.CodeModuleNavigation)
                    .WithMany(p => p.EspAffectationEmploi)
                    .HasForeignKey(d => d.CodeModule)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("ESP_AFFECTATION_EMPLOI_FK2");
            });

            modelBuilder.Entity<EspAideCours>(entity =>
            {
                entity.HasKey(e => new { e.IdEt, e.CodeCl, e.CodeModule, e.DateCours })
                    .HasName("ESP_AIDE_COURS_PK");

                entity.ToTable("ESP_AIDE_COURS");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.DateCours)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_COURS");

                entity.Property(e => e.HeurDebut)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("HEUR_DEBUT");

                entity.Property(e => e.HeurFin)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("HEUR_FIN");

                entity.Property(e => e.NiveauAccees)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NIVEAU_ACCEES");
            });

            modelBuilder.Entity<EspAppreciation>(entity =>
            {
                entity.HasKey(e => new { e.IdEt, e.AnneeDeb, e.Priode, e.CodeDe, e.NiveauScolaires, e.CodeUe })
                    .HasName("ESP_APPRECIATION_PK");

                entity.ToTable("ESP_APPRECIATION");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.Priode)
                    .HasColumnType("NUMBER")
                    .HasColumnName("PRIODE");

                entity.Property(e => e.CodeDe)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DE");

                entity.Property(e => e.NiveauScolaires)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NIVEAU_SCOLAIRES");

                entity.Property(e => e.CodeUe)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_UE");

                entity.Property(e => e.Apreciation)
                    .IsUnicode(false)
                    .HasColumnName("APRECIATION");

                entity.Property(e => e.DateModif)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_MODIF");

                entity.Property(e => e.DateSaisaie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISAIE");

                entity.Property(e => e.Remediation)
                    .IsUnicode(false)
                    .HasColumnName("REMEDIATION");
            });

            modelBuilder.Entity<EspArchivageEtudiant>(entity =>
            {
                entity.HasKey(e => new { e.IdEt, e.TypeArchivage, e.DateArchivage })
                    .HasName("PK_ARCHIVAGE_ET");

                entity.ToTable("ESP_ARCHIVAGE_ETUDIANT");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.TypeArchivage)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_ARCHIVAGE");

                entity.Property(e => e.DateArchivage)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_ARCHIVAGE");

                entity.Property(e => e.IpRchivage)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IP_RCHIVAGE");

                entity.Property(e => e.MachineArchivage)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("MACHINE_ARCHIVAGE");

                entity.Property(e => e.MotifArchivage)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOTIF_ARCHIVAGE");

                entity.Property(e => e.RespArchivage)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RESP_ARCHIVAGE");
            });

            modelBuilder.Entity<EspAssRubEtIns>(entity =>
            {
                entity.HasKey(e => new { e.CodeRub, e.IdEt, e.AnneeDeb, e.DateOp })
                    .HasName("PK_ASS_RUB_ET");

                entity.ToTable("ESP_ASS_RUB_ET_INS");

                entity.Property(e => e.CodeRub)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_RUB");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.DateOp)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_OP");

                entity.Property(e => e.Banque)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BANQUE");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.DateLastModif)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_LAST_MODIF")
                    .HasDefaultValueSql("sysdate");

                entity.Property(e => e.DatePiece)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_PIECE");

                entity.Property(e => e.ModeRglt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MODE_RGLT");

                entity.Property(e => e.MontantOp)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("MONTANT_OP");

                entity.Property(e => e.NumPiece)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PIECE");

                entity.Property(e => e.NumRecu)
                    .HasPrecision(8)
                    .HasColumnName("NUM_RECU");

                entity.Property(e => e.Objet)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("OBJET");

                entity.Property(e => e.UserName)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("USER_NAME");

                entity.HasOne(d => d.CodeRubNavigation)
                    .WithMany(p => p.EspAssRubEtIns)
                    .HasForeignKey(d => d.CodeRub)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ASS_RUB_ET_INS_RUBRIQUE");

                entity.HasOne(d => d.IdEtNavigation)
                    .WithMany(p => p.EspAssRubEtIns)
                    .HasForeignKey(d => d.IdEt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ASS_RUB_ET_INS_ET");
            });

            modelBuilder.Entity<EspAuditAdmission>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.IdEt, e.DateOp })
                    .HasName("PK_AUDIT_ADMISSION");

                entity.ToTable("ESP_AUDIT_ADMISSION");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.DateOp)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_OP");

                entity.Property(e => e.AdresseIp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ADRESSE_IP");

                entity.Property(e => e.ComCol)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COM_COL");

                entity.Property(e => e.NomMachine)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_MACHINE");

                entity.Property(e => e.ValFinal)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VAL_FINAL");

                entity.Property(e => e.ValInit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VAL_INIT");
            });

            modelBuilder.Entity<EspAuditChangeClasse>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.IdEt, e.DateChangementCl })
                    .HasName("PK_CHANGE_CLASSE");

                entity.ToTable("ESP_AUDIT_CHANGE_CLASSE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.DateChangementCl)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_CHANGEMENT_CL");

                entity.Property(e => e.DateInscription)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_INSCRIPTION");

                entity.Property(e => e.IpMachine)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IP_MACHINE");

                entity.Property(e => e.NewCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NEW_CL");

                entity.Property(e => e.NomMachine)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOM_MACHINE");

                entity.Property(e => e.OldCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("OLD_CL");

                entity.Property(e => e.Utilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR");
            });

            modelBuilder.Entity<EspAuditConnexion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_AUDIT_CONNEXION");

                entity.Property(e => e.AdresseIp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ADRESSE_IP");

                entity.Property(e => e.DateConnect)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_CONNECT");

                entity.Property(e => e.NomMachine)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOM_MACHINE");

                entity.Property(e => e.NomProgram)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PROGRAM");

                entity.Property(e => e.Utilisateur)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR");
            });

            modelBuilder.Entity<EspAuditCredit>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.DateOp });

                entity.ToTable("ESP_AUDIT_CREDIT");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.DateOp)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_OP");

                entity.Property(e => e.AdresseIp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ADRESSE_IP");

                entity.Property(e => e.Machine)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("MACHINE");

                entity.Property(e => e.NewValCredit)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("NEW_VAL_CREDIT");

                entity.Property(e => e.OldValCredit)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("OLD_VAL_CREDIT");
            });

            modelBuilder.Entity<EspBilanPrepa>(entity =>
            {
                entity.HasKey(e => new { e.IdEt, e.CodeCl, e.CodeModule, e.AnneeDeb })
                    .HasName("ESP_BILAN_PREPA_PK");

                entity.ToTable("ESP_BILAN_PREPA");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.BilanQ1)
                    .HasColumnType("NUMBER")
                    .HasColumnName("BILAN_Q1");

                entity.Property(e => e.BilanQ10)
                    .HasColumnType("NUMBER")
                    .HasColumnName("BILAN_Q10");

                entity.Property(e => e.BilanQ2)
                    .HasColumnType("NUMBER")
                    .HasColumnName("BILAN_Q2");

                entity.Property(e => e.BilanQ3)
                    .HasColumnType("NUMBER")
                    .HasColumnName("BILAN_Q3");

                entity.Property(e => e.BilanQ4)
                    .HasColumnType("NUMBER")
                    .HasColumnName("BILAN_Q4");

                entity.Property(e => e.BilanQ5)
                    .HasColumnType("NUMBER")
                    .HasColumnName("BILAN_Q5");

                entity.Property(e => e.BilanQ6)
                    .HasColumnType("NUMBER")
                    .HasColumnName("BILAN_Q6");

                entity.Property(e => e.BilanQ7)
                    .HasColumnType("NUMBER")
                    .HasColumnName("BILAN_Q7");

                entity.Property(e => e.BilanQ8)
                    .HasColumnType("NUMBER")
                    .HasColumnName("BILAN_Q8");

                entity.Property(e => e.BilanQ9)
                    .HasColumnType("NUMBER")
                    .HasColumnName("BILAN_Q9");

                entity.Property(e => e.DateMiseJour)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_MISE_JOUR");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE")
                    .HasDefaultValueSql("sysdate");
            });

            modelBuilder.Entity<EspBlacklist>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_BLACKLIST");

                entity.Property(e => e.CaAnnuel)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("CA_ANNUEL");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.MontFrais)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("MONT_FRAIS");

                entity.Property(e => e.MontRegle)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("MONT_REGLE");

                entity.Property(e => e.NomEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_ET");

                entity.Property(e => e.NumCpt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CPT");

                entity.Property(e => e.Paiement)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("PAIEMENT");

                entity.Property(e => e.PnomEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PNOM_ET");

                entity.Property(e => e.ResteSurTaux60)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("RESTE_SUR_TAUX60");

                entity.Property(e => e.SoldeActuel)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("SOLDE_ACTUEL");

                entity.Property(e => e.Taux60)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("TAUX_60");
            });

            modelBuilder.Entity<EspCahierText>(entity =>
            {
                entity.HasKey(e => new { e.IdEns, e.DateSaisie, e.CodeModule, e.CodeCl })
                    .HasName("ESP_CAHIER_TEXT_PK");

                entity.ToTable("ESP_CAHIER_TEXT");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE")
                    .HasDefaultValueSql("sysdate ");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.AnneeDeb)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.DateCt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DATE_CT");

                entity.Property(e => e.NumSeance)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NUM_SEANCE");

                entity.Property(e => e.Sujet)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("SUJET");

                entity.Property(e => e.Titre)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("TITRE");
            });

            modelBuilder.Entity<EspCalcul>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_CALCUL");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.ScoreAnglais)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("SCORE_ANGLAIS");

                entity.Property(e => e.ScoreDossier)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("SCORE_DOSSIER");

                entity.Property(e => e.ScoreEntretien)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("SCORE_ENTRETIEN");

                entity.Property(e => e.ScoreFinal)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("SCORE_FINAL");

                entity.Property(e => e.ScoreFrancais)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("SCORE_FRANCAIS");

                entity.Property(e => e.ScoreQi)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("SCORE_QI");

                entity.Property(e => e.ScoreTest)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("SCORE_TEST");
            });

            modelBuilder.Entity<EspCcna3>(entity =>
            {
                entity.HasKey(e => e.NomJeton);

                entity.ToTable("ESP_CCNA3");

                entity.Property(e => e.NomJeton)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOM_JETON");

                entity.Property(e => e.AdresseEt)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ADRESSE_ET");

                entity.Property(e => e.DateIns)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_INS");

                entity.Property(e => e.DateMisejour)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_MISEJOUR");

                entity.Property(e => e.HeureIns)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("HEURE_INS");

                entity.Property(e => e.IdEt)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.NomEt)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOM_ET");

                entity.Property(e => e.PrenomEt)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRENOM_ET");
            });

            modelBuilder.Entity<EspCertif>(entity =>
            {
                entity.HasKey(e => e.NomJeton);

                entity.ToTable("ESP_CERTIF");

                entity.Property(e => e.NomJeton)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOM_JETON");

                entity.Property(e => e.AdresseEt)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ADRESSE_ET");

                entity.Property(e => e.Classe)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CLASSE");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.DateIns)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_INS");

                entity.Property(e => e.DateMisejour)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_MISEJOUR");

                entity.Property(e => e.HeureIns)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("HEURE_INS");

                entity.Property(e => e.IdEt)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.NomEt)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOM_ET");

                entity.Property(e => e.NoteExam)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("NOTE_EXAM");

                entity.Property(e => e.PrenomEt)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRENOM_ET");
            });

            modelBuilder.Entity<EspComportementDiscpline>(entity =>
            {
                entity.HasKey(e => new { e.DateSaisie, e.IdEt, e.IdEns, e.CodeModule, e.AnneeDeb, e.CodeCl })
                    .HasName("ESP_COMPORTEMENT_DISCPLINE_PK");

                entity.ToTable("ESP_COMPORTEMENT_DISCPLINE");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE")
                    .HasDefaultValueSql("sysdate");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.DateEnreg)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_ENREG");

                entity.Property(e => e.ObsComportement)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBS_COMPORTEMENT");

                entity.Property(e => e.ObsDispline)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBS_DISPLINE");

                entity.Property(e => e.Observation)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVATION");

                entity.Property(e => e.Semestre)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SEMESTRE");
            });

            modelBuilder.Entity<EspCompteur>(entity =>
            {
                entity.HasKey(e => new { e.CodeCpt, e.AnneeCpt })
                    .HasName("PK_COMPTEUR");

                entity.ToTable("ESP_COMPTEUR");

                entity.Property(e => e.CodeCpt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CPT");

                entity.Property(e => e.AnneeCpt)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_CPT");

                entity.Property(e => e.AutoCpt)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AUTO_CPT");

                entity.Property(e => e.DateCreation)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_CREATION");

                entity.Property(e => e.DateLastModif)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_LAST_MODIF");

                entity.Property(e => e.DesignationCpt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DESIGNATION_CPT");

                entity.Property(e => e.NumAuto)
                    .HasPrecision(10)
                    .HasColumnName("NUM_AUTO");

                entity.Property(e => e.TailleCpt)
                    .HasPrecision(4)
                    .HasColumnName("TAILLE_CPT");
            });

            modelBuilder.Entity<EspContrat>(entity =>
            {
                entity.HasKey(e => e.Numord)
                    .HasName("PK_CONTRAT");

                entity.ToTable("ESP_CONTRAT");

                entity.Property(e => e.Numord)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUMORD");

                entity.Property(e => e.Annee)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE");

                entity.Property(e => e.DateEtab)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_ETAB");

                entity.Property(e => e.Diplome)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DIPLOME");

                entity.Property(e => e.Grade)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRADE");

                entity.Property(e => e.IdEns)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.Institution)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("INSTITUTION");
            });

            modelBuilder.Entity<EspConvocation>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.IdEt, e.DateGeneration })
                    .HasName("PK_CONVOCATION");

                entity.ToTable("ESP_CONVOCATION");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.DateGeneration)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_GENERATION")
                    .HasDefaultValueSql("sysdate");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.ConvocationParent)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CONVOCATION_PARENT");

                entity.Property(e => e.DateConvocation)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_CONVOCATION");

                entity.Property(e => e.DateEnvoiMailTel)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_ENVOI_MAIL_TEL");

                entity.Property(e => e.DateReception)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_RECEPTION");

                entity.Property(e => e.Generation)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GENERATION")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.ModeConvocation)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MODE_CONVOCATION");

                entity.Property(e => e.MoisGen)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOIS_GEN");

                entity.Property(e => e.MotifConvocation)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOTIF_CONVOCATION");

                entity.Property(e => e.Moyenne)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOYENNE");

                entity.Property(e => e.NbMinJour)
                    .HasPrecision(3)
                    .HasColumnName("NB_MIN_JOUR");

                entity.Property(e => e.NbMinSeance)
                    .HasPrecision(3)
                    .HasColumnName("NB_MIN_SEANCE");

                entity.Property(e => e.Observation)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVATION");

                entity.Property(e => e.ReponseEt)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("REPONSE_ET");

                entity.HasOne(d => d.IdEtNavigation)
                    .WithMany(p => p.EspConvocation)
                    .HasForeignKey(d => d.IdEt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CONVOCATION_ET");
            });

            modelBuilder.Entity<EspCorrespIdetCompte>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_CORRESP_IDET_COMPTE");

                entity.Property(e => e.Compte)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COMPTE")
                    .IsFixedLength(true);

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<EspCorrespondanceOkFikr>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_CORRESPONDANCE_OK_FIKR");

                entity.Property(e => e.CodeClient)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CLIENT");

                entity.Property(e => e.CompteClient)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COMPTE_CLIENT");
            });

            modelBuilder.Entity<EspCoursSoutienAdmin>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.CodeCl, e.Semestre, e.Jour, e.NumSeance })
                    .HasName("ESP_COURS_SOUTIEN_ADMIN_PK");

                entity.ToTable("ESP_COURS_SOUTIEN_ADMIN");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.Semestre)
                    .HasPrecision(1)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Jour)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("JOUR");

                entity.Property(e => e.NumSeance)
                    .HasPrecision(1)
                    .HasColumnName("NUM_SEANCE");

                entity.Property(e => e.CodeModule)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");
            });

            modelBuilder.Entity<EspCoursSoutienEns>(entity =>
            {
                entity.HasKey(e => new { e.Semestre, e.CodeCl, e.IdEt, e.AnneeDeb, e.IdEns })
                    .HasName("ESP_COURS_SOUTIEN_ENS_PK");

                entity.ToTable("ESP_COURS_SOUTIEN_ENS");

                entity.Property(e => e.Semestre)
                    .HasPrecision(1)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.CodeModule)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");
            });

            modelBuilder.Entity<EspCreditPanier>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_CREDIT_PANIER");

                entity.HasIndex(e => new { e.IdEt, e.NiveauEtCredit, e.NumPanier, e.AnneeDeb, e.TypeCredit }, "ESP_CREDIT_PANIER_X")
                    .IsUnique();

                entity.Property(e => e.AnneeDeb)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL")
                    .IsFixedLength(true);

                entity.Property(e => e.DateValidation)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_VALIDATION");

                entity.Property(e => e.EtatCredit)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_CREDIT")
                    .IsFixedLength(true);

                entity.Property(e => e.IdEt)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.LibPanier)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LIB_PANIER")
                    .IsFixedLength(true);

                entity.Property(e => e.NiveauEtCredit)
                    .HasPrecision(1)
                    .HasColumnName("NIVEAU_ET_CREDIT");

                entity.Property(e => e.NumPanier)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PANIER")
                    .IsFixedLength(true);

                entity.Property(e => e.Semestre)
                    .HasPrecision(1)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.TypeCredit)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_CREDIT")
                    .IsFixedLength(true);

                entity.Property(e => e.Utilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<EspCritereEval>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_CRITERE_EVAL");

                entity.HasIndex(e => e.CodeCritere, "ESP_CRITERE_EVAL_X")
                    .IsUnique();

                entity.Property(e => e.CodeCritere)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CRITERE")
                    .IsFixedLength(true);

                entity.Property(e => e.LibCritere)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("LIB_CRITERE")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<EspDept>(entity =>
            {
                entity.HasKey(e => e.CodeDept)
                    .HasName("ESP_DEPT_PK");

                entity.ToTable("ESP_DEPT");

                entity.Property(e => e.CodeDept)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DEPT");

                entity.Property(e => e.DateCr)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_CR");

                entity.Property(e => e.DateDernierModif)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_DERNIER_MODIF");

                entity.Property(e => e.LibelleDept)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LIBELLE_DEPT");
            });

            modelBuilder.Entity<EspDescpline>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.NiveauScolaires, e.DomaineEns })
                    .HasName("ESP_DESCPLINE_PK");

                entity.ToTable("ESP_DESCPLINE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.NiveauScolaires)
                    .HasColumnType("NUMBER")
                    .HasColumnName("NIVEAU_SCOLAIRES");

                entity.Property(e => e.DomaineEns)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DOMAINE_ENS");

                entity.Property(e => e.DateModif)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_MODIF")
                    .HasDefaultValueSql("sysdate");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE")
                    .HasDefaultValueSql("sysdate");
            });

            modelBuilder.Entity<EspDetailContrat>(entity =>
            {
                entity.HasKey(e => new { e.Numord, e.CodeCl, e.CodeModule })
                    .HasName("PK_DETAIL_CONTRAT");

                entity.ToTable("ESP_DETAIL_CONTRAT");

                entity.Property(e => e.Numord)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUMORD");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.NbHeures)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURES");

                entity.Property(e => e.Periode)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("PERIODE");

                entity.HasOne(d => d.CodeClNavigation)
                    .WithMany(p => p.EspDetailContrat)
                    .HasForeignKey(d => d.CodeCl)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DETAIL_C_CLASSE");

                entity.HasOne(d => d.CodeModuleNavigation)
                    .WithMany(p => p.EspDetailContrat)
                    .HasForeignKey(d => d.CodeModule)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DETAIL_C_MODULE");
            });

            modelBuilder.Entity<EspDetailResultat>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_DETAIL_RESULTAT");

                entity.Property(e => e.Activitesdiverses)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ACTIVITESDIVERSES");

                entity.Property(e => e.Codemati)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODEMATI");

                entity.Property(e => e.Coefmati)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("COEFMATI");

                entity.Property(e => e.Dc1)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("DC1");

                entity.Property(e => e.Dc2)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("DC2");

                entity.Property(e => e.Ds)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("DS");

                entity.Property(e => e.Effort)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("EFFORT");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.Libematifr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LIBEMATIFR");

                entity.Property(e => e.Moyemati)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("MOYEMATI");

                entity.Property(e => e.Moyenneoraux)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MOYENNEORAUX");

                entity.Property(e => e.NomEns)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOM_ENS");

                entity.Property(e => e.Notesuivi)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NOTESUIVI");

                entity.Property(e => e.Oral)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ORAL");

                entity.Property(e => e.Projectwork)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("PROJECTWORK");

                entity.Property(e => e.Rangmati)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RANGMATI");

                entity.Property(e => e.Test)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TEST");

                entity.Property(e => e.Tp1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TP1");

                entity.Property(e => e.Tp2)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TP2");

                entity.Property(e => e.Typeep)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("TYPEEP");
            });

            modelBuilder.Entity<EspDevoirsMaison>(entity =>
            {
                entity.HasKey(e => new { e.IdEns, e.AnneeDeb, e.CodeCl, e.CodeModule })
                    .HasName("ESP_DEVOIRS_MAISON_PK");

                entity.ToTable("ESP_DEVOIRS_MAISON");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.DateCt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DATE_CT");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE")
                    .HasDefaultValueSql("sysdate ");

                entity.Property(e => e.NumSeance)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_SEANCE");

                entity.Property(e => e.Sujet)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("SUJET");

                entity.Property(e => e.Titre)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("TITRE");
            });

            modelBuilder.Entity<EspDirection>(entity =>
            {
                entity.HasKey(e => e.IdDr)
                    .HasName("PK_DIRECTION");

                entity.ToTable("ESP_DIRECTION");

                entity.Property(e => e.IdDr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_DR");

                entity.Property(e => e.AdresseMailEsp)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ADRESSE_MAIL_ESP");

                entity.Property(e => e.CinPass)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CIN_PASS");

                entity.Property(e => e.DateRec)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_REC");

                entity.Property(e => e.Diplome)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIPLOME");

                entity.Property(e => e.NomDr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOM_DR");

                entity.Property(e => e.PnomDr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PNOM_DR");

                entity.Property(e => e.Tel)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TEL");

                entity.Property(e => e.TitreDr)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("TITRE_DR");
            });

            modelBuilder.Entity<EspDispClass>(entity =>
            {
                entity.ToTable("ESP_DISP_CLASS");

                entity.Property(e => e.Id)
                    .HasPrecision(19)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Codjour)
                    .HasPrecision(19)
                    .HasColumnName("CODJOUR");

                entity.Property(e => e.Codsal)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("CODSAL");

                entity.Property(e => e.Codseance)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("CODSEANCE");

                entity.Property(e => e.Idsem)
                    .HasPrecision(19)
                    .HasColumnName("IDSEM");

                entity.Property(e => e.Idsemaine)
                    .HasPrecision(19)
                    .HasColumnName("IDSEMAINE");

                entity.Property(e => e.Iduser)
                    .HasPrecision(19)
                    .HasColumnName("IDUSER");

                entity.Property(e => e.Motifdisp)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("MOTIFDISP");

                entity.HasOne(d => d.CodsalNavigation)
                    .WithMany(p => p.EspDispClass)
                    .HasForeignKey(d => d.Codsal)
                    .HasConstraintName("FKE48E4F783D8A13D8");
            });

            modelBuilder.Entity<EspDispenseEtudiant>(entity =>
            {
                entity.HasKey(e => new { e.IdEt, e.CodeModule, e.AnneeDeb, e.Semestre })
                    .HasName("PK_DISPENSE");

                entity.ToTable("ESP_DISPENSE_ETUDIANT");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.Semestre)
                    .HasPrecision(1)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.DateDebutDispense)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_DEBUT_DISPENSE");

                entity.Property(e => e.Moyenne)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOYENNE");

                entity.Property(e => e.Observation)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVATION");
            });

            modelBuilder.Entity<EspDisponibiliteEns>(entity =>
            {
                entity.HasKey(e => new { e.IdDispo, e.AnneeDeb })
                    .HasName("PK_DISPO");

                entity.ToTable("ESP_DISPONIBILITE_ENS");

                entity.Property(e => e.IdDispo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_DISPO");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.Disponible)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DISPONIBLE")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.Jours)
                    .HasColumnType("DATE")
                    .HasColumnName("JOURS");

                entity.Property(e => e.SeanceD)
                    .HasColumnType("NUMBER")
                    .HasColumnName("SEANCE_D");

                entity.Property(e => e.SeanceF)
                    .HasColumnType("NUMBER")
                    .HasColumnName("SEANCE_F");
            });

            modelBuilder.Entity<EspDomaineEnseignement>(entity =>
            {
                entity.HasKey(e => new { e.Priode, e.AnneeDeb, e.NiveauScolaires, e.DomaineEnseigement, e.UeEnseignement })
                    .HasName("ESP_DOMAINE_ENSEIGNEMENT_PK");

                entity.ToTable("ESP_DOMAINE_ENSEIGNEMENT");

                entity.Property(e => e.Priode)
                    .HasColumnType("NUMBER")
                    .HasColumnName("PRIODE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.NiveauScolaires)
                    .HasColumnType("NUMBER")
                    .HasColumnName("NIVEAU_SCOLAIRES");

                entity.Property(e => e.DomaineEnseigement)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DOMAINE_ENSEIGEMENT");

                entity.Property(e => e.UeEnseignement)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("UE_ENSEIGNEMENT");

                entity.Property(e => e.DateModif)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_MODIF");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE")
                    .HasDefaultValueSql("sysdate");

                entity.Property(e => e.DescriptionUe)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION_UE");
            });

            modelBuilder.Entity<EspDossiersScolaires>(entity =>
            {
                entity.HasKey(e => new { e.IdEt, e.AnneeDeb, e.CodePiece })
                    .HasName("ESP_DOSSIERS_SCOLAIRES_PK");

                entity.ToTable("ESP_DOSSIERS_SCOLAIRES");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodePiece)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_PIECE");

                entity.Property(e => e.Etat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT")
                    .HasDefaultValueSql("'N'");
            });

            modelBuilder.Entity<EspEmploi>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.Semestre, e.CodeCl, e.NumSeance, e.Jour, e.TypeSeance });

                entity.ToTable("ESP_EMPLOI");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.Semestre)
                    .HasColumnType("NUMBER")
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.NumSeance)
                    .HasColumnType("NUMBER")
                    .HasColumnName("NUM_SEANCE");

                entity.Property(e => e.Jour)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("JOUR");

                entity.Property(e => e.TypeSeance)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_SEANCE")
                    .HasDefaultValueSql("'N' ");

                entity.Property(e => e.CodeModule)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE")
                    .HasDefaultValueSql("sysdate \n");
            });

            modelBuilder.Entity<EspEncadrement>(entity =>
            {
                entity.HasKey(e => new { e.IdProjet, e.IdEt, e.DateEnc })
                    .HasName("CONSTRAINT18");

                entity.ToTable("ESP_ENCADREMENT");

                entity.Property(e => e.IdProjet)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_PROJET");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.DateEnc)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_ENC");

                entity.Property(e => e.AnneeDeb)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.AvAng)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("AV_ANG");

                entity.Property(e => e.AvCc)
                    .HasPrecision(3)
                    .HasColumnName("AV_CC");

                entity.Property(e => e.AvFr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("AV_FR");

                entity.Property(e => e.AvRapport)
                    .HasPrecision(3)
                    .HasColumnName("AV_RAPPORT");

                entity.Property(e => e.AvTech)
                    .HasPrecision(3)
                    .HasColumnName("AV_TECH");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.Comportement)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("COMPORTEMENT");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE");

                entity.Property(e => e.Duree)
                    .HasColumnType("DATE")
                    .HasColumnName("DUREE");

                entity.Property(e => e.HeureDeb)
                    .HasColumnType("DATE")
                    .HasColumnName("HEURE_DEB");

                entity.Property(e => e.HeureFin)
                    .HasPrecision(6)
                    .HasColumnName("HEURE_FIN");

                entity.Property(e => e.IdEns)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.ObsAnglais)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("OBS_ANGLAIS");

                entity.Property(e => e.ObsCc)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("OBS_CC");

                entity.Property(e => e.ObsFrancais)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("OBS_FRANCAIS");

                entity.Property(e => e.ObsRapport)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("OBS_RAPPORT");

                entity.Property(e => e.ObsTech)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("OBS_TECH");

                entity.Property(e => e.RemarqueObs)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("REMARQUE_OBS");

                entity.Property(e => e.TravauxDemande)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("TRAVAUX_DEMANDE");

                entity.Property(e => e.TypeProjet)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_PROJET");
            });

            modelBuilder.Entity<EspEncadrementGp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_ENCADREMENT_GP");

                entity.Property(e => e.AnneeDeb)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.AvAng)
                    .HasPrecision(3)
                    .HasColumnName("AV_ANG");

                entity.Property(e => e.AvCc)
                    .HasPrecision(3)
                    .HasColumnName("AV_CC");

                entity.Property(e => e.AvFr)
                    .HasPrecision(3)
                    .HasColumnName("AV_FR");

                entity.Property(e => e.AvRapport)
                    .HasPrecision(3)
                    .HasColumnName("AV_RAPPORT");

                entity.Property(e => e.AvTech)
                    .HasPrecision(3)
                    .HasColumnName("AV_TECH");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.Comportement)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("COMPORTEMENT");

                entity.Property(e => e.DateEnc)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_ENC");

                entity.Property(e => e.Duree)
                    .HasColumnType("DATE")
                    .HasColumnName("DUREE");

                entity.Property(e => e.HeureDeb)
                    .HasColumnType("DATE")
                    .HasColumnName("HEURE_DEB");

                entity.Property(e => e.HeureFin)
                    .HasColumnType("DATE")
                    .HasColumnName("HEURE_FIN");

                entity.Property(e => e.IdEns)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.IdGroupeProjet)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("ID_GROUPE_PROJET");

                entity.Property(e => e.IdProjet)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_PROJET");

                entity.Property(e => e.NoteGroupe)
                    .HasPrecision(3)
                    .HasColumnName("NOTE_GROUPE");

                entity.Property(e => e.RemarqueObs)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("REMARQUE_OBS");

                entity.Property(e => e.TravauxDemande)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("TRAVAUX_DEMANDE");

                entity.Property(e => e.TypeProjet)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_PROJET");
            });

            modelBuilder.Entity<EspEnseignant>(entity =>
            {
                entity.HasKey(x=>x.IdEns);

                entity.ToTable("ESP_ENSEIGNANT");

                entity.Property(e => e.ChefDept)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHEF_DEPT");

                entity.Property(e => e.Chefcomite)
                    .HasPrecision(10)
                    .HasColumnName("CHEFCOMITE");

                entity.Property(e => e.Cin)
                    .HasPrecision(8)
                    .HasColumnName("CIN");

                entity.Property(e => e.CnssEns)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CNSS_ENS");

                entity.Property(e => e.CodeDept)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DEPT");

                entity.Property(e => e.CodeEnsEduserv)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_ENS_EDUSERV");

                entity.Property(e => e.CodeGradeActuel)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_GRADE_ACTUEL");

                entity.Property(e => e.CodeGradeEntree)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_GRADE_ENTREE");

                entity.Property(e => e.ComiteIdGrp)
                    .HasPrecision(10)
                    .HasColumnName("COMITE_ID_GRP");

                entity.Property(e => e.DateDebUp)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_DEB_UP");

                entity.Property(e => e.DateDernModif)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_DERN_MODIF");

                entity.Property(e => e.DateRec)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_REC");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE");

                entity.Property(e => e.DeEns)
                    .HasColumnType("DATE")
                    .HasColumnName("DE_ENS");

                entity.Property(e => e.Diplome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DIPLOME");

                entity.Property(e => e.DnEns)
                    .HasColumnType("DATE")
                    .HasColumnName("DN_ENS");

                entity.Property(e => e.DsEns)
                    .HasColumnType("DATE")
                    .HasColumnName("DS_ENS");

                entity.Property(e => e.Etat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT");

                entity.Property(e => e.EtatCivilEns)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_CIVIL_ENS");

                entity.Property(e => e.FkCmt)
                    .HasPrecision(10)
                    .HasColumnName("FK_CMT");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.Image)
                    .HasColumnType("BLOB")
                    .HasColumnName("IMAGE");

                entity.Property(e => e.LibGradeActuelle)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("LIB_GRADE_ACTUELLE");

                entity.Property(e => e.LibGradeEntree)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("LIB_GRADE_ENTREE");

                entity.Property(e => e.MailEns)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MAIL_ENS");

                entity.Property(e => e.Niveau)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NIVEAU");

                entity.Property(e => e.Nom)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM");

                entity.Property(e => e.NomEns)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_ENS");

                entity.Property(e => e.Observation)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVATION");

                entity.Property(e => e.Organisme)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORGANISME");

                entity.Property(e => e.Pnom)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PNOM");

                entity.Property(e => e.PrenomEns)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRENOM_ENS");

                entity.Property(e => e.PwdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PWD_ENS");

                entity.Property(e => e.PwdInit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PWD_INIT");

                entity.Property(e => e.SexeEns)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SEXE_ENS");

                entity.Property(e => e.Tel1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TEL1");

                entity.Property(e => e.Tel2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TEL2");

                entity.Property(e => e.TypeEns)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_ENS");

                entity.Property(e => e.TypeUp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_UP");

                entity.Property(e => e.Up)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UP");
            });

            modelBuilder.Entity<EspEnseignantAbs>(entity =>
            {
                entity.HasKey(e => new { e.IdEns, e.DateAbs, e.CodeModule, e.CodeCl, e.NumSeance, e.AnneeDeb, e.Semestre })
                    .HasName("ESP_ENSEIGNANT_ABS_PK");

                entity.ToTable("ESP_ENSEIGNANT_ABS");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.DateAbs)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_ABS");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.NumSeance)
                    .HasPrecision(1)
                    .HasColumnName("NUM_SEANCE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.Semestre)
                    .HasPrecision(1)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.CodeMotif)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MOTIF");

                entity.Property(e => e.Motif)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("MOTIF");

                entity.Property(e => e.NbHeures)
                    .HasPrecision(1)
                    .HasColumnName("NB_HEURES");

                entity.Property(e => e.NbMinutes)
                    .HasPrecision(2)
                    .HasColumnName("NB_MINUTES");

                entity.Property(e => e.Observation)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVATION");

                entity.Property(e => e.TypeAbs)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_ABS");

                entity.Property(e => e.Utilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR");
            });

            modelBuilder.Entity<EspEnseignantFichepfe>(entity =>
            {
                entity.HasKey(e => new { e.EspEnseignantIdEns, e.FichepfesIdFiche })
                    .HasName("SYS_C008376");

                entity.ToTable("ESP_ENSEIGNANT_FICHEPFE");

                entity.HasIndex(e => e.FichepfesIdFiche, "SYS_C008378")
                    .IsUnique();

                entity.Property(e => e.EspEnseignantIdEns)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ESP_ENSEIGNANT_ID_ENS");

                entity.Property(e => e.FichepfesIdFiche)
                    .HasPrecision(10)
                    .HasColumnName("FICHEPFES_ID_FICHE");

                entity.HasOne(d => d.FichepfesIdFicheNavigation)
                    .WithOne(p => p.EspEnseignantFichepfe)
                    .HasForeignKey<EspEnseignantFichepfe>(d => d.FichepfesIdFiche)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK56CF89027D3DBFA");
            });

            modelBuilder.Entity<EspEnteteAbsence>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.CodeModule, e.NumSeance, e.DateSeance, e.CodeCl })
                    .HasName("PK_ENTETE_ABSENCE_ESP_ENTE");

                entity.ToTable("ESP_ENTETE_ABSENCE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.NumSeance)
                    .HasColumnType("NUMBER")
                    .HasColumnName("NUM_SEANCE");

                entity.Property(e => e.DateSeance)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SEANCE");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.DateLastModif)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_LAST_MODIF")
                    .HasDefaultValueSql("SYSDATE");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE")
                    .HasDefaultValueSql("SYSDATE");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.Semestre)
                    .HasPrecision(1)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Utilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR");

                entity.HasOne(d => d.CodeModuleNavigation)
                    .WithMany(p => p.EspEnteteAbsence)
                    .HasForeignKey(d => d.CodeModule)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ESP_ENTE_REFERENCE_ESP_MODU");
            });

            modelBuilder.Entity<EspEnteteNote>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.CodeCl, e.CodeModule, e.Semestre });

                entity.ToTable("ESP_ENTETE_NOTE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.Semestre)
                    .HasPrecision(1)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.AnneeFin)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_FIN");

                entity.Property(e => e.Coef)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("COEF");

                entity.Property(e => e.ConfRattrapage)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RATTRAPAGE");

                entity.Property(e => e.ConfirmNew)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CONFIRM_NEW");

                entity.Property(e => e.Confirmation)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CONFIRMATION");

                entity.Property(e => e.DateConfRatt)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_CONF_RATT");

                entity.Property(e => e.DateConfirmation)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_CONFIRMATION");

                entity.Property(e => e.DateDeroulement)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_DEROULEMENT");

                entity.Property(e => e.DateLastModif)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_LAST_MODIF");

                entity.Property(e => e.DateRatrap)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_RATRAP");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE");

                entity.Property(e => e.ExisteNoteCc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXISTE_NOTE_CC");

                entity.Property(e => e.ExisteNoteTp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXISTE_NOTE_TP");

                entity.Property(e => e.IdEns)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.NatureNote)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_NOTE");

                entity.Property(e => e.NbHeure)
                    .HasPrecision(2)
                    .HasColumnName("NB_HEURE");

                entity.Property(e => e.NumPanier)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PANIER");

                entity.Property(e => e.Numpromotioncs)
                    .HasPrecision(4)
                    .HasColumnName("NUMPROMOTIONCS");

                entity.Property(e => e.Observation)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVATION");

                entity.Property(e => e.TatouageEns)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TATOUAGE_ENS");

                entity.Property(e => e.TauxCc)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("TAUX_CC");

                entity.Property(e => e.TauxCcLang)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("TAUX_CC_LANG");

                entity.Property(e => e.TauxEcritLang)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("TAUX_ECRIT_LANG");

                entity.Property(e => e.TauxExam)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("TAUX_EXAM");

                entity.Property(e => e.TauxOralLang)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("TAUX_ORAL_LANG");

                entity.Property(e => e.TauxTp)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("TAUX_TP");

                entity.Property(e => e.TypeSession)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_SESSION");

                entity.Property(e => e.UserConfirm)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("USER_CONFIRM");

                entity.Property(e => e.UserConfirmRatt)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("USER_CONFIRM_RATT");

                entity.Property(e => e.UserLastModif)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("USER_LAST_MODIF");

                entity.Property(e => e.UserName)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("USER_NAME");

                entity.HasOne(d => d.CodeModuleNavigation)
                    .WithMany(p => p.EspEnteteNote)
                    .HasForeignKey(d => d.CodeModule)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ENTE_NOTE_REF_MODULE");
            });

            modelBuilder.Entity<EspEnteteNoteRat>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.CodeModule, e.TypeRat, e.DateDeroulement })
                    .HasName("PK_ENTETE_NOTE_RAT");

                entity.ToTable("ESP_ENTETE_NOTE_RAT");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.TypeRat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_RAT");

                entity.Property(e => e.DateDeroulement)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_DEROULEMENT");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.NbHeure)
                    .HasColumnType("NUMBER(3,1)")
                    .HasColumnName("NB_HEURE");

                entity.Property(e => e.Observation)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVATION");

                entity.Property(e => e.Semestre)
                    .HasPrecision(1)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Utilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR");
            });

            modelBuilder.Entity<EspEtNotTransfFin>(entity =>
            {
                entity.HasKey(e => e.IdEt)
                    .HasName("PK_ET_NOT_TRANS");

                entity.ToTable("ESP_ET_NOT_TRANSF_FIN");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE");

                entity.Property(e => e.DateTransf)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_TRANSF");

                entity.Property(e => e.JustifNotTransf)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("JUSTIF_NOT_TRANSF");

                entity.Property(e => e.Numcompte)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUMCOMPTE");

                entity.Property(e => e.Transferrred)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TRANSFERRRED");
            });

            modelBuilder.Entity<EspEtudiant>(entity =>
            {
                entity.HasKey(e => e.IdEt);

                entity.ToTable("ESP_ETUDIANT");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.AdresseEt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ADRESSE_ET");

                entity.Property(e => e.AdresseMailEsp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ADRESSE_MAIL_ESP");

                entity.Property(e => e.AdresseParent)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ADRESSE_PARENT");

                entity.Property(e => e.Agent)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("AGENT");

                entity.Property(e => e.AnneeBac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_BAC");

                entity.Property(e => e.AnneeDiplome)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DIPLOME");

                entity.Property(e => e.AnneeEntreeEspEt)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_ENTREE_ESP_ET");

                entity.Property(e => e.Banque)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BANQUE");

                entity.Property(e => e.ChoixAB)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CHOIX_A_B");

                entity.Property(e => e.ClasseCouranteEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CLASSE_COURANTE_ET");

                entity.Property(e => e.ClassePrecEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CLASSE_PREC_ET");

                entity.Property(e => e.CodeBarre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_BARRE");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeDecisionSessionPAp1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_SESSION_P_AP1");

                entity.Property(e => e.CodeDecisionSessionPAp2)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_SESSION_P_AP2");

                entity.Property(e => e.CodeDecisionSessionPAp3)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_SESSION_P_AP3");

                entity.Property(e => e.CodeDecisionSessionRAp1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_SESSION_R_AP1");

                entity.Property(e => e.CodeDecisionSessionRAp2)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_SESSION_R_AP2");

                entity.Property(e => e.CodeDecisionSessionRAp3)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_SESSION_R_AP3");

                entity.Property(e => e.CodeEtabOrigine)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODE_ETAB_ORIGINE");

                entity.Property(e => e.CodeGouvernorat)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_GOUVERNORAT");

                entity.Property(e => e.CodeNationalite)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_NATIONALITE");

                entity.Property(e => e.CodeRfid)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_RFID");

                entity.Property(e => e.CodeSpecOrigine)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODE_SPEC_ORIGINE");

                entity.Property(e => e.ComiteIdGrp)
                    .HasPrecision(10)
                    .HasColumnName("COMITE_ID_GRP");

                entity.Property(e => e.CpEt)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CP_ET");

                entity.Property(e => e.CpParent)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CP_PARENT");

                entity.Property(e => e.CycleEt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CYCLE_ET");

                entity.Property(e => e.DateBac)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_BAC");

                entity.Property(e => e.DateDelivrance)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_DELIVRANCE");

                entity.Property(e => e.DateDernModif)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_DERN_MODIF");

                entity.Property(e => e.DateEntreeEspEt)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_ENTREE_ESP_ET");

                entity.Property(e => e.DateLastChangeEtat)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_LAST_CHANGE_ETAT");

                entity.Property(e => e.DateLieuNais)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DATE_LIEU_NAIS");

                entity.Property(e => e.DateNaisEt)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_NAIS_ET");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE");

                entity.Property(e => e.DateSortieEt)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SORTIE_ET");

                entity.Property(e => e.DateTransfPreinscrit)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_TRANSF_PREINSCRIT");

                entity.Property(e => e.Dateentr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DATEENTR");

                entity.Property(e => e.DernUtilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("DERN_UTILISATEUR");

                entity.Property(e => e.DiplomeObtenuEspEt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DIPLOME_OBTENU_ESP_ET");

                entity.Property(e => e.DiplomeSupEt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIPLOME_SUP_ET");

                entity.Property(e => e.EMailEt)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL_ET");

                entity.Property(e => e.EMailParent)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL_PARENT");

                entity.Property(e => e.EmailMereEt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL_MERE_ET");

                entity.Property(e => e.EmailPereEt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL_PERE_ET");

                entity.Property(e => e.EnsIdEns)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ENS_ID_ENS");

                entity.Property(e => e.EntretienAnglais)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("ENTRETIEN_ANGLAIS");

                entity.Property(e => e.EntretienFrancais)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("ENTRETIEN_FRANCAIS");

                entity.Property(e => e.EtabBac)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ETAB_BAC");

                entity.Property(e => e.EtabOrigine)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ETAB_ORIGINE");

                entity.Property(e => e.Etat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT")
                    .HasDefaultValueSql("'A'");

                entity.Property(e => e.FilierePrepa)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FILIERE_PREPA");

                entity.Property(e => e.FkEns)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FK_ENS");

                entity.Property(e => e.FkEnsei)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FK_ENSEI");

                entity.Property(e => e.FonctionEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FONCTION_ET");

                entity.Property(e => e.FonctionMereEt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FONCTION_MERE_ET");

                entity.Property(e => e.FonctionPereEt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FONCTION_PERE_ET");

                entity.Property(e => e.Gouvernorat)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GOUVERNORAT");

                entity.Property(e => e.GroupeTarif)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GROUPE_TARIF");

                entity.Property(e => e.IdEleveEduserv)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ELEVE_EDUSERV");

                entity.Property(e => e.IdEtNew)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET_NEW");

                entity.Property(e => e.IdEtOrigin)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET_ORIGIN");

                entity.Property(e => e.IdEtOrigine)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET_ORIGINE");

                entity.Property(e => e.JustifEtat)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("JUSTIF_ETAT");

                entity.Property(e => e.LibDecisionSessionPAp1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION_SESSION_P_AP1");

                entity.Property(e => e.LibDecisionSessionPAp2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION_SESSION_P_AP2");

                entity.Property(e => e.LibDecisionSessionPAp3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION_SESSION_P_AP3");

                entity.Property(e => e.LibDecisionSessionRAp1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION_SESSION_R_AP1");

                entity.Property(e => e.LibDecisionSessionRAp2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION_SESSION_R_AP2");

                entity.Property(e => e.LibDecisionSessionRAp3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION_SESSION_R_AP3");

                entity.Property(e => e.LibFilierePrepa)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LIB_FILIERE_PREPA");

                entity.Property(e => e.LibJustifEtat)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("LIB_JUSTIF_ETAT");

                entity.Property(e => e.LibSpecOrigine)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("LIB_SPEC_ORIGINE");

                entity.Property(e => e.LieuDelivrance)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("LIEU_DELIVRANCE");

                entity.Property(e => e.LieuNaisEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("LIEU_NAIS_ET");

                entity.Property(e => e.Login)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LOGIN");

                entity.Property(e => e.MoyBac)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_BAC");

                entity.Property(e => e.MoyBacEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MOY_BAC_ET");

                entity.Property(e => e.MoyBacEt2)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_BAC_ET2")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.MoyPAp1)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_P_AP1");

                entity.Property(e => e.MoyPAp2)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_P_AP2");

                entity.Property(e => e.MoyPAp3)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_P_AP3");

                entity.Property(e => e.MoyRAp1)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_R_AP1");

                entity.Property(e => e.MoyRAp2)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_R_AP2");

                entity.Property(e => e.MoyRAp3)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_R_AP3");

                entity.Property(e => e.MoyenneDernSemestreEt)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOYENNE_DERN_SEMESTRE_ET");

                entity.Property(e => e.Mp08)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MP08");

                entity.Property(e => e.Nationalite)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NATIONALITE");

                entity.Property(e => e.NatureBac)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_BAC");

                entity.Property(e => e.NatureCours)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_COURS");

                entity.Property(e => e.NatureEt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_ET");

                entity.Property(e => e.NaturePieceId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_PIECE_ID");

                entity.Property(e => e.NbImpReleve)
                    .HasPrecision(2)
                    .HasColumnName("NB_IMP_RELEVE");

                entity.Property(e => e.NiveauAcces)
                    .HasPrecision(1)
                    .HasColumnName("NIVEAU_ACCES");

                entity.Property(e => e.NiveauCourantAng)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NIVEAU_COURANT_ANG");

                entity.Property(e => e.NiveauCourantEt)
                    .HasPrecision(1)
                    .HasColumnName("NIVEAU_COURANT_ET");

                entity.Property(e => e.NiveauCourantFr)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NIVEAU_COURANT_FR");

                entity.Property(e => e.NiveauDiplomeSupEt)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("NIVEAU_DIPLOME_SUP_ET");

                entity.Property(e => e.NomEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_ET");

                entity.Property(e => e.NomMereEt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOM_MERE_ET");

                entity.Property(e => e.NomPereEt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PERE_ET");

                entity.Property(e => e.NumBacEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_BAC_ET");

                entity.Property(e => e.NumCinPasseport)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CIN_PASSEPORT");

                entity.Property(e => e.NumLot)
                    .HasPrecision(1)
                    .HasColumnName("NUM_LOT");

                entity.Property(e => e.NumOrd)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ORD");

                entity.Property(e => e.Numcompte)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUMCOMPTE");

                entity.Property(e => e.Numpromotioncs)
                    .HasPrecision(4)
                    .HasColumnName("NUMPROMOTIONCS");

                entity.Property(e => e.ObservationEt)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVATION_ET");

                entity.Property(e => e.Password)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PASSWORD");

                entity.Property(e => e.PaysEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PAYS_ET");

                entity.Property(e => e.PaysParent)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PAYS_PARENT");

                entity.Property(e => e.PnomEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PNOM_ET");

                entity.Property(e => e.PwdEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PWD_ET");

                entity.Property(e => e.PwdEtInit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PWD_ET_INIT");

                entity.Property(e => e.PwdParent)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PWD_PARENT");

                entity.Property(e => e.Recommandation)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RECOMMANDATION")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.ResultatFinalEt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RESULTAT_FINAL_ET");

                entity.Property(e => e.RibBanque)
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("RIB_BANQUE");

                entity.Property(e => e.ScoreFinal)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("SCORE_FINAL");

                entity.Property(e => e.ScoreMinAdmin)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("SCORE_MIN_ADMIN");

                entity.Property(e => e.Sexe)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SEXE");

                entity.Property(e => e.SituationFinanciereEt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SITUATION_FINANCIERE_ET");

                entity.Property(e => e.SpecialiteEspEt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SPECIALITE_ESP_ET");

                entity.Property(e => e.SuiviParticulier)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SUIVI_PARTICULIER")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.TelEt)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("TEL_ET");

                entity.Property(e => e.TelEt1)
                    .HasColumnType("NUMBER(20)")
                    .HasColumnName("TEL_ET1")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.TelMereEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TEL_MERE_ET");

                entity.Property(e => e.TelParent)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("TEL_PARENT");

                entity.Property(e => e.TelParentEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("TEL_PARENT_ET");

                entity.Property(e => e.TelPereEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TEL_PERE_ET");

                entity.Property(e => e.TypeEnregEt)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_ENREG_ET");

                entity.Property(e => e.TypeEt)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_ET");

                entity.Property(e => e.UserTransfPreinscrit)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("USER_TRANSF_PREINSCRIT");

                entity.Property(e => e.VilleEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("VILLE_ET");

                entity.Property(e => e.VilleParent)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("VILLE_PARENT");

                entity.HasOne(d => d.CodeClNavigation)
                    .WithMany(p => p.EspEtudiant)
                    .HasForeignKey(d => d.CodeCl)
                    .HasConstraintName("FKA588F399C6724C6D");

                entity.HasOne(d => d.ComiteIdGrpNavigation)
                    .WithMany(p => p.EspEtudiant)
                    .HasForeignKey(d => d.ComiteIdGrp)
                    .HasConstraintName("FKA588F39935557C51");
            });

            modelBuilder.Entity<EspEtudiant2013>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_ETUDIANT_2013");

                entity.Property(e => e.AdresseEt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ADRESSE_ET");

                entity.Property(e => e.AdresseMailEsp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ADRESSE_MAIL_ESP");

                entity.Property(e => e.CodeCl)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeClPrec)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL_PREC");

                entity.Property(e => e.EMailEt)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL_ET");

                entity.Property(e => e.IdEt)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.NomEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_ET");

                entity.Property(e => e.NumCinPasseport)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CIN_PASSEPORT");

                entity.Property(e => e.PnomEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PNOM_ET");

                entity.Property(e => e.SpecialiteEspEt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SPECIALITE_ESP_ET");

                entity.Property(e => e.TelEt)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("TEL_ET");
            });

            modelBuilder.Entity<EspEtudiantEnreg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_ETUDIANT_ENREG");

                entity.Property(e => e.Admis)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ADMIS")
                    .IsFixedLength(true);

                entity.Property(e => e.AdresseEt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ADRESSE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.AdresseParent)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ADRESSE_PARENT")
                    .IsFixedLength(true);

                entity.Property(e => e.Agent)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("AGENT")
                    .IsFixedLength(true);

                entity.Property(e => e.AnneeAdmission)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_ADMISSION");

                entity.Property(e => e.AnneeBac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_BAC")
                    .IsFixedLength(true);

                entity.Property(e => e.AnneeDiplome)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DIPLOME")
                    .IsFixedLength(true);

                entity.Property(e => e.AnneeEntreeEspEt)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_ENTREE_ESP_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.Banque)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BANQUE")
                    .IsFixedLength(true);

                entity.Property(e => e.ClasseCouranteEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CLASSE_COURANTE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.ClassePrecEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CLASSE_PREC_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeBarre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_BARRE")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeDecision)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION");

                entity.Property(e => e.CodeDecisionSessionPAp1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_SESSION_P_AP1")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeDecisionSessionPAp2)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_SESSION_P_AP2")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeDecisionSessionPAp3)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_SESSION_P_AP3")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeDecisionSessionRAp1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_SESSION_R_AP1")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeDecisionSessionRAp2)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_SESSION_R_AP2")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeDecisionSessionRAp3)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_SESSION_R_AP3")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeDecisionTemp)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_TEMP");

                entity.Property(e => e.CodeEtabOrigine)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODE_ETAB_ORIGINE")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeNationalite)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_NATIONALITE")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeSpecOrigine)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODE_SPEC_ORIGINE")
                    .IsFixedLength(true);

                entity.Property(e => e.ComiteIdGrp)
                    .HasPrecision(10)
                    .HasColumnName("COMITE_ID_GRP");

                entity.Property(e => e.Convocation)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CONVOCATION")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.ConvocationEntretien)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CONVOCATION_ENTRETIEN")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.CpEt)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CP_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.CpParent)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CP_PARENT")
                    .IsFixedLength(true);

                entity.Property(e => e.CycleEt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CYCLE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.DateBac)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_BAC");

                entity.Property(e => e.DateCalculScoreF)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_CALCUL_SCORE_F");

                entity.Property(e => e.DateConvocation)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_CONVOCATION");

                entity.Property(e => e.DateDelivrance)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_DELIVRANCE");

                entity.Property(e => e.DateDernModif)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_DERN_MODIF");

                entity.Property(e => e.DateEntreeEspEt)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_ENTREE_ESP_ET");

                entity.Property(e => e.DateEnvoieDecision)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_ENVOIE_DECISION");

                entity.Property(e => e.DateLastChangeEtat)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_LAST_CHANGE_ETAT");

                entity.Property(e => e.DateLieuNais)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DATE_LIEU_NAIS")
                    .IsFixedLength(true);

                entity.Property(e => e.DateNaisEt)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_NAIS_ET");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE");

                entity.Property(e => e.DateSortieEt)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SORTIE_ET");

                entity.Property(e => e.DateTest)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_TEST");

                entity.Property(e => e.DateTranspo)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_TRANSPO");

                entity.Property(e => e.Dateentr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DATEENTR")
                    .IsFixedLength(true);

                entity.Property(e => e.DecisionEnvoyee)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DECISION_ENVOYEE")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.DernUtilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("DERN_UTILISATEUR")
                    .IsFixedLength(true);

                entity.Property(e => e.DiplomeObtenuEspEt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DIPLOME_OBTENU_ESP_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.DiplomeSupEt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIPLOME_SUP_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.EMailEt)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.EMailParent)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL_PARENT")
                    .IsFixedLength(true);

                entity.Property(e => e.EmailMereEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL_MERE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.EmailPereEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL_PERE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.EnsIdEns)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ENS_ID_ENS")
                    .IsFixedLength(true);

                entity.Property(e => e.EntretienAnglais)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("ENTRETIEN_ANGLAIS");

                entity.Property(e => e.EntretienFrancais)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("ENTRETIEN_FRANCAIS");

                entity.Property(e => e.EnvoiDossier)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ENVOI_DOSSIER")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.EtabBac)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ETAB_BAC")
                    .IsFixedLength(true);

                entity.Property(e => e.EtabOrigine)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ETAB_ORIGINE")
                    .IsFixedLength(true);

                entity.Property(e => e.Etat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT")
                    .IsFixedLength(true);

                entity.Property(e => e.FkEns)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FK_ENS")
                    .IsFixedLength(true);

                entity.Property(e => e.FkEnsei)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FK_ENSEI")
                    .IsFixedLength(true);

                entity.Property(e => e.FonctionEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FONCTION_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.FonctionMereEt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FONCTION_MERE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.FonctionPereEt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FONCTION_PERE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.Gouvernorat)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GOUVERNORAT");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.IdEnsEntretien)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS_ENTRETIEN");

                entity.Property(e => e.IdEt)
                    .IsRequired()
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.IdEtNew)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET_NEW")
                    .IsFixedLength(true);

                entity.Property(e => e.IdEtOrigin)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET_ORIGIN")
                    .IsFixedLength(true);

                entity.Property(e => e.IdEtOrigine)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET_ORIGINE")
                    .IsFixedLength(true);

                entity.Property(e => e.JustifEtat)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("JUSTIF_ETAT")
                    .IsFixedLength(true);

                entity.Property(e => e.LibDecision)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION");

                entity.Property(e => e.LibDecisionSessionPAp1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION_SESSION_P_AP1")
                    .IsFixedLength(true);

                entity.Property(e => e.LibDecisionSessionPAp2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION_SESSION_P_AP2")
                    .IsFixedLength(true);

                entity.Property(e => e.LibDecisionSessionPAp3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION_SESSION_P_AP3")
                    .IsFixedLength(true);

                entity.Property(e => e.LibDecisionSessionRAp1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION_SESSION_R_AP1")
                    .IsFixedLength(true);

                entity.Property(e => e.LibDecisionSessionRAp2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION_SESSION_R_AP2")
                    .IsFixedLength(true);

                entity.Property(e => e.LibDecisionSessionRAp3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION_SESSION_R_AP3")
                    .IsFixedLength(true);

                entity.Property(e => e.LibJustifEtat)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("LIB_JUSTIF_ETAT")
                    .IsFixedLength(true);

                entity.Property(e => e.LibSpecOrigine)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("LIB_SPEC_ORIGINE")
                    .IsFixedLength(true);

                entity.Property(e => e.LieuDelivrance)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("LIEU_DELIVRANCE")
                    .IsFixedLength(true);

                entity.Property(e => e.LieuNaisEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("LIEU_NAIS_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.Login)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LOGIN")
                    .IsFixedLength(true);

                entity.Property(e => e.MoyBac)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("MOY_BAC");

                entity.Property(e => e.MoyBacEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MOY_BAC_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.MoyBacEt2)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_BAC_ET2");

                entity.Property(e => e.MoyPAp1)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_P_AP1");

                entity.Property(e => e.MoyPAp2)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_P_AP2");

                entity.Property(e => e.MoyPAp3)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_P_AP3");

                entity.Property(e => e.MoyRAp1)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_R_AP1");

                entity.Property(e => e.MoyRAp2)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_R_AP2");

                entity.Property(e => e.MoyRAp3)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_R_AP3");

                entity.Property(e => e.MoyenneDernSemestreEt)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOYENNE_DERN_SEMESTRE_ET");

                entity.Property(e => e.Mp08)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MP08")
                    .IsFixedLength(true);

                entity.Property(e => e.Nationalite)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NATIONALITE")
                    .IsFixedLength(true);

                entity.Property(e => e.NatureBac)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_BAC")
                    .IsFixedLength(true);

                entity.Property(e => e.NatureCours)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_COURS")
                    .IsFixedLength(true);

                entity.Property(e => e.NatureEt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.NaturePieceId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_PIECE_ID")
                    .IsFixedLength(true);

                entity.Property(e => e.NbImpReleve)
                    .HasPrecision(2)
                    .HasColumnName("NB_IMP_RELEVE");

                entity.Property(e => e.NiveauAcces)
                    .HasPrecision(1)
                    .HasColumnName("NIVEAU_ACCES");

                entity.Property(e => e.NiveauCourantEt)
                    .HasPrecision(1)
                    .HasColumnName("NIVEAU_COURANT_ET");

                entity.Property(e => e.NiveauDiplomeSupEt)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("NIVEAU_DIPLOME_SUP_ET");

                entity.Property(e => e.NomEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.NomMereEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOM_MERE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.NomPereEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PERE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.NumBacEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_BAC_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.NumCinPasseport)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CIN_PASSEPORT")
                    .IsFixedLength(true);

                entity.Property(e => e.NumOrd)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ORD")
                    .IsFixedLength(true);

                entity.Property(e => e.NumSession)
                    .HasPrecision(1)
                    .HasColumnName("NUM_SESSION");

                entity.Property(e => e.Numcompte)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUMCOMPTE")
                    .IsFixedLength(true);

                entity.Property(e => e.Numpromotioncs)
                    .HasPrecision(4)
                    .HasColumnName("NUMPROMOTIONCS");

                entity.Property(e => e.ObservationEt)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVATION_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.Password)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PASSWORD")
                    .IsFixedLength(true);

                entity.Property(e => e.PaysEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PAYS_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.PaysParent)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PAYS_PARENT")
                    .IsFixedLength(true);

                entity.Property(e => e.PnomEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PNOM_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.ResultatFinalEt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RESULTAT_FINAL_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.RibBanque)
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("RIB_BANQUE")
                    .IsFixedLength(true);

                entity.Property(e => e.ScoreAnglais)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("SCORE_ANGLAIS");

                entity.Property(e => e.ScoreDossier)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("SCORE_DOSSIER");

                entity.Property(e => e.ScoreEntretien)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("SCORE_ENTRETIEN");

                entity.Property(e => e.ScoreEpEcrite)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("SCORE_EP_ECRITE");

                entity.Property(e => e.ScoreFinal)
                    .HasColumnType("NUMBER(18,6)")
                    .HasColumnName("SCORE_FINAL");

                entity.Property(e => e.ScoreFinalInit)
                    .HasColumnType("NUMBER(18,6)")
                    .HasColumnName("SCORE_FINAL_INIT");

                entity.Property(e => e.ScoreFrancais)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("SCORE_FRANCAIS");

                entity.Property(e => e.ScoreQi)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("SCORE_QI");

                entity.Property(e => e.ScoreTest)
                    .HasPrecision(10)
                    .HasColumnName("SCORE_TEST");

                entity.Property(e => e.Sexe)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SEXE")
                    .IsFixedLength(true);

                entity.Property(e => e.SituationFinanciereEt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SITUATION_FINANCIERE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.SpecialiteEspEt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SPECIALITE_ESP_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.TelEt)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("TEL_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.TelEt1)
                    .HasColumnType("NUMBER(20)")
                    .HasColumnName("TEL_ET1");

                entity.Property(e => e.TelMereEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TEL_MERE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.TelParent)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("TEL_PARENT")
                    .IsFixedLength(true);

                entity.Property(e => e.TelParentEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("TEL_PARENT_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.TelPereEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TEL_PERE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.TypeDecision)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_DECISION")
                    .HasDefaultValueSql("'A'");

                entity.Property(e => e.TypeEnregEt)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_ENREG_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.TypeEt)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.VilleEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("VILLE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.VilleParent)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("VILLE_PARENT")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<EspEtudiantNoteGroupe>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_ETUDIANT_NOTE_GROUPE");

                entity.Property(e => e.AbsEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ABS_ET");

                entity.Property(e => e.DateEval)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_EVAL");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.IdEt)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.IdGroupeProjet)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_GROUPE_PROJET");

                entity.Property(e => e.NoteEt)
                    .HasPrecision(3)
                    .HasColumnName("NOTE_ET");

                entity.Property(e => e.Remarque)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("REMARQUE");
            });

            modelBuilder.Entity<EspEtudiantSeminaire>(entity =>
            {
                entity.HasKey(e => new { e.SeminaireIdseminaire, e.EtdsIdEt })
                    .HasName("SYS_C008409");

                entity.ToTable("ESP_ETUDIANT_SEMINAIRE");

                entity.Property(e => e.SeminaireIdseminaire)
                    .HasPrecision(10)
                    .HasColumnName("SEMINAIRE_IDSEMINAIRE");

                entity.Property(e => e.EtdsIdEt)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ETDS_ID_ET");

                entity.HasOne(d => d.EtdsIdEtNavigation)
                    .WithMany(p => p.EspEtudiantSeminaire)
                    .HasForeignKey(d => d.EtdsIdEt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("ESPETUDIANTSEMINAIREETDS_ID_ET");

                entity.HasOne(d => d.SeminaireIdseminaireNavigation)
                    .WithMany(p => p.EspEtudiantSeminaire)
                    .HasForeignKey(d => d.SeminaireIdseminaire)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("SPTDNTSEMINAIRESMNRIDSEMINAIRE");
            });

            modelBuilder.Entity<EspEtudiantTmp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_ETUDIANT_TMP");

                entity.Property(e => e.Admis)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ADMIS")
                    .IsFixedLength(true);

                entity.Property(e => e.AdresseEt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ADRESSE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.AdresseParent)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ADRESSE_PARENT")
                    .IsFixedLength(true);

                entity.Property(e => e.Agent)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("AGENT")
                    .IsFixedLength(true);

                entity.Property(e => e.AnneeAdmission)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_ADMISSION");

                entity.Property(e => e.AnneeBac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_BAC")
                    .IsFixedLength(true);

                entity.Property(e => e.AnneeDiplome)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DIPLOME")
                    .IsFixedLength(true);

                entity.Property(e => e.AnneeEntreeEspEt)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_ENTREE_ESP_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.Banque)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BANQUE")
                    .IsFixedLength(true);

                entity.Property(e => e.ClasseCouranteEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CLASSE_COURANTE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.ClassePrecEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CLASSE_PREC_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeBarre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_BARRE")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeDecision)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION");

                entity.Property(e => e.CodeDecisionSessionPAp1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_SESSION_P_AP1")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeDecisionSessionPAp2)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_SESSION_P_AP2")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeDecisionSessionPAp3)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_SESSION_P_AP3")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeDecisionSessionRAp1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_SESSION_R_AP1")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeDecisionSessionRAp2)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_SESSION_R_AP2")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeDecisionSessionRAp3)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_SESSION_R_AP3")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeDecisionTemp)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_TEMP");

                entity.Property(e => e.CodeEtabOrigine)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODE_ETAB_ORIGINE")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeNationalite)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_NATIONALITE")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeSpecOrigine)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODE_SPEC_ORIGINE")
                    .IsFixedLength(true);

                entity.Property(e => e.ComiteIdGrp)
                    .HasPrecision(10)
                    .HasColumnName("COMITE_ID_GRP");

                entity.Property(e => e.Convocation)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CONVOCATION");

                entity.Property(e => e.ConvocationEntretien)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CONVOCATION_ENTRETIEN");

                entity.Property(e => e.CpEt)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CP_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.CpParent)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CP_PARENT")
                    .IsFixedLength(true);

                entity.Property(e => e.CycleEt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CYCLE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.DateBac)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_BAC");

                entity.Property(e => e.DateCalculScoreF)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_CALCUL_SCORE_F");

                entity.Property(e => e.DateConvocation)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_CONVOCATION");

                entity.Property(e => e.DateDelivrance)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_DELIVRANCE");

                entity.Property(e => e.DateDernModif)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_DERN_MODIF");

                entity.Property(e => e.DateEntreeEspEt)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_ENTREE_ESP_ET");

                entity.Property(e => e.DateEnvoieDecision)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_ENVOIE_DECISION");

                entity.Property(e => e.DateLastChangeEtat)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_LAST_CHANGE_ETAT");

                entity.Property(e => e.DateLieuNais)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DATE_LIEU_NAIS")
                    .IsFixedLength(true);

                entity.Property(e => e.DateNaisEt)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_NAIS_ET");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE");

                entity.Property(e => e.DateSortieEt)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SORTIE_ET");

                entity.Property(e => e.DateTest)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_TEST");

                entity.Property(e => e.DateTranspo)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_TRANSPO");

                entity.Property(e => e.Dateentr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DATEENTR")
                    .IsFixedLength(true);

                entity.Property(e => e.DecisionEnvoyee)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DECISION_ENVOYEE");

                entity.Property(e => e.DernUtilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("DERN_UTILISATEUR")
                    .IsFixedLength(true);

                entity.Property(e => e.DiplomeObtenuEspEt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DIPLOME_OBTENU_ESP_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.DiplomeSupEt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIPLOME_SUP_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.EMailEt)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.EMailParent)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL_PARENT")
                    .IsFixedLength(true);

                entity.Property(e => e.EmailMereEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL_MERE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.EmailPereEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL_PERE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.EnsIdEns)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ENS_ID_ENS")
                    .IsFixedLength(true);

                entity.Property(e => e.EntretienAnglais)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("ENTRETIEN_ANGLAIS");

                entity.Property(e => e.EntretienFrancais)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("ENTRETIEN_FRANCAIS");

                entity.Property(e => e.EnvoiDossier)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ENVOI_DOSSIER");

                entity.Property(e => e.EtabBac)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ETAB_BAC")
                    .IsFixedLength(true);

                entity.Property(e => e.EtabOrigine)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ETAB_ORIGINE")
                    .IsFixedLength(true);

                entity.Property(e => e.Etat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT")
                    .IsFixedLength(true);

                entity.Property(e => e.FkEns)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FK_ENS")
                    .IsFixedLength(true);

                entity.Property(e => e.FkEnsei)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FK_ENSEI")
                    .IsFixedLength(true);

                entity.Property(e => e.FonctionEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FONCTION_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.FonctionMereEt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FONCTION_MERE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.FonctionPereEt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FONCTION_PERE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.Gouvernorat)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GOUVERNORAT");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.IdEnsEntretien)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS_ENTRETIEN");

                entity.Property(e => e.IdEt)
                    .IsRequired()
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.IdEtNew)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET_NEW")
                    .IsFixedLength(true);

                entity.Property(e => e.IdEtOrigin)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET_ORIGIN")
                    .IsFixedLength(true);

                entity.Property(e => e.IdEtOrigine)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET_ORIGINE")
                    .IsFixedLength(true);

                entity.Property(e => e.JustifEtat)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("JUSTIF_ETAT")
                    .IsFixedLength(true);

                entity.Property(e => e.LibDecision)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION");

                entity.Property(e => e.LibDecisionSessionPAp1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION_SESSION_P_AP1")
                    .IsFixedLength(true);

                entity.Property(e => e.LibDecisionSessionPAp2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION_SESSION_P_AP2")
                    .IsFixedLength(true);

                entity.Property(e => e.LibDecisionSessionPAp3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION_SESSION_P_AP3")
                    .IsFixedLength(true);

                entity.Property(e => e.LibDecisionSessionRAp1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION_SESSION_R_AP1")
                    .IsFixedLength(true);

                entity.Property(e => e.LibDecisionSessionRAp2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION_SESSION_R_AP2")
                    .IsFixedLength(true);

                entity.Property(e => e.LibDecisionSessionRAp3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION_SESSION_R_AP3")
                    .IsFixedLength(true);

                entity.Property(e => e.LibJustifEtat)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("LIB_JUSTIF_ETAT")
                    .IsFixedLength(true);

                entity.Property(e => e.LibSpecOrigine)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("LIB_SPEC_ORIGINE")
                    .IsFixedLength(true);

                entity.Property(e => e.LieuDelivrance)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("LIEU_DELIVRANCE")
                    .IsFixedLength(true);

                entity.Property(e => e.LieuNaisEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("LIEU_NAIS_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.Login)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LOGIN")
                    .IsFixedLength(true);

                entity.Property(e => e.MoyBac)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("MOY_BAC");

                entity.Property(e => e.MoyBacEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MOY_BAC_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.MoyBacEt2)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_BAC_ET2");

                entity.Property(e => e.MoyPAp1)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_P_AP1");

                entity.Property(e => e.MoyPAp2)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_P_AP2");

                entity.Property(e => e.MoyPAp3)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_P_AP3");

                entity.Property(e => e.MoyRAp1)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_R_AP1");

                entity.Property(e => e.MoyRAp2)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_R_AP2");

                entity.Property(e => e.MoyRAp3)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_R_AP3");

                entity.Property(e => e.MoyenneDernSemestreEt)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOYENNE_DERN_SEMESTRE_ET");

                entity.Property(e => e.Mp08)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MP08")
                    .IsFixedLength(true);

                entity.Property(e => e.Nationalite)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NATIONALITE")
                    .IsFixedLength(true);

                entity.Property(e => e.NatureBac)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_BAC")
                    .IsFixedLength(true);

                entity.Property(e => e.NatureCours)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_COURS")
                    .IsFixedLength(true);

                entity.Property(e => e.NatureEt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.NaturePieceId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_PIECE_ID")
                    .IsFixedLength(true);

                entity.Property(e => e.NbImpReleve)
                    .HasPrecision(2)
                    .HasColumnName("NB_IMP_RELEVE");

                entity.Property(e => e.NiveauAcces)
                    .HasPrecision(1)
                    .HasColumnName("NIVEAU_ACCES");

                entity.Property(e => e.NiveauCourantEt)
                    .HasPrecision(1)
                    .HasColumnName("NIVEAU_COURANT_ET");

                entity.Property(e => e.NiveauDiplomeSupEt)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("NIVEAU_DIPLOME_SUP_ET");

                entity.Property(e => e.NomEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.NomMereEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOM_MERE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.NomPereEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PERE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.NumBacEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_BAC_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.NumCinPasseport)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CIN_PASSEPORT")
                    .IsFixedLength(true);

                entity.Property(e => e.NumOrd)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ORD")
                    .IsFixedLength(true);

                entity.Property(e => e.NumSession)
                    .HasPrecision(1)
                    .HasColumnName("NUM_SESSION");

                entity.Property(e => e.Numcompte)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUMCOMPTE")
                    .IsFixedLength(true);

                entity.Property(e => e.Numpromotioncs)
                    .HasPrecision(4)
                    .HasColumnName("NUMPROMOTIONCS");

                entity.Property(e => e.ObservationEt)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVATION_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.Password)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PASSWORD")
                    .IsFixedLength(true);

                entity.Property(e => e.PaysEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PAYS_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.PaysParent)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PAYS_PARENT")
                    .IsFixedLength(true);

                entity.Property(e => e.PnomEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PNOM_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.ResultatFinalEt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RESULTAT_FINAL_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.RibBanque)
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("RIB_BANQUE")
                    .IsFixedLength(true);

                entity.Property(e => e.ScoreAnglais)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("SCORE_ANGLAIS");

                entity.Property(e => e.ScoreDossier)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("SCORE_DOSSIER");

                entity.Property(e => e.ScoreEntretien)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("SCORE_ENTRETIEN");

                entity.Property(e => e.ScoreEpEcrite)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("SCORE_EP_ECRITE");

                entity.Property(e => e.ScoreFinal)
                    .HasColumnType("NUMBER(18,6)")
                    .HasColumnName("SCORE_FINAL");

                entity.Property(e => e.ScoreFinalInit)
                    .HasColumnType("NUMBER(18,6)")
                    .HasColumnName("SCORE_FINAL_INIT");

                entity.Property(e => e.ScoreFrancais)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("SCORE_FRANCAIS");

                entity.Property(e => e.ScoreQi)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("SCORE_QI");

                entity.Property(e => e.ScoreTest)
                    .HasPrecision(10)
                    .HasColumnName("SCORE_TEST");

                entity.Property(e => e.Sexe)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SEXE")
                    .IsFixedLength(true);

                entity.Property(e => e.SituationFinanciereEt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SITUATION_FINANCIERE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.SpecialiteEspEt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SPECIALITE_ESP_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.TelEt)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("TEL_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.TelEt1)
                    .HasColumnType("NUMBER(20)")
                    .HasColumnName("TEL_ET1");

                entity.Property(e => e.TelMereEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TEL_MERE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.TelParent)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("TEL_PARENT")
                    .IsFixedLength(true);

                entity.Property(e => e.TelParentEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("TEL_PARENT_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.TelPereEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TEL_PERE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.TypeDecision)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_DECISION");

                entity.Property(e => e.TypeEnregEt)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_ENREG_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.TypeEt)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.VilleEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("VILLE_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.VilleParent)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("VILLE_PARENT")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<EspEvalClModule>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.CodeCl, e.CodeModule, e.CodeCritere })
                    .HasName("PK_EVAL_CL");

                entity.ToTable("ESP_EVAL_CL_MODULE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeCritere)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CRITERE")
                    .IsFixedLength(true);

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS")
                    .IsFixedLength(true);

                entity.Property(e => e.IdEns2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS2")
                    .IsFixedLength(true);

                entity.Property(e => e.NbPalier1)
                    .HasPrecision(4)
                    .HasColumnName("NB_PALIER1");

                entity.Property(e => e.NbPalier2)
                    .HasPrecision(4)
                    .HasColumnName("NB_PALIER2");

                entity.Property(e => e.NbPalier3)
                    .HasPrecision(4)
                    .HasColumnName("NB_PALIER3");

                entity.Property(e => e.NbPalier4)
                    .HasPrecision(4)
                    .HasColumnName("NB_PALIER4");

                entity.Property(e => e.NbPalier5)
                    .HasPrecision(4)
                    .HasColumnName("NB_PALIER5");

                entity.Property(e => e.NumSemestre)
                    .HasPrecision(1)
                    .HasColumnName("NUM_SEMESTRE");
            });

            modelBuilder.Entity<EspEvaluation>(entity =>
            {
                entity.HasKey(e => new { e.IdEt, e.AnneeDeb, e.CodeModule, e.CodeCl, e.NumSemestre });

                entity.ToTable("ESP_EVALUATION");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.NumSemestre)
                    .HasPrecision(1)
                    .HasColumnName("NUM_SEMESTRE");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE");

                entity.Property(e => e.Ev1)
                    .HasPrecision(1)
                    .HasColumnName("EV1");

                entity.Property(e => e.Ev2)
                    .HasPrecision(1)
                    .HasColumnName("EV2");

                entity.Property(e => e.Ev3)
                    .HasPrecision(1)
                    .HasColumnName("EV3");

                entity.Property(e => e.Ev4)
                    .HasPrecision(1)
                    .HasColumnName("EV4");

                entity.Property(e => e.Ev5)
                    .HasPrecision(1)
                    .HasColumnName("EV5");

                entity.Property(e => e.Ev6)
                    .HasPrecision(1)
                    .HasColumnName("EV6");

                entity.Property(e => e.Proposition)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("PROPOSITION");

                entity.Property(e => e.PtFaible)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("PT_FAIBLE");

                entity.Property(e => e.PtFort)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("PT_FORT");

                entity.HasOne(d => d.CodeModuleNavigation)
                    .WithMany(p => p.EspEvaluation)
                    .HasForeignKey(d => d.CodeModule)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ESP_EVALUATION");
            });

            modelBuilder.Entity<EspEvaluationPrepa>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.CodeCl, e.CodeModule, e.IdEt })
                    .HasName("ESP_EVALUATION_PREPA_PK");

                entity.ToTable("ESP_EVALUATION_PREPA");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.AQ1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("A_Q1");

                entity.Property(e => e.AQ2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("A_Q2");

                entity.Property(e => e.AQ3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("A_Q3");

                entity.Property(e => e.BQ1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("B_Q1");

                entity.Property(e => e.BQ2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("B_Q2");

                entity.Property(e => e.BQ3)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("B_Q3");

                entity.Property(e => e.BQ4)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("B_Q4");

                entity.Property(e => e.BQ5)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("B_Q5");

                entity.Property(e => e.BQ51)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("B_Q51");

                entity.Property(e => e.BQ6)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("B_Q6");

                entity.Property(e => e.BQ7)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("B_Q7");

                entity.Property(e => e.BQ8)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("B_Q8");

                entity.Property(e => e.CQ1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("C_Q1");

                entity.Property(e => e.CQ2)
                    .HasColumnType("NUMBER")
                    .HasColumnName("C_Q2");

                entity.Property(e => e.CQ3)
                    .HasColumnType("NUMBER")
                    .HasColumnName("C_Q3");

                entity.Property(e => e.CQ4)
                    .HasColumnType("NUMBER")
                    .HasColumnName("C_Q4");

                entity.Property(e => e.CQ5)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("C_Q5");

                entity.Property(e => e.DQ1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("D_Q1");

                entity.Property(e => e.DQ2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("D_Q2");

                entity.Property(e => e.DateMiseJour)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_MISE_JOUR");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE");

                entity.Property(e => e.EQ1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("E_Q1");

                entity.Property(e => e.EQ21)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("E_Q21");

                entity.Property(e => e.EQ22)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("E_Q22");

                entity.Property(e => e.FQ1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("F_Q1");

                entity.Property(e => e.GQ1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("G_Q1");

                entity.Property(e => e.HQ1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("H_Q1");
            });

            modelBuilder.Entity<EspEvaluationScolaires>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_EVALUATION_SCOLAIRES");

                entity.Property(e => e.AnneeDeb)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.Apprentissage)
                    .HasColumnType("NUMBER")
                    .HasColumnName("APPRENTISSAGE");

                entity.Property(e => e.CodeDe)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DE");

                entity.Property(e => e.DateModif)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_MODIF")
                    .HasDefaultValueSql("NULL");

                entity.Property(e => e.DateSaisaie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISAIE")
                    .HasDefaultValueSql("sysdate");

                entity.Property(e => e.IdEns)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.IdEt)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.NiveauScolaires)
                    .HasColumnType("NUMBER")
                    .HasColumnName("NIVEAU_SCOLAIRES");

                entity.Property(e => e.Priode)
                    .HasColumnType("NUMBER")
                    .HasColumnName("PRIODE");

                entity.Property(e => e.Ue)
                    .IsRequired()
                    .IsUnicode(false)
                    .HasColumnName("UE");
            });

            modelBuilder.Entity<EspExamen>(entity =>
            {
                entity.HasKey(e => new { e.NumSession, e.AnneeDeb, e.AnneeFin });

                entity.ToTable("ESP_EXAMEN");

                entity.Property(e => e.NumSession)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("NUM_SESSION");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.AnneeFin)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_FIN");

                entity.Property(e => e.DateDebut)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_DEBUT");

                entity.Property(e => e.DateFin)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_FIN");

                entity.HasOne(d => d.AnneeDebNavigation)
                    .WithMany(p => p.EspExamen)
                    .HasForeignKey(d => d.AnneeDeb)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ESP_EXAM_REFERENCE_ESP_SAIS");
            });

            modelBuilder.Entity<EspFichePfe>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_FICHE_PFE");

                entity.HasIndex(e => e.Idfiche, "ESP_FICHE_PFE_X")
                    .IsUnique();

                entity.Property(e => e.Annee)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE");

                entity.Property(e => e.AnnulationfichepfeId)
                    .HasPrecision(10)
                    .HasColumnName("ANNULATIONFICHEPFE_ID");

                entity.Property(e => e.Asoutenir)
                    .HasPrecision(1)
                    .HasColumnName("ASOUTENIR");

                entity.Property(e => e.Attente)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ATTENTE");

                entity.Property(e => e.AutorisationF)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("AUTORISATION_F");

                entity.Property(e => e.AutorisationP)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("AUTORISATION_P");

                entity.Property(e => e.BinomeCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("BINOME_CODE");

                entity.Property(e => e.Cause)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("CAUSE");

                entity.Property(e => e.CheffiliereCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("CHEFFILIERE_CODE");

                entity.Property(e => e.CoencadrantCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("COENCADRANT_CODE");

                entity.Property(e => e.Confidentiel)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CONFIDENTIEL");

                entity.Property(e => e.Convention)
                    .HasPrecision(1)
                    .HasColumnName("CONVENTION");

                entity.Property(e => e.DateDepotDossier)
                    .HasPrecision(0)
                    .HasColumnName("DATE_DEPOT_DOSSIER");

                entity.Property(e => e.Datedebuttraitement)
                    .HasPrecision(0)
                    .HasColumnName("DATEDEBUTTRAITEMENT");

                entity.Property(e => e.Datedebuttraitementenseignant)
                    .HasPrecision(0)
                    .HasColumnName("DATEDEBUTTRAITEMENTENSEIGNANT");

                entity.Property(e => e.Datedecision)
                    .HasPrecision(0)
                    .HasColumnName("DATEDECISION");

                entity.Property(e => e.Datedepot)
                    .HasPrecision(0)
                    .HasColumnName("DATEDEPOT");

                entity.Property(e => e.Daterelance)
                    .HasPrecision(0)
                    .HasColumnName("DATERELANCE");

                entity.Property(e => e.Datevalidationencadrant)
                    .HasPrecision(0)
                    .HasColumnName("DATEVALIDATIONENCADRANT");

                entity.Property(e => e.DecisionCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("DECISION_CODE");

                entity.Property(e => e.Descriptionprojet)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTIONPROJET");

                entity.Property(e => e.DirectionstageCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("DIRECTIONSTAGE_CODE");

                entity.Property(e => e.EncadrantCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ENCADRANT_CODE");

                entity.Property(e => e.EnseignanatCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ENSEIGNANAT_CODE");

                entity.Property(e => e.EnseignantCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ENSEIGNANT_CODE");

                entity.Property(e => e.Etat)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ETAT");

                entity.Property(e => e.EtudiantCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ETUDIANT_CODE");

                entity.Property(e => e.Finance)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FINANCE");

                entity.Property(e => e.Idfiche)
                    .HasPrecision(10)
                    .HasColumnName("IDFICHE");

                entity.Property(e => e.Idsession)
                    .HasPrecision(10)
                    .HasColumnName("IDSESSION");

                entity.Property(e => e.MotifNonComplet)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("MOTIF_NON_COMPLET");

                entity.Property(e => e.MotifRejetTech)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MOTIF_REJET_TECH");

                entity.Property(e => e.Motifenseignant)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("MOTIFENSEIGNANT");

                entity.Property(e => e.Pedagogique)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PEDAGOGIQUE");

                entity.Property(e => e.RapporteurCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("RAPPORTEUR_CODE");

                entity.Property(e => e.Rejetfiche)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("REJETFICHE");

                entity.Property(e => e.SectIdsecteur)
                    .HasPrecision(10)
                    .HasColumnName("SECT_IDSECTEUR");

                entity.Property(e => e.Secteur)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SECTEUR");

                entity.Property(e => e.SocieteIdsociete)
                    .HasPrecision(10)
                    .HasColumnName("SOCIETE_IDSOCIETE");

                entity.Property(e => e.Soutenance)
                    .HasPrecision(1)
                    .HasColumnName("SOUTENANCE");

                entity.Property(e => e.Titreprojet)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("TITREPROJET");

                entity.Property(e => e.Validationencadrant)
                    .HasPrecision(1)
                    .HasColumnName("VALIDATIONENCADRANT");
            });

            modelBuilder.Entity<EspFiliere>(entity =>
            {
                entity.HasKey(e => e.CodeFiliere)
                    .HasName("PK_FILIERE");

                entity.ToTable("ESP_FILIERE");

                entity.Property(e => e.CodeFiliere)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_FILIERE");

                entity.Property(e => e.LibFiliere)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("LIB_FILIERE");
            });

            modelBuilder.Entity<EspGpProjet>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_GP_PROJET");

                entity.Property(e => e.CodeCl)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.IdGroupeProjet)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_GROUPE_PROJET");

                entity.Property(e => e.NomGroupe)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOM_GROUPE");

                entity.Property(e => e.NumGroupe)
                    .HasPrecision(3)
                    .HasColumnName("NUM_GROUPE");

                entity.Property(e => e.Sujet)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("SUJET");
            });

            modelBuilder.Entity<EspGroupeProjet>(entity =>
            {
                entity.HasKey(e => new { e.IdGroupe, e.AnneeDeb })
                    .HasName("PK_GROUPE_PR");

                entity.ToTable("ESP_GROUPE_PROJET");

                entity.Property(e => e.IdGroupe)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_GROUPE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.IdProjet)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_PROJET");

                entity.Property(e => e.NomGroupe)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_GROUPE");

                entity.HasOne(d => d.CodeClNavigation)
                    .WithMany(p => p.EspGroupeProjet)
                    .HasForeignKey(d => d.CodeCl)
                    .HasConstraintName("FK_CLASSE_PR");

                entity.HasOne(d => d.IdProjetNavigation)
                    .WithMany(p => p.EspGroupeProjet)
                    .HasForeignKey(d => d.IdProjet)
                    .HasConstraintName("FK_GROUPE_PR");
            });

            modelBuilder.Entity<EspGroupeTarif>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.CodeGrp })
                    .HasName("PK_GROUPE_TARIF");

                entity.ToTable("ESP_GROUPE_TARIF");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeGrp)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_GRP");

                entity.Property(e => e.DateMaj)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_MAJ");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE");

                entity.Property(e => e.EcheanceTranche1)
                    .HasColumnType("DATE")
                    .HasColumnName("ECHEANCE_TRANCHE1");

                entity.Property(e => e.EcheanceTranche2)
                    .HasColumnType("DATE")
                    .HasColumnName("ECHEANCE_TRANCHE2");

                entity.Property(e => e.LibelleGrp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LIBELLE_GRP");

                entity.Property(e => e.MontantTarif)
                    .HasColumnType("NUMBER(18,6)")
                    .HasColumnName("MONTANT_TARIF");

                entity.Property(e => e.MontantTranche1)
                    .HasColumnType("NUMBER(18,6)")
                    .HasColumnName("MONTANT_TRANCHE1");

                entity.Property(e => e.MontantTranche2)
                    .HasColumnType("NUMBER(18,6)")
                    .HasColumnName("MONTANT_TRANCHE2");

                entity.HasOne(d => d.AnneeDebNavigation)
                    .WithMany(p => p.EspGroupeTarif)
                    .HasForeignKey(d => d.AnneeDeb)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GROUPE_TARIF_ANNEE");
            });

            modelBuilder.Entity<EspIdMoodle>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_ID_MOODLE");

                entity.HasIndex(e => e.IdMoodle, "ID_MOODLE")
                    .IsUnique();

                entity.Property(e => e.F7)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdMoodle)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("ID_MOODLE");
            });

            modelBuilder.Entity<EspImportscore>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_IMPORTSCORE");

                entity.Property(e => e.Matricule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULE");

                entity.Property(e => e.NoteAng)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("NOTE_ANG");

                entity.Property(e => e.NoteFran)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("NOTE_FRAN");

                entity.Property(e => e.Noteqi)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("NOTEQI");
            });

            modelBuilder.Entity<EspInscri>(entity =>
            {
                entity.HasKey(e => e.IdInscription);

                entity.ToTable("ESP_INSCRI");

                entity.Property(e => e.IdInscription)
                    .HasColumnType("NUMBER")
                    .HasColumnName("ID_INSCRIPTION");

                entity.Property(e => e.AdresseEt)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ADRESSE_ET");

                entity.Property(e => e.DateIns)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_INS");

                entity.Property(e => e.DateMisejour)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_MISEJOUR");

                entity.Property(e => e.HeureIns)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("HEURE_INS");

                entity.Property(e => e.IdEt)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.NomEt)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOM_ET");

                entity.Property(e => e.NomJeton)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOM_JETON");

                entity.Property(e => e.PrenomEt)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRENOM_ET");
            });

            modelBuilder.Entity<EspInscription>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.IdEt });

                entity.ToTable("ESP_INSCRIPTION");

                entity.HasIndex(e => e.CodeCl1, "IDX_INSCRIPTION_CODECL1");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.AdmisRach)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ADMIS_RACH");

                entity.Property(e => e.AdmisTs)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ADMIS_TS")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.AnneeFin)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_FIN");

                entity.Property(e => e.CodeCl)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeCl1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL1");

                entity.Property(e => e.CodeCl2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL2");

                entity.Property(e => e.CodeClLangue)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL_LANGUE");

                entity.Property(e => e.CodeDecisionSessionP)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_SESSION_P");

                entity.Property(e => e.CodeDecisionSessionRat)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_SESSION_RAT");

                entity.Property(e => e.CodeDecisionSessionRat2)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_SESSION_RAT2");

                entity.Property(e => e.CodeDev)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DEV");

                entity.Property(e => e.ConfirmReinscription)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CONFIRM_REINSCRIPTION")
                    .HasDefaultValueSql("'N' ");

                entity.Property(e => e.CoutAnnuel)
                    .HasColumnType("NUMBER(18,6)")
                    .HasColumnName("COUT_ANNUEL");

                entity.Property(e => e.CoutDev)
                    .HasColumnType("NUMBER(18,6)")
                    .HasColumnName("COUT_DEV");

                entity.Property(e => e.CreditAnt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CREDIT_ANT");

                entity.Property(e => e.CreditRglt)
                    .HasColumnType("NUMBER(18,6)")
                    .HasColumnName("CREDIT_RGLT");

                entity.Property(e => e.DateInsc)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_INSC");

                entity.Property(e => e.DateLastMajDecisionPrinc)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_LAST_MAJ_DECISION_PRINC");

                entity.Property(e => e.DateLastMajDecisionRatt)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_LAST_MAJ_DECISION_RATT");

                entity.Property(e => e.DateLastModifRat2)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_LAST_MODIF_RAT2");

                entity.Property(e => e.DateLimProlongRglt)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_LIM_PROLONG_RGLT");

                entity.Property(e => e.DatePreinsc)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_PREINSC");

                entity.Property(e => e.DateTestAng)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_TEST_ANG");

                entity.Property(e => e.DateTestFr)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_TEST_FR");

                entity.Property(e => e.DernUtilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("DERN_UTILISATEUR");

                entity.Property(e => e.EtatEntretien)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_ENTRETIEN");

                entity.Property(e => e.EtatFinancier)
                    .HasPrecision(1)
                    .HasColumnName("ETAT_FINANCIER")
                    .HasDefaultValueSql("1");

                entity.Property(e => e.EtatInsTestNiv)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_INS_TEST_NIV")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.FraisIns)
                    .HasColumnType("NUMBER(18,6)")
                    .HasColumnName("FRAIS_INS");

                entity.Property(e => e.GroupeTarif)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GROUPE_TARIF");

                entity.Property(e => e.LibDecisionSessionP)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION_SESSION_P");

                entity.Property(e => e.LibDecisionSessionRat)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION_SESSION_RAT");

                entity.Property(e => e.LibDecisionSessionRat2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION_SESSION_RAT2");

                entity.Property(e => e.MajNiveauDefinitif)
                    .HasPrecision(1)
                    .HasColumnName("MAJ_NIVEAU_DEFINITIF")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ModeRglt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MODE_RGLT");

                entity.Property(e => e.MoyGenAvPfeSp)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("MOY_GEN_AV_PFE_SP");

                entity.Property(e => e.MoyGenAvPfeSr)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("MOY_GEN_AV_PFE_SR");

                entity.Property(e => e.MoyGeneral)
                    .HasColumnType("NUMBER(7,4)")
                    .HasColumnName("MOY_GENERAL");

                entity.Property(e => e.MoyRat2)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_RAT2");

                entity.Property(e => e.MoyRatAvRach)
                    .HasColumnType("NUMBER(10,2)")
                    .HasColumnName("MOY_RAT_AV_RACH");

                entity.Property(e => e.MoyRatt)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOY_RATT");

                entity.Property(e => e.MoySem1)
                    .HasColumnType("NUMBER(7,4)")
                    .HasColumnName("MOY_SEM1");

                entity.Property(e => e.MoySem2)
                    .HasColumnType("NUMBER(7,4)")
                    .HasColumnName("MOY_SEM2");

                entity.Property(e => e.NbCreditModule)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("NB_CREDIT_MODULE");

                entity.Property(e => e.NbEctsSp)
                    .HasColumnType("NUMBER(6,2)")
                    .HasColumnName("NB_ECTS_SP");

                entity.Property(e => e.NbEctsSr)
                    .HasColumnType("NUMBER(6,2)")
                    .HasColumnName("NB_ECTS_SR");

                entity.Property(e => e.NbImpAttestReussite)
                    .HasPrecision(2)
                    .HasColumnName("NB_IMP_ATTEST_REUSSITE");

                entity.Property(e => e.NbImpReleve)
                    .HasPrecision(2)
                    .HasColumnName("NB_IMP_RELEVE")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.NivAcquisAnglais)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NIV_ACQUIS_ANGLAIS");

                entity.Property(e => e.NivAcquisFrancais)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NIV_ACQUIS_FRANCAIS");

                entity.Property(e => e.NivLangue)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NIV_LANGUE");

                entity.Property(e => e.NiveauAccees)
                    .HasPrecision(1)
                    .HasColumnName("NIVEAU_ACCEES");

                entity.Property(e => e.NumAnnexe)
                    .HasPrecision(2)
                    .HasColumnName("NUM_ANNEXE");

                entity.Property(e => e.NumAnnuelDiplome)
                    .HasPrecision(4)
                    .HasColumnName("NUM_ANNUEL_DIPLOME");

                entity.Property(e => e.Numpromotioncs)
                    .HasPrecision(4)
                    .HasColumnName("NUMPROMOTIONCS");

                entity.Property(e => e.Observation)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVATION");

                entity.Property(e => e.PrepToeic)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PREP_TOEIC")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.Reserve)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RESERVE")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.Resultat)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RESULTAT");

                entity.Property(e => e.Semestre)
                    .HasPrecision(1)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.SitRglt)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SIT_RGLT");

                entity.Property(e => e.TestToeic)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TEST_TOEIC")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.TypeInsc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_INSC");

                entity.Property(e => e.TypeRglt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_RGLT");

                entity.Property(e => e.Utilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR");

                entity.HasOne(d => d.AnneeDebNavigation)
                    .WithMany(p => p.EspInscription)
                    .HasForeignKey(d => d.AnneeDeb)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ESP_INSC_REFERENCE_ESP_SAIS");

                entity.HasOne(d => d.IdEtNavigation)
                    .WithMany(p => p.EspInscription)
                    .HasForeignKey(d => d.IdEt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ESP_INSC_REFERENCE_ESP_ETUD");

                entity.HasOne(d => d.EspSaisonClasse)
                    .WithMany(p => p.EspInscription)
                    .HasForeignKey(d => new { d.AnneeDeb, d.Semestre, d.CodeCl })
                    .HasConstraintName("FK_ESP_INSC_CLASSE");
            });

            modelBuilder.Entity<EspJournalEtudiant>(entity =>
            {
                entity.HasKey(e => new { e.IdEt, e.NomColonne, e.TypeOp, e.DateOp });

                entity.ToTable("ESP_JOURNAL_ETUDIANT");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.NomColonne)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COLONNE");

                entity.Property(e => e.TypeOp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_OP");

                entity.Property(e => e.DateOp)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_OP");

                entity.Property(e => e.Utilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR");

                entity.Property(e => e.ValeurFinal)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("VALEUR_FINAL");

                entity.Property(e => e.ValeurInit)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("VALEUR_INIT");
            });

            modelBuilder.Entity<EspJournalInscription>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.CodeCl, e.IdEt, e.NomColonne, e.TypeOp, e.DateOp, e.Utilisateur });

                entity.ToTable("ESP_JOURNAL_INSCRIPTION");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.NomColonne)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COLONNE");

                entity.Property(e => e.TypeOp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_OP");

                entity.Property(e => e.DateOp)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_OP");

                entity.Property(e => e.Utilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR");

                entity.Property(e => e.AdresseIp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ADRESSE_IP");

                entity.Property(e => e.Machine)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("MACHINE");

                entity.Property(e => e.ValeurFinal)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VALEUR_FINAL");

                entity.Property(e => e.ValeurInit)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VALEUR_INIT");
            });

            modelBuilder.Entity<EspJournalMdpEns>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_JOURNAL_MDP_ENS");

                entity.Property(e => e.DateModif)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_MODIF");

                entity.Property(e => e.IdEns)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.IpModif)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IP_MODIF");

                entity.Property(e => e.MachineModif)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("MACHINE_MODIF");

                entity.Property(e => e.NewMdp)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NEW_MDP");

                entity.Property(e => e.OldMdp)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("OLD_MDP");
            });

            modelBuilder.Entity<EspJournalNote>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_JOURNAL_NOTE");

                entity.Property(e => e.AnneeDeb)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeCl)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeModule)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.DateOp)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_OP");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.IpAddress)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IP_ADDRESS");

                entity.Property(e => e.NewNoteCc)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("NEW_NOTE_CC");

                entity.Property(e => e.NewNoteExam)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("NEW_NOTE_EXAM");

                entity.Property(e => e.NewNoteTp)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("NEW_NOTE_TP");

                entity.Property(e => e.NomMachine)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_MACHINE");

                entity.Property(e => e.OldNoteCc)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("OLD_NOTE_CC");

                entity.Property(e => e.OldNoteExam)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("OLD_NOTE_EXAM");

                entity.Property(e => e.OldNoteTp)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("OLD_NOTE_TP");

                entity.Property(e => e.Semestre)
                    .HasPrecision(1)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.TypeNote)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_NOTE")
                    .HasDefaultValueSql("'P'");

                entity.Property(e => e.TypeOp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_OP");

                entity.Property(e => e.Utilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR");
            });

            modelBuilder.Entity<EspJournalOpRubrique>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.IdEt, e.DateOp, e.TypeOp })
                    .HasName("PK_OP_RUBRIQUE");

                entity.ToTable("ESP_JOURNAL_OP_RUBRIQUE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.DateOp)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_OP");

                entity.Property(e => e.TypeOp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_OP");

                entity.Property(e => e.CodeRub)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_RUB");

                entity.Property(e => e.NewValue)
                    .HasColumnType("NUMBER(18,6)")
                    .HasColumnName("NEW_VALUE");

                entity.Property(e => e.OldValue)
                    .HasColumnType("NUMBER(18,6)")
                    .HasColumnName("OLD_VALUE");

                entity.Property(e => e.Utilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR");
            });

            modelBuilder.Entity<EspLogin>(entity =>
            {
                entity.HasKey(e => e.Idlogin)
                    .HasName("LOGIN_PK");

                entity.ToTable("ESP_LOGIN");

                entity.Property(e => e.Idlogin)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDLOGIN");

                entity.Property(e => e.Login)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LOGIN");

                entity.Property(e => e.Password)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PASSWORD");
            });

            modelBuilder.Entity<EspMailEnseignant>(entity =>
            {
                entity.ToTable("ESP_MAIL_ENSEIGNANT");

                entity.Property(e => e.Id)
                    .HasColumnType("FLOAT")
                    .HasColumnName("ID");

                entity.Property(e => e.MailEns)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MAIL_ENS");

                entity.Property(e => e.NomEns)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_ENS");
            });

            modelBuilder.Entity<EspMessage>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.DateMessage, e.SenderMsg, e.DestMsg })
                    .HasName("ESP_MESSAGE_PK");

                entity.ToTable("ESP_MESSAGE");

                entity.HasIndex(e => new { e.AnneeDeb, e.DateMessage, e.SenderMsg }, "ESP_MESSAGE_PK")
                    .IsUnique();

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.DateMessage)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_MESSAGE")
                    .HasDefaultValueSql("sysdate ");

                entity.Property(e => e.SenderMsg)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SENDER_MSG");

                entity.Property(e => e.DestMsg)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEST_MSG");

                entity.Property(e => e.ContenuMsg)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CONTENU_MSG");

                entity.Property(e => e.Etat)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT")
                    .HasDefaultValueSql("'N' ");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.SubjetMsg)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SUBJET_MSG");

                entity.Property(e => e.TypeMsg)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_MSG");
            });

            modelBuilder.Entity<EspModule>(entity =>
            {
                entity.HasKey(e => e.CodeModule);

                entity.ToTable("ESP_MODULE");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.AEvaluer)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("A_EVALUER")
                    .HasDefaultValueSql("'O'");

                entity.Property(e => e.CodeMatiereEduserv)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MATIERE_EDUSERV");

                entity.Property(e => e.Coef)
                    .HasColumnType("NUMBER(3,1)")
                    .HasColumnName("COEF");

                entity.Property(e => e.Description)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DESIGNATION");

                entity.Property(e => e.Etat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT")
                    .HasDefaultValueSql("'A'");

                entity.Property(e => e.NbHeures)
                    .HasColumnType("NUMBER(5,1)")
                    .HasColumnName("NB_HEURES");

                entity.Property(e => e.NumPanier)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PANIER");

                entity.Property(e => e.TypeEpreuve)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_EPREUVE");

                entity.Property(e => e.Up)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UP");

                entity.HasOne(d => d.UpNavigation)
                    .WithMany(p => p.EspModule)
                    .HasForeignKey(d => d.Up)
                    .HasConstraintName("FK_UP_MODULE");
            });

            modelBuilder.Entity<EspModuleEtudiant>(entity =>
            {
                entity.HasKey(e => new { e.IdEt, e.CodeModule, e.NumPanier, e.CodeCl, e.AnneeDeb, e.AnneeFin });

                entity.ToTable("ESP_MODULE_ETUDIANT");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.NumPanier)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PANIER");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.AnneeFin)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_FIN");

                entity.Property(e => e.MoyennePrincipale)
                    .HasColumnType("NUMBER(7,4)")
                    .HasColumnName("MOYENNE_PRINCIPALE");

                entity.Property(e => e.MoyenneRat)
                    .HasColumnType("NUMBER(7,4)")
                    .HasColumnName("MOYENNE_RAT");

                entity.Property(e => e.NbAbscence)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("NB_ABSCENCE");

                entity.Property(e => e.NumSession)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("NUM_SESSION");

                entity.Property(e => e.Situation)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SITUATION");

                entity.HasOne(d => d.CodeModuleNavigation)
                    .WithMany(p => p.EspModuleEtudiant)
                    .HasForeignKey(d => d.CodeModule)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_MODULE_ET_MODULE");

                entity.HasOne(d => d.IdEtNavigation)
                    .WithMany(p => p.EspModuleEtudiant)
                    .HasForeignKey(d => d.IdEt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ESP_MODU_REFERENCE_ESP_ETUD");

                entity.HasOne(d => d.EspExamen)
                    .WithMany(p => p.EspModuleEtudiant)
                    .HasForeignKey(d => new { d.NumSession, d.AnneeDeb, d.AnneeFin })
                    .HasConstraintName("FK_ESP_MODU_REFERENCE_ESP_EXAM");
            });

            modelBuilder.Entity<EspModulePanierClasseSaiso>(entity =>
            {
                entity.HasKey(e => new { e.CodeModule, e.CodeCl, e.AnneeDeb, e.NumSemestre })
                    .HasName("PK_MODULE_CLASSE_SAISON");

                entity.ToTable("ESP_MODULE_PANIER_CLASSE_SAISO");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.NumSemestre)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("NUM_SEMESTRE");

                entity.Property(e => e.Acomptabiliser)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ACOMPTABILISER");

                entity.Property(e => e.AnneeFin)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_FIN");

                entity.Property(e => e.ApCs)
                    .HasPrecision(1)
                    .HasColumnName("AP_CS");

                entity.Property(e => e.CalculRat)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CALCUL_RAT");

                entity.Property(e => e.ChargeEns1P1)
                    .HasColumnType("NUMBER(5,1)")
                    .HasColumnName("CHARGE_ENS1_P1")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ChargeEns1P2)
                    .HasColumnType("NUMBER(5,1)")
                    .HasColumnName("CHARGE_ENS1_P2")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ChargeEns2P1)
                    .HasColumnType("NUMBER(5,1)")
                    .HasColumnName("CHARGE_ENS2_P1")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ChargeEns2P2)
                    .HasColumnType("NUMBER(5,1)")
                    .HasColumnName("CHARGE_ENS2_P2")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ChargeEns3P1)
                    .HasColumnType("NUMBER(5,1)")
                    .HasColumnName("CHARGE_ENS3_P1")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ChargeEns3P2)
                    .HasColumnType("NUMBER(5,1)")
                    .HasColumnName("CHARGE_ENS3_P2")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ChargeEns4P1)
                    .HasColumnType("NUMBER(5,1)")
                    .HasColumnName("CHARGE_ENS4_P1")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ChargeEns4P2)
                    .HasColumnType("NUMBER(5,1)")
                    .HasColumnName("CHARGE_ENS4_P2")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ChargeEns5P1)
                    .HasColumnType("NUMBER(5,1)")
                    .HasColumnName("CHARGE_ENS5_P1")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ChargeEns5P2)
                    .HasColumnType("NUMBER(5,1)")
                    .HasColumnName("CHARGE_ENS5_P2")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ChargeP1)
                    .HasColumnType("NUMBER(5,1)")
                    .HasColumnName("CHARGE_P1")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ChargeP2)
                    .HasColumnType("NUMBER(5,1)")
                    .HasColumnName("CHARGE_P2")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.Chargep1add)
                    .HasColumnType("NUMBER(19,2)")
                    .HasColumnName("CHARGEP1ADD");

                entity.Property(e => e.Chargep2add)
                    .HasColumnType("NUMBER(19,2)")
                    .HasColumnName("CHARGEP2ADD");

                entity.Property(e => e.CodePlan)
                    .HasPrecision(19)
                    .HasColumnName("CODE_PLAN");

                entity.Property(e => e.CodeUe)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("CODE_UE");

                entity.Property(e => e.Coef)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF");

                entity.Property(e => e.DateDebut)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_DEBUT");

                entity.Property(e => e.DateExamen)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_EXAMEN");

                entity.Property(e => e.DateFin)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_FIN");

                entity.Property(e => e.DateRat)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_RAT");

                entity.Property(e => e.DateRattrapage)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_RATTRAPAGE");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.DesignationNew)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DESIGNATION_NEW");

                entity.Property(e => e.ExisteCc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXISTE_CC");

                entity.Property(e => e.ExisteTp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXISTE_TP");

                entity.Property(e => e.HeureExam)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("HEURE_EXAM");

                entity.Property(e => e.HeureRat)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("HEURE_RAT");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS")
                    .HasDefaultValueSql("'V-463-12'");

                entity.Property(e => e.IdEns2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS2");

                entity.Property(e => e.IdEns3)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS3");

                entity.Property(e => e.IdEns4)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS4");

                entity.Property(e => e.IdEns5)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS5");

                entity.Property(e => e.NbEcts)
                    .HasPrecision(3)
                    .HasColumnName("NB_ECTS");

                entity.Property(e => e.NbHeures)
                    .HasColumnType("NUMBER(5,1)")
                    .HasColumnName("NB_HEURES");

                entity.Property(e => e.NbHeuresEns)
                    .HasColumnType("NUMBER(5,1)")
                    .HasColumnName("NB_HEURES_ENS");

                entity.Property(e => e.NbHeuresEns2)
                    .HasColumnType("NUMBER(5,1)")
                    .HasColumnName("NB_HEURES_ENS2");

                entity.Property(e => e.NbHoraireRealises)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("NB_HORAIRE_REALISES");

                entity.Property(e => e.Nbheuradd)
                    .HasColumnType("NUMBER(19,2)")
                    .HasColumnName("NBHEURADD");

                entity.Property(e => e.NumPanier)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PANIER");

                entity.Property(e => e.NumPeriodfe)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("NUM_PERIODFE");

                entity.Property(e => e.Numpromotioncs)
                    .HasPrecision(4)
                    .HasColumnName("NUMPROMOTIONCS");

                entity.Property(e => e.Periode)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PERIODE");

                entity.Property(e => e.Salle)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SALLE");

                entity.Property(e => e.SalleExam)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SALLE_EXAM");

                entity.Property(e => e.SalleExam2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SALLE_EXAM2");

                entity.Property(e => e.SeanceUnique)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SEANCE_UNIQUE")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.Surveillant)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SURVEILLANT");

                entity.Property(e => e.Surveillant2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SURVEILLANT2");

                entity.Property(e => e.TypeEpreuve)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_EPREUVE")
                    .HasDefaultValueSql("'01'");

                entity.Property(e => e.Utilisateur)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR");

                entity.HasOne(d => d.CodeModuleNavigation)
                    .WithMany(p => p.EspModulePanierClasseSaiso)
                    .HasForeignKey(d => d.CodeModule)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_MOD_PAN_MOD_CL_SAISON");
            });

            modelBuilder.Entity<EspMoyModuleEtSemestriel>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.IdEt, e.CodeModule, e.Semestre })
                    .HasName("PK_MOY_MODULE_SEMESTRIEL");

                entity.ToTable("ESP_MOY_MODULE_ET_SEMESTRIEL");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.Semestre)
                    .HasPrecision(1)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeUe)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("CODE_UE");

                entity.Property(e => e.Coef)
                    .HasPrecision(2)
                    .HasColumnName("COEF");

                entity.Property(e => e.DateDernMaj)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_DERN_MAJ");

                entity.Property(e => e.DesignationModule)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DESIGNATION_MODULE");

                entity.Property(e => e.Moyenne)
                    .HasColumnType("NUMBER(10,2)")
                    .HasColumnName("MOYENNE");

                entity.Property(e => e.NbHeures)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURES");

                entity.Property(e => e.TypeMoy)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_MOY");

                entity.Property(e => e.Utilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR");
            });

            modelBuilder.Entity<EspMoyModuleEtudiant>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.IdEt, e.CodeModule, e.TypeMoy, e.CodeCl })
                    .HasName("PK_MOY_MODULE_ET");

                entity.ToTable("ESP_MOY_MODULE_ETUDIANT");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.TypeMoy)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_MOY");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeUe)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("CODE_UE");

                entity.Property(e => e.Coef)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("COEF");

                entity.Property(e => e.DateDernMaj)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_DERN_MAJ");

                entity.Property(e => e.DesignationModule)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DESIGNATION_MODULE");

                entity.Property(e => e.Moyenne)
                    .HasColumnType("NUMBER(10,2)")
                    .HasColumnName("MOYENNE");

                entity.Property(e => e.NbHeures)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURES");

                entity.Property(e => e.NiveauAcces)
                    .HasPrecision(1)
                    .HasColumnName("NIVEAU_ACCES");

                entity.Property(e => e.NumPanier)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PANIER");

                entity.Property(e => e.Utilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR");

                entity.HasOne(d => d.CodeModuleNavigation)
                    .WithMany(p => p.EspMoyModuleEtudiant)
                    .HasForeignKey(d => d.CodeModule)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_MOY_ET_MODULE");

                entity.HasOne(d => d.EspMoyPanierEtudiant)
                    .WithMany(p => p.EspMoyModuleEtudiant)
                    .HasForeignKey(d => new { d.AnneeDeb, d.IdEt, d.NumPanier, d.TypeMoy })
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_LINK_MODULE_PANIER");
            });

            modelBuilder.Entity<EspMoyPanierEtudiant>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.IdEt, e.NumPanier, e.TypeMoy })
                    .HasName("PK_MOY_PANIER_ET");

                entity.ToTable("ESP_MOY_PANIER_ETUDIANT");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.NumPanier)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PANIER");

                entity.Property(e => e.TypeMoy)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_MOY");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.Coef)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("COEF");

                entity.Property(e => e.DesignationPanier)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DESIGNATION_PANIER");

                entity.Property(e => e.EtIdEt)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ET_ID_ET");

                entity.Property(e => e.Moyenne)
                    .HasColumnType("NUMBER(10,2)")
                    .HasColumnName("MOYENNE");

                entity.Property(e => e.NbHeures)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURES");

                entity.Property(e => e.NiveauAcces)
                    .HasPrecision(1)
                    .HasColumnName("NIVEAU_ACCES");

                entity.Property(e => e.Utilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR");

                entity.HasOne(d => d.EtIdEtNavigation)
                    .WithMany(p => p.EspMoyPanierEtudiant)
                    .HasForeignKey(d => d.EtIdEt)
                    .HasConstraintName("FK71CC761D87CE2D70");
            });

            modelBuilder.Entity<EspMoyUeEtudiant>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.IdEt, e.CodeCl, e.CodeUe, e.TypeMoy })
                    .HasName("PK_MOY_UE_ET");

                entity.ToTable("ESP_MOY_UE_ETUDIANT");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeUe)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("CODE_UE");

                entity.Property(e => e.TypeMoy)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_MOY");

                entity.Property(e => e.Moyenne)
                    .HasColumnType("NUMBER(10,2)")
                    .HasColumnName("MOYENNE");

                entity.Property(e => e.NbEcts)
                    .HasColumnType("NUMBER(6,2)")
                    .HasColumnName("NB_ECTS");

                entity.Property(e => e.NiveauAcces)
                    .HasPrecision(1)
                    .HasColumnName("NIVEAU_ACCES");

                entity.Property(e => e.Utilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR");

                entity.HasOne(d => d.IdEtNavigation)
                    .WithMany(p => p.EspMoyUeEtudiant)
                    .HasForeignKey(d => d.IdEt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_UE_ETUDIANT");

                entity.HasOne(d => d.EspUe)
                    .WithMany(p => p.EspMoyUeEtudiant)
                    .HasForeignKey(d => new { d.CodeUe, d.AnneeDeb })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_MOY_UE_REF_UE");
            });

            modelBuilder.Entity<EspNiveauLangue>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_NIVEAU_LANGUE");

                entity.HasIndex(e => new { e.IdEt, e.DateNiveau, e.Langue }, "ESP_NIVEAU_LANGUE_X")
                    .IsUnique();

                entity.Property(e => e.AncienNiveau)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ANCIEN_NIVEAU");

                entity.Property(e => e.DateNiveau)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_NIVEAU");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.IdEt)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.Langue)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LANGUE");

                entity.Property(e => e.NiveauActuel)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NIVEAU_ACTUEL");
            });

            modelBuilder.Entity<EspNote>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.CodeCl, e.CodeModule, e.Semestre, e.IdEt });

                entity.ToTable("ESP_NOTE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.Semestre)
                    .HasPrecision(1)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.Absent)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ABSENT");

                entity.Property(e => e.AbsentCc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ABSENT_CC");

                entity.Property(e => e.AbsentEcrit)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ABSENT_ECRIT");

                entity.Property(e => e.AbsentExam)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ABSENT_EXAM");

                entity.Property(e => e.AbsentOrale)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ABSENT_ORALE");

                entity.Property(e => e.AbsentTp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ABSENT_TP");

                entity.Property(e => e.AnneeFin)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_FIN");

                entity.Property(e => e.DateDeroulement)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_DEROULEMENT");

                entity.Property(e => e.Dispense)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DISPENSE")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.Justif)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("JUSTIF");

                entity.Property(e => e.NatureNote)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_NOTE");

                entity.Property(e => e.NbHeure)
                    .HasPrecision(2)
                    .HasColumnName("NB_HEURE");

                entity.Property(e => e.NivAcquisAnglais)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NIV_ACQUIS_ANGLAIS");

                entity.Property(e => e.NiveauAcquis)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NIVEAU_ACQUIS");

                entity.Property(e => e.NiveauActuel)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NIVEAU_ACTUEL");

                entity.Property(e => e.NoteCc)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("NOTE_CC");

                entity.Property(e => e.NoteCcLang)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("NOTE_CC_LANG");

                entity.Property(e => e.NoteEcrit)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("NOTE_ECRIT");

                entity.Property(e => e.NoteEcritLang)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("NOTE_ECRIT_LANG");

                entity.Property(e => e.NoteEsb01)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("NOTE_ESB_01");

                entity.Property(e => e.NoteEsb02)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("NOTE_ESB_02");

                entity.Property(e => e.NoteExam)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("NOTE_EXAM");

                entity.Property(e => e.NoteOrale)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("NOTE_ORALE");

                entity.Property(e => e.NoteOraleLang)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("NOTE_ORALE_LANG");

                entity.Property(e => e.NoteRatrap)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("NOTE_RATRAP")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.NoteTp)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("NOTE_TP");

                entity.Property(e => e.NumPanier)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PANIER");

                entity.Property(e => e.Numpromotioncs)
                    .HasPrecision(4)
                    .HasColumnName("NUMPROMOTIONCS");

                entity.Property(e => e.Observation)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVATION");

                entity.Property(e => e.TauxCcLang)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("TAUX_CC_LANG");

                entity.Property(e => e.TauxEcritLang)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("TAUX_ECRIT_LANG");

                entity.Property(e => e.TauxNote)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("TAUX_NOTE");

                entity.Property(e => e.TauxOraleLang)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("TAUX_ORALE_LANG");

                entity.Property(e => e.TypeNote)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_NOTE");

                entity.Property(e => e.TypeSession)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_SESSION");

                entity.Property(e => e.Utilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR");

                entity.HasOne(d => d.IdEtNavigation)
                    .WithMany(p => p.EspNote)
                    .HasForeignKey(d => d.IdEt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ESP_NOTE_REFERENCE_ESP_ETUD");

                entity.HasOne(d => d.EspEnteteNote)
                    .WithMany(p => p.EspNote)
                    .HasForeignKey(d => new { d.AnneeDeb, d.CodeCl, d.CodeModule, d.Semestre })
                    .HasConstraintName("FK_NOTE_REF_ENTETE_NOTE");
            });

            modelBuilder.Entity<EspNoteAnglaisS2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_NOTE_ANGLAIS_S2");

                entity.HasIndex(e => e.IdMoodle, "ESP_NOTE_ANGLAIS_S2_X")
                    .IsUnique();

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.IdMoodle)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ID_MOODLE");

                entity.Property(e => e.NoteAnglais)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("NOTE_ANGLAIS");
            });

            modelBuilder.Entity<EspNoteFikr>(entity =>
            {
                entity.HasKey(e => new { e.IdEt, e.IdEns, e.NumSemestre, e.CodeModule, e.AnneeDeb, e.CodeCl })
                    .HasName("ESP_NOTE_FIKR_PK");

                entity.ToTable("ESP_NOTE_FIKR");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.NumSemestre)
                    .HasPrecision(5)
                    .HasColumnName("NUM_SEMESTRE");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.AbsDc1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ABS_DC1");

                entity.Property(e => e.AbsDc2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ABS_DC2");

                entity.Property(e => e.AbsDs)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ABS_DS");

                entity.Property(e => e.AbsOr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ABS_OR");

                entity.Property(e => e.AbsTp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ABS_TP");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE")
                    .HasDefaultValueSql("SYSDATE\n   ");

                entity.Property(e => e.Dc1)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("DC1");

                entity.Property(e => e.Dc2)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("DC2");

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DESIGNATION");

                entity.Property(e => e.Ds)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("DS");

                entity.Property(e => e.Nom)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOM");

                entity.Property(e => e.NomEns)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOM_ENS");

                entity.Property(e => e.Orale)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("ORALE");

                entity.Property(e => e.Tp)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("TP");
            });

            modelBuilder.Entity<EspNoteFrancaisS2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_NOTE_FRANCAIS_S2");

                entity.HasIndex(e => e.IdMoodle, "ESP_NOTE_FRANCAIS_S2_X")
                    .IsUnique();

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.IdMoodle)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ID_MOODLE");

                entity.Property(e => e.NoteFrancais)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("NOTE_FRANCAIS");
            });

            modelBuilder.Entity<EspNoteQiS2New>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_NOTE_QI_S2_NEW");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.IdMoodle)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ID_MOODLE");

                entity.Property(e => e.NoteQi)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("NOTE_QI");
            });

            modelBuilder.Entity<EspNoteRat>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_NOTE_RAT");

                entity.HasIndex(e => new { e.AnneeDeb, e.CodeModule, e.DateDeroulement, e.IdEt, e.TypeRat }, "PK_NOTE_RAT")
                    .IsUnique();

                entity.Property(e => e.AnneeCredit)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_CREDIT");

                entity.Property(e => e.AnneeDeb)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeModule)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.DateDeroulement)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_DEROULEMENT");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.IdEt)
                    .IsRequired()
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.NbHeure)
                    .HasPrecision(2)
                    .HasColumnName("NB_HEURE");

                entity.Property(e => e.Note)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("NOTE")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.Observation)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVATION");

                entity.Property(e => e.Semestre)
                    .HasPrecision(1)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.TypeRat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_RAT");

                entity.Property(e => e.Utilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR");

                entity.HasOne(d => d.CodeModuleNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.CodeModule)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_NOTE_RAT_MODULE");

                entity.HasOne(d => d.IdEtNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.IdEt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ETUDIANT");
            });

            modelBuilder.Entity<EspObservationEnseignant>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.DateSaisieObs, e.IdEns })
                    .HasName("PK_OBSERVATION_ENSEIGNANT");

                entity.ToTable("ESP_OBSERVATION_ENSEIGNANT");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.DateSaisieObs)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE_OBS");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.IdResp)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_RESP");

                entity.Property(e => e.Observation)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVATION");

                entity.Property(e => e.QualiteResp)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("QUALITE_RESP");
            });

            modelBuilder.Entity<EspObservationEtudiant>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_OBSERVATION_ETUDIANT");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.DateObs)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_OBS");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.Observation)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVATION");
            });

            modelBuilder.Entity<EspOrientation>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.IdEt });

                entity.ToTable("ESP_ORIENTATION");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.Ch1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CH1");

                entity.Property(e => e.Ch2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CH2");

                entity.Property(e => e.Ch3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CH3");

                entity.Property(e => e.Ch4)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CH4");

                entity.Property(e => e.Ch5)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CH5");

                entity.Property(e => e.Ch6)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CH6");

                entity.Property(e => e.Ch7)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CH7");

                entity.Property(e => e.Ch8)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CH8");

                entity.Property(e => e.Chfinal)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CHFINAL");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE")
                    .HasDefaultValueSql("SYSDATE");

                entity.Property(e => e.Specialite)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SPECIALITE");
            });

            modelBuilder.Entity<EspParentPwd>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_PARENT_PWD");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.PwdEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PWD_ET");
            });

            modelBuilder.Entity<EspPrevision>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.CategorieClasse, e.NiveauAcces })
                    .HasName("PK_PREVISION");

                entity.ToTable("ESP_PREVISION");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CategorieClasse)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIE_CLASSE");

                entity.Property(e => e.NiveauAcces)
                    .HasPrecision(1)
                    .HasColumnName("NIVEAU_ACCES");

                entity.Property(e => e.CodeSpecialite)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_SPECIALITE");

                entity.Property(e => e.DateLastModif)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_LAST_MODIF")
                    .HasDefaultValueSql("sysdate");

                entity.Property(e => e.EffectifPrevue)
                    .HasPrecision(6)
                    .HasColumnName("EFFECTIF_PREVUE");

                entity.Property(e => e.EffectifReel)
                    .HasPrecision(6)
                    .HasColumnName("EFFECTIF_REEL");

                entity.Property(e => e.NbClasse)
                    .HasPrecision(3)
                    .HasColumnName("NB_CLASSE");

                entity.Property(e => e.NbEtudiantRejet)
                    .HasPrecision(4)
                    .HasColumnName("NB_ETUDIANT_REJET");

                entity.Property(e => e.NbEtudiantS2)
                    .HasPrecision(4)
                    .HasColumnName("NB_ETUDIANT_S2");

                entity.Property(e => e.NbEtudiantVentile)
                    .HasPrecision(4)
                    .HasColumnName("NB_ETUDIANT_VENTILE");

                entity.Property(e => e.ScoreMinAdmis)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("SCORE_MIN_ADMIS");

                entity.Property(e => e.ScoreMinS2)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("SCORE_MIN_S2");

                entity.Property(e => e.ScoreRejet)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("SCORE_REJET");
            });

            modelBuilder.Entity<EspProjet>(entity =>
            {
                entity.HasKey(e => e.IdProjet)
                    .HasName("PK_PROJET");

                entity.ToTable("ESP_PROJET");

                entity.Property(e => e.IdProjet)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_PROJET");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.DescriptionProjet)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION_PROJET");

                entity.Property(e => e.IdEnseignant)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENSEIGNANT");

                entity.Property(e => e.Methodologie)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("METHODOLOGIE");

                entity.Property(e => e.Niveau)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NIVEAU");

                entity.Property(e => e.NomProjet)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PROJET");

                entity.Property(e => e.Technologies)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("TECHNOLOGIES");

                entity.Property(e => e.TypeProjet)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_PROJET");

                entity.HasOne(d => d.AnneeDebNavigation)
                    .WithMany(p => p.EspProjet)
                    .HasForeignKey(d => d.AnneeDeb)
                    .HasConstraintName("FK_ANNEE_PROJET");

                entity.HasOne(d => d.CodeModuleNavigation)
                    .WithMany(p => p.EspProjet)
                    .HasForeignKey(d => d.CodeModule)
                    .HasConstraintName("FK_MODULE_PROJET");
            });

            modelBuilder.Entity<EspProjetEtudiant>(entity =>
            {
                entity.HasKey(e => new { e.IdProjet, e.IdEt })
                    .HasName("KEY_PROJ_ET");

                entity.ToTable("ESP_PROJET_ETUDIANT");

                entity.Property(e => e.IdProjet)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_PROJET");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE");
            });

            modelBuilder.Entity<EspProjetN>(entity =>
            {
                entity.HasKey(e => e.IdProjet)
                    .HasName("PK_PROJ");

                entity.ToTable("ESP_PROJET_N");

                entity.Property(e => e.IdProjet)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_PROJET");

                entity.Property(e => e.AnneeDeb)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE");

                entity.Property(e => e.DescriptionProjet)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION_PROJET");

                entity.Property(e => e.Duree)
                    .HasPrecision(2)
                    .HasColumnName("DUREE");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.Methodologie)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METHODOLOGIE");

                entity.Property(e => e.NomProjet)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PROJET");

                entity.Property(e => e.Periode)
                    .HasPrecision(1)
                    .HasColumnName("PERIODE");

                entity.Property(e => e.Semestre)
                    .HasPrecision(1)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Technologies)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TECHNOLOGIES");

                entity.Property(e => e.TypeProjet)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_PROJET");
            });

            modelBuilder.Entity<EspProjetNew>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_PROJET_NEW");

                entity.HasIndex(e => new { e.AnneeDeb, e.IdProjet, e.TypeProjet }, "ESP_PROJET_NEW_X")
                    .IsUnique();

                entity.Property(e => e.AnneeDeb)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.DescriptionProjet)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION_PROJET");

                entity.Property(e => e.Duree)
                    .HasPrecision(2)
                    .HasColumnName("DUREE");

                entity.Property(e => e.IdGroupeProjet)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ID_GROUPE_PROJET");

                entity.Property(e => e.IdProjet)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_PROJET");

                entity.Property(e => e.Methodologie)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METHODOLOGIE");

                entity.Property(e => e.NiveauEtudiant)
                    .HasPrecision(1)
                    .HasColumnName("NIVEAU_ETUDIANT");

                entity.Property(e => e.NomProjet)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PROJET");

                entity.Property(e => e.Periode)
                    .HasPrecision(1)
                    .HasColumnName("PERIODE");

                entity.Property(e => e.Semestre)
                    .HasPrecision(1)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Technologies)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TECHNOLOGIES");

                entity.Property(e => e.TypeProjet)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_PROJET");
            });

            modelBuilder.Entity<EspPvClasse>(entity =>
            {
                entity.HasKey(e => new { e.CodeCl, e.IdEt, e.Annee });

                entity.ToTable("ESP_PV_CLASSE");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.Annee)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE");

                entity.Property(e => e.ApCs)
                    .HasPrecision(1)
                    .HasColumnName("AP_CS");

                entity.Property(e => e.CodeDecision)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION");

                entity.Property(e => e.CodeDecisionRat2)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_RAT2");

                entity.Property(e => e.CodeDecisionRatt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DECISION_RATT");

                entity.Property(e => e.CoefCol1)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_1");

                entity.Property(e => e.CoefCol10)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_10");

                entity.Property(e => e.CoefCol11)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_11");

                entity.Property(e => e.CoefCol12)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_12");

                entity.Property(e => e.CoefCol13)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_13");

                entity.Property(e => e.CoefCol14)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_14");

                entity.Property(e => e.CoefCol15)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_15");

                entity.Property(e => e.CoefCol16)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_16");

                entity.Property(e => e.CoefCol17)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_17");

                entity.Property(e => e.CoefCol18)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_18");

                entity.Property(e => e.CoefCol19)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_19");

                entity.Property(e => e.CoefCol2)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_2");

                entity.Property(e => e.CoefCol20)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_20");

                entity.Property(e => e.CoefCol21)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_21");

                entity.Property(e => e.CoefCol22)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_22");

                entity.Property(e => e.CoefCol23)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_23");

                entity.Property(e => e.CoefCol24)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_24");

                entity.Property(e => e.CoefCol25)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_25");

                entity.Property(e => e.CoefCol26)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_26");

                entity.Property(e => e.CoefCol27)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_27");

                entity.Property(e => e.CoefCol28)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_28");

                entity.Property(e => e.CoefCol29)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_29");

                entity.Property(e => e.CoefCol3)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_3");

                entity.Property(e => e.CoefCol30)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_30");

                entity.Property(e => e.CoefCol31)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_31");

                entity.Property(e => e.CoefCol32)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_32");

                entity.Property(e => e.CoefCol33)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_33");

                entity.Property(e => e.CoefCol34)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_34");

                entity.Property(e => e.CoefCol35)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_35");

                entity.Property(e => e.CoefCol36)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_36");

                entity.Property(e => e.CoefCol37)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_37");

                entity.Property(e => e.CoefCol38)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_38");

                entity.Property(e => e.CoefCol39)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_39");

                entity.Property(e => e.CoefCol4)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_4");

                entity.Property(e => e.CoefCol40)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_40");

                entity.Property(e => e.CoefCol41)
                    .HasColumnType("NUMBER(3,1)")
                    .HasColumnName("COEF_COL_41");

                entity.Property(e => e.CoefCol42)
                    .HasColumnType("NUMBER(3,1)")
                    .HasColumnName("COEF_COL_42");

                entity.Property(e => e.CoefCol43)
                    .HasColumnType("NUMBER(3,1)")
                    .HasColumnName("COEF_COL_43");

                entity.Property(e => e.CoefCol44)
                    .HasColumnType("NUMBER(3,1)")
                    .HasColumnName("COEF_COL_44");

                entity.Property(e => e.CoefCol45)
                    .HasColumnType("NUMBER(3,1)")
                    .HasColumnName("COEF_COL_45");

                entity.Property(e => e.CoefCol46)
                    .HasColumnType("NUMBER(3,1)")
                    .HasColumnName("COEF_COL_46");

                entity.Property(e => e.CoefCol47)
                    .HasColumnType("NUMBER(3,1)")
                    .HasColumnName("COEF_COL_47");

                entity.Property(e => e.CoefCol48)
                    .HasColumnType("NUMBER(3,1)")
                    .HasColumnName("COEF_COL_48");

                entity.Property(e => e.CoefCol49)
                    .HasColumnType("NUMBER(3,1)")
                    .HasColumnName("COEF_COL_49");

                entity.Property(e => e.CoefCol5)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_5");

                entity.Property(e => e.CoefCol50)
                    .HasColumnType("NUMBER(3,1)")
                    .HasColumnName("COEF_COL_50");

                entity.Property(e => e.CoefCol51)
                    .HasColumnType("NUMBER(3,1)")
                    .HasColumnName("COEF_COL_51");

                entity.Property(e => e.CoefCol52)
                    .HasColumnType("NUMBER(3,1)")
                    .HasColumnName("COEF_COL_52");

                entity.Property(e => e.CoefCol53)
                    .HasColumnType("NUMBER(3,1)")
                    .HasColumnName("COEF_COL_53");

                entity.Property(e => e.CoefCol54)
                    .HasColumnType("NUMBER(3,1)")
                    .HasColumnName("COEF_COL_54");

                entity.Property(e => e.CoefCol55)
                    .HasColumnType("NUMBER(3,1)")
                    .HasColumnName("COEF_COL_55");

                entity.Property(e => e.CoefCol56)
                    .HasColumnType("NUMBER(3,1)")
                    .HasColumnName("COEF_COL_56");

                entity.Property(e => e.CoefCol57)
                    .HasColumnType("NUMBER(3,1)")
                    .HasColumnName("COEF_COL_57");

                entity.Property(e => e.CoefCol58)
                    .HasColumnType("NUMBER(3,1)")
                    .HasColumnName("COEF_COL_58");

                entity.Property(e => e.CoefCol59)
                    .HasColumnType("NUMBER(3,1)")
                    .HasColumnName("COEF_COL_59");

                entity.Property(e => e.CoefCol6)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_6");

                entity.Property(e => e.CoefCol60)
                    .HasColumnType("NUMBER(3,1)")
                    .HasColumnName("COEF_COL_60");

                entity.Property(e => e.CoefCol7)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_7");

                entity.Property(e => e.CoefCol8)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_8");

                entity.Property(e => e.CoefCol9)
                    .HasColumnType("NUMBER(4,2)")
                    .HasColumnName("COEF_COL_9");

                entity.Property(e => e.Credit1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CREDIT_1");

                entity.Property(e => e.Credit2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CREDIT_2");

                entity.Property(e => e.CreditRouge)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CREDIT_ROUGE");

                entity.Property(e => e.CreditVert)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CREDIT_VERT");

                entity.Property(e => e.DatePv)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_PV");

                entity.Property(e => e.EtatCol1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_1");

                entity.Property(e => e.EtatCol10)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_10");

                entity.Property(e => e.EtatCol11)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_11");

                entity.Property(e => e.EtatCol12)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_12");

                entity.Property(e => e.EtatCol13)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_13");

                entity.Property(e => e.EtatCol14)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_14");

                entity.Property(e => e.EtatCol15)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_15");

                entity.Property(e => e.EtatCol16)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_16");

                entity.Property(e => e.EtatCol17)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_17");

                entity.Property(e => e.EtatCol18)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_18");

                entity.Property(e => e.EtatCol19)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_19");

                entity.Property(e => e.EtatCol2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_2");

                entity.Property(e => e.EtatCol20)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_20");

                entity.Property(e => e.EtatCol21)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_21");

                entity.Property(e => e.EtatCol22)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_22");

                entity.Property(e => e.EtatCol23)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_23");

                entity.Property(e => e.EtatCol24)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_24");

                entity.Property(e => e.EtatCol25)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_25");

                entity.Property(e => e.EtatCol26)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_26");

                entity.Property(e => e.EtatCol27)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_27");

                entity.Property(e => e.EtatCol28)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_28");

                entity.Property(e => e.EtatCol29)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_29");

                entity.Property(e => e.EtatCol3)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_3");

                entity.Property(e => e.EtatCol30)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_30");

                entity.Property(e => e.EtatCol31)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_31");

                entity.Property(e => e.EtatCol32)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_32");

                entity.Property(e => e.EtatCol33)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_33");

                entity.Property(e => e.EtatCol34)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_34");

                entity.Property(e => e.EtatCol35)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_35");

                entity.Property(e => e.EtatCol36)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_36");

                entity.Property(e => e.EtatCol37)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_37");

                entity.Property(e => e.EtatCol38)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_38");

                entity.Property(e => e.EtatCol39)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_39");

                entity.Property(e => e.EtatCol4)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_4");

                entity.Property(e => e.EtatCol40)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_40");

                entity.Property(e => e.EtatCol41)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_41");

                entity.Property(e => e.EtatCol42)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_42");

                entity.Property(e => e.EtatCol43)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_43");

                entity.Property(e => e.EtatCol44)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_44");

                entity.Property(e => e.EtatCol45)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_45");

                entity.Property(e => e.EtatCol46)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_46");

                entity.Property(e => e.EtatCol47)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_47");

                entity.Property(e => e.EtatCol48)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_48");

                entity.Property(e => e.EtatCol49)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_49");

                entity.Property(e => e.EtatCol5)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_5");

                entity.Property(e => e.EtatCol50)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_50");

                entity.Property(e => e.EtatCol51)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_51");

                entity.Property(e => e.EtatCol52)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_52");

                entity.Property(e => e.EtatCol53)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_53");

                entity.Property(e => e.EtatCol54)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_54");

                entity.Property(e => e.EtatCol55)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_55");

                entity.Property(e => e.EtatCol56)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_56");

                entity.Property(e => e.EtatCol57)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_57");

                entity.Property(e => e.EtatCol58)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_58");

                entity.Property(e => e.EtatCol59)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_59");

                entity.Property(e => e.EtatCol6)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_6");

                entity.Property(e => e.EtatCol60)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_60");

                entity.Property(e => e.EtatCol7)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_7");

                entity.Property(e => e.EtatCol8)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_8");

                entity.Property(e => e.EtatCol9)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_COL_9");

                entity.Property(e => e.IdCol1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_1");

                entity.Property(e => e.IdCol10)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_10");

                entity.Property(e => e.IdCol11)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_11");

                entity.Property(e => e.IdCol12)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_12");

                entity.Property(e => e.IdCol13)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_13");

                entity.Property(e => e.IdCol14)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_14");

                entity.Property(e => e.IdCol15)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_15");

                entity.Property(e => e.IdCol16)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_16");

                entity.Property(e => e.IdCol17)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_17");

                entity.Property(e => e.IdCol18)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_18");

                entity.Property(e => e.IdCol19)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_19");

                entity.Property(e => e.IdCol2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_2");

                entity.Property(e => e.IdCol20)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_20");

                entity.Property(e => e.IdCol21)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_21");

                entity.Property(e => e.IdCol22)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_22");

                entity.Property(e => e.IdCol23)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_23");

                entity.Property(e => e.IdCol24)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_24");

                entity.Property(e => e.IdCol25)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_25");

                entity.Property(e => e.IdCol26)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_26");

                entity.Property(e => e.IdCol27)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_27");

                entity.Property(e => e.IdCol28)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_28");

                entity.Property(e => e.IdCol29)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_29");

                entity.Property(e => e.IdCol3)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_3");

                entity.Property(e => e.IdCol30)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_30");

                entity.Property(e => e.IdCol31)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_31");

                entity.Property(e => e.IdCol32)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_32");

                entity.Property(e => e.IdCol33)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_33");

                entity.Property(e => e.IdCol34)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_34");

                entity.Property(e => e.IdCol35)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_35");

                entity.Property(e => e.IdCol36)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_36");

                entity.Property(e => e.IdCol37)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_37");

                entity.Property(e => e.IdCol38)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_38");

                entity.Property(e => e.IdCol39)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_39");

                entity.Property(e => e.IdCol4)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_4");

                entity.Property(e => e.IdCol40)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_40");

                entity.Property(e => e.IdCol41)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_41");

                entity.Property(e => e.IdCol42)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_42");

                entity.Property(e => e.IdCol43)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_43");

                entity.Property(e => e.IdCol44)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_44");

                entity.Property(e => e.IdCol45)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_45");

                entity.Property(e => e.IdCol46)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_46");

                entity.Property(e => e.IdCol47)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_47");

                entity.Property(e => e.IdCol48)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_48");

                entity.Property(e => e.IdCol49)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_49");

                entity.Property(e => e.IdCol5)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_5");

                entity.Property(e => e.IdCol50)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_50");

                entity.Property(e => e.IdCol51)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_51");

                entity.Property(e => e.IdCol52)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_52");

                entity.Property(e => e.IdCol53)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_53");

                entity.Property(e => e.IdCol54)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_54");

                entity.Property(e => e.IdCol55)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_55");

                entity.Property(e => e.IdCol56)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_56");

                entity.Property(e => e.IdCol57)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_57");

                entity.Property(e => e.IdCol58)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_58");

                entity.Property(e => e.IdCol59)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_59");

                entity.Property(e => e.IdCol6)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_6");

                entity.Property(e => e.IdCol60)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_60");

                entity.Property(e => e.IdCol7)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_7");

                entity.Property(e => e.IdCol8)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_8");

                entity.Property(e => e.IdCol9)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_COL_9");

                entity.Property(e => e.LibDecision)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION");

                entity.Property(e => e.LibDecisionRat2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION_RAT2");

                entity.Property(e => e.LibDecisionRatt)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("LIB_DECISION_RATT");

                entity.Property(e => e.MoyCol1)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_1");

                entity.Property(e => e.MoyCol10)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_10");

                entity.Property(e => e.MoyCol11)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_11");

                entity.Property(e => e.MoyCol12)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_12");

                entity.Property(e => e.MoyCol13)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_13");

                entity.Property(e => e.MoyCol14)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_14");

                entity.Property(e => e.MoyCol15)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_15");

                entity.Property(e => e.MoyCol16)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_16");

                entity.Property(e => e.MoyCol17)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_17");

                entity.Property(e => e.MoyCol18)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_18");

                entity.Property(e => e.MoyCol19)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_19");

                entity.Property(e => e.MoyCol2)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_2");

                entity.Property(e => e.MoyCol20)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_20");

                entity.Property(e => e.MoyCol21)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_21");

                entity.Property(e => e.MoyCol22)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_22");

                entity.Property(e => e.MoyCol23)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_23");

                entity.Property(e => e.MoyCol24)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_24");

                entity.Property(e => e.MoyCol25)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_25");

                entity.Property(e => e.MoyCol26)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_26");

                entity.Property(e => e.MoyCol27)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_27");

                entity.Property(e => e.MoyCol28)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_28");

                entity.Property(e => e.MoyCol29)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_29");

                entity.Property(e => e.MoyCol3)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_3");

                entity.Property(e => e.MoyCol30)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_30");

                entity.Property(e => e.MoyCol31)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_31");

                entity.Property(e => e.MoyCol32)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_32");

                entity.Property(e => e.MoyCol33)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_33");

                entity.Property(e => e.MoyCol34)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_34");

                entity.Property(e => e.MoyCol35)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_35");

                entity.Property(e => e.MoyCol36)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_36");

                entity.Property(e => e.MoyCol37)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_37");

                entity.Property(e => e.MoyCol38)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_38");

                entity.Property(e => e.MoyCol39)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_39");

                entity.Property(e => e.MoyCol4)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_4");

                entity.Property(e => e.MoyCol40)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_40");

                entity.Property(e => e.MoyCol41)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_41");

                entity.Property(e => e.MoyCol42)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_42");

                entity.Property(e => e.MoyCol43)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_43");

                entity.Property(e => e.MoyCol44)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_44");

                entity.Property(e => e.MoyCol45)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_45");

                entity.Property(e => e.MoyCol46)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_46");

                entity.Property(e => e.MoyCol47)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_47");

                entity.Property(e => e.MoyCol48)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_48");

                entity.Property(e => e.MoyCol49)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_49");

                entity.Property(e => e.MoyCol5)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_5");

                entity.Property(e => e.MoyCol50)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_50");

                entity.Property(e => e.MoyCol51)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_51");

                entity.Property(e => e.MoyCol52)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_52");

                entity.Property(e => e.MoyCol53)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_53");

                entity.Property(e => e.MoyCol54)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_54");

                entity.Property(e => e.MoyCol55)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_55");

                entity.Property(e => e.MoyCol56)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_56");

                entity.Property(e => e.MoyCol57)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_57");

                entity.Property(e => e.MoyCol58)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_58");

                entity.Property(e => e.MoyCol59)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_59");

                entity.Property(e => e.MoyCol6)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_6");

                entity.Property(e => e.MoyCol60)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_60");

                entity.Property(e => e.MoyCol7)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_7");

                entity.Property(e => e.MoyCol8)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_8");

                entity.Property(e => e.MoyCol9)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOY_COL_9");

                entity.Property(e => e.Moygen)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MOYGEN");

                entity.Property(e => e.Moyratt)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("MOYRATT");

                entity.Property(e => e.NatureUe1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_1");

                entity.Property(e => e.NatureUe10)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_10");

                entity.Property(e => e.NatureUe11)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_11");

                entity.Property(e => e.NatureUe12)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_12");

                entity.Property(e => e.NatureUe13)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_13");

                entity.Property(e => e.NatureUe14)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_14");

                entity.Property(e => e.NatureUe15)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_15");

                entity.Property(e => e.NatureUe16)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_16");

                entity.Property(e => e.NatureUe17)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_17");

                entity.Property(e => e.NatureUe18)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_18");

                entity.Property(e => e.NatureUe19)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_19");

                entity.Property(e => e.NatureUe2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_2");

                entity.Property(e => e.NatureUe20)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_20");

                entity.Property(e => e.NatureUe21)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_21");

                entity.Property(e => e.NatureUe22)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_22");

                entity.Property(e => e.NatureUe23)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_23");

                entity.Property(e => e.NatureUe24)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_24");

                entity.Property(e => e.NatureUe25)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_25");

                entity.Property(e => e.NatureUe26)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_26");

                entity.Property(e => e.NatureUe27)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_27");

                entity.Property(e => e.NatureUe28)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_28");

                entity.Property(e => e.NatureUe29)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_29");

                entity.Property(e => e.NatureUe3)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_3");

                entity.Property(e => e.NatureUe30)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_30");

                entity.Property(e => e.NatureUe31)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_31");

                entity.Property(e => e.NatureUe32)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_32");

                entity.Property(e => e.NatureUe33)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_33");

                entity.Property(e => e.NatureUe34)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_34");

                entity.Property(e => e.NatureUe35)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_35");

                entity.Property(e => e.NatureUe36)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_36");

                entity.Property(e => e.NatureUe37)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_37");

                entity.Property(e => e.NatureUe38)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_38");

                entity.Property(e => e.NatureUe39)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_39");

                entity.Property(e => e.NatureUe4)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_4");

                entity.Property(e => e.NatureUe40)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_40");

                entity.Property(e => e.NatureUe41)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_41");

                entity.Property(e => e.NatureUe42)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_42");

                entity.Property(e => e.NatureUe43)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_43");

                entity.Property(e => e.NatureUe44)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_44");

                entity.Property(e => e.NatureUe45)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_45");

                entity.Property(e => e.NatureUe46)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_46");

                entity.Property(e => e.NatureUe47)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_47");

                entity.Property(e => e.NatureUe48)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_48");

                entity.Property(e => e.NatureUe49)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_49");

                entity.Property(e => e.NatureUe5)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_5");

                entity.Property(e => e.NatureUe50)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_50");

                entity.Property(e => e.NatureUe51)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_51");

                entity.Property(e => e.NatureUe52)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_52");

                entity.Property(e => e.NatureUe53)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_53");

                entity.Property(e => e.NatureUe54)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_54");

                entity.Property(e => e.NatureUe55)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_55");

                entity.Property(e => e.NatureUe56)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_56");

                entity.Property(e => e.NatureUe57)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_57");

                entity.Property(e => e.NatureUe58)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_58");

                entity.Property(e => e.NatureUe59)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_59");

                entity.Property(e => e.NatureUe6)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_6");

                entity.Property(e => e.NatureUe60)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_60");

                entity.Property(e => e.NatureUe7)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_7");

                entity.Property(e => e.NatureUe8)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_8");

                entity.Property(e => e.NatureUe9)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE_UE_9");

                entity.Property(e => e.NbHeureCol1)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_1");

                entity.Property(e => e.NbHeureCol10)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_10");

                entity.Property(e => e.NbHeureCol11)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_11");

                entity.Property(e => e.NbHeureCol12)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_12");

                entity.Property(e => e.NbHeureCol13)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_13");

                entity.Property(e => e.NbHeureCol14)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_14");

                entity.Property(e => e.NbHeureCol15)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_15");

                entity.Property(e => e.NbHeureCol16)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_16");

                entity.Property(e => e.NbHeureCol17)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_17");

                entity.Property(e => e.NbHeureCol18)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_18");

                entity.Property(e => e.NbHeureCol19)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_19");

                entity.Property(e => e.NbHeureCol2)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_2");

                entity.Property(e => e.NbHeureCol20)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_20");

                entity.Property(e => e.NbHeureCol21)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_21");

                entity.Property(e => e.NbHeureCol22)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_22");

                entity.Property(e => e.NbHeureCol23)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_23");

                entity.Property(e => e.NbHeureCol24)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_24");

                entity.Property(e => e.NbHeureCol25)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_25");

                entity.Property(e => e.NbHeureCol26)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_26");

                entity.Property(e => e.NbHeureCol27)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_27");

                entity.Property(e => e.NbHeureCol28)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_28");

                entity.Property(e => e.NbHeureCol29)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_29");

                entity.Property(e => e.NbHeureCol3)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_3");

                entity.Property(e => e.NbHeureCol30)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_30");

                entity.Property(e => e.NbHeureCol31)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_31");

                entity.Property(e => e.NbHeureCol32)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_32");

                entity.Property(e => e.NbHeureCol33)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_33");

                entity.Property(e => e.NbHeureCol34)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_34");

                entity.Property(e => e.NbHeureCol35)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_35");

                entity.Property(e => e.NbHeureCol36)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_36");

                entity.Property(e => e.NbHeureCol37)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_37");

                entity.Property(e => e.NbHeureCol38)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_38");

                entity.Property(e => e.NbHeureCol39)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_39");

                entity.Property(e => e.NbHeureCol4)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_4");

                entity.Property(e => e.NbHeureCol40)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_40");

                entity.Property(e => e.NbHeureCol41)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_41");

                entity.Property(e => e.NbHeureCol42)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_42");

                entity.Property(e => e.NbHeureCol43)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_43");

                entity.Property(e => e.NbHeureCol44)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_44");

                entity.Property(e => e.NbHeureCol45)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_45");

                entity.Property(e => e.NbHeureCol46)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_46");

                entity.Property(e => e.NbHeureCol47)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_47");

                entity.Property(e => e.NbHeureCol48)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_48");

                entity.Property(e => e.NbHeureCol49)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_49");

                entity.Property(e => e.NbHeureCol5)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_5");

                entity.Property(e => e.NbHeureCol50)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_50");

                entity.Property(e => e.NbHeureCol51)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_51");

                entity.Property(e => e.NbHeureCol52)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_52");

                entity.Property(e => e.NbHeureCol53)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_53");

                entity.Property(e => e.NbHeureCol54)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_54");

                entity.Property(e => e.NbHeureCol55)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_55");

                entity.Property(e => e.NbHeureCol56)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_56");

                entity.Property(e => e.NbHeureCol57)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_57");

                entity.Property(e => e.NbHeureCol58)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_58");

                entity.Property(e => e.NbHeureCol59)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_59");

                entity.Property(e => e.NbHeureCol6)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_6");

                entity.Property(e => e.NbHeureCol60)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_60");

                entity.Property(e => e.NbHeureCol7)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_7");

                entity.Property(e => e.NbHeureCol8)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_8");

                entity.Property(e => e.NbHeureCol9)
                    .HasPrecision(3)
                    .HasColumnName("NB_HEURE_COL_9");

                entity.Property(e => e.NomCol1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_1");

                entity.Property(e => e.NomCol10)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_10");

                entity.Property(e => e.NomCol11)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_11");

                entity.Property(e => e.NomCol12)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_12");

                entity.Property(e => e.NomCol13)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_13");

                entity.Property(e => e.NomCol14)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_14");

                entity.Property(e => e.NomCol15)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_15");

                entity.Property(e => e.NomCol16)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_16");

                entity.Property(e => e.NomCol17)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_17");

                entity.Property(e => e.NomCol18)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_18");

                entity.Property(e => e.NomCol19)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_19");

                entity.Property(e => e.NomCol2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_2");

                entity.Property(e => e.NomCol20)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_20");

                entity.Property(e => e.NomCol21)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_21");

                entity.Property(e => e.NomCol22)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_22");

                entity.Property(e => e.NomCol23)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_23");

                entity.Property(e => e.NomCol24)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_24");

                entity.Property(e => e.NomCol25)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_25");

                entity.Property(e => e.NomCol26)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_26");

                entity.Property(e => e.NomCol27)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_27");

                entity.Property(e => e.NomCol28)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_28");

                entity.Property(e => e.NomCol29)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_29");

                entity.Property(e => e.NomCol3)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_3");

                entity.Property(e => e.NomCol30)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_30");

                entity.Property(e => e.NomCol31)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_31");

                entity.Property(e => e.NomCol32)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_32");

                entity.Property(e => e.NomCol33)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_33");

                entity.Property(e => e.NomCol34)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_34");

                entity.Property(e => e.NomCol35)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_35");

                entity.Property(e => e.NomCol36)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_36");

                entity.Property(e => e.NomCol37)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_37");

                entity.Property(e => e.NomCol38)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_38");

                entity.Property(e => e.NomCol39)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_39");

                entity.Property(e => e.NomCol4)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_4");

                entity.Property(e => e.NomCol40)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_40");

                entity.Property(e => e.NomCol41)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_41");

                entity.Property(e => e.NomCol42)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_42");

                entity.Property(e => e.NomCol43)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_43");

                entity.Property(e => e.NomCol44)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_44");

                entity.Property(e => e.NomCol45)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_45");

                entity.Property(e => e.NomCol46)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_46");

                entity.Property(e => e.NomCol47)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_47");

                entity.Property(e => e.NomCol48)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_48");

                entity.Property(e => e.NomCol49)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_49");

                entity.Property(e => e.NomCol5)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_5");

                entity.Property(e => e.NomCol50)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_50");

                entity.Property(e => e.NomCol51)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_51");

                entity.Property(e => e.NomCol52)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_52");

                entity.Property(e => e.NomCol53)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_53");

                entity.Property(e => e.NomCol54)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_54");

                entity.Property(e => e.NomCol55)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_55");

                entity.Property(e => e.NomCol56)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_56");

                entity.Property(e => e.NomCol57)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_57");

                entity.Property(e => e.NomCol58)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_58");

                entity.Property(e => e.NomCol59)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_59");

                entity.Property(e => e.NomCol6)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_6");

                entity.Property(e => e.NomCol60)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_60");

                entity.Property(e => e.NomCol7)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_7");

                entity.Property(e => e.NomCol8)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_8");

                entity.Property(e => e.NomCol9)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_COL_9");

                entity.Property(e => e.Numpromotioncs)
                    .HasPrecision(4)
                    .HasColumnName("NUMPROMOTIONCS");

                entity.Property(e => e.TypeCol1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_1");

                entity.Property(e => e.TypeCol10)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_10");

                entity.Property(e => e.TypeCol11)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_11");

                entity.Property(e => e.TypeCol12)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_12");

                entity.Property(e => e.TypeCol13)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_13");

                entity.Property(e => e.TypeCol14)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_14");

                entity.Property(e => e.TypeCol15)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_15");

                entity.Property(e => e.TypeCol16)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_16");

                entity.Property(e => e.TypeCol17)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_17");

                entity.Property(e => e.TypeCol18)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_18");

                entity.Property(e => e.TypeCol19)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_19");

                entity.Property(e => e.TypeCol2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_2");

                entity.Property(e => e.TypeCol20)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_20");

                entity.Property(e => e.TypeCol21)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_21");

                entity.Property(e => e.TypeCol22)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_22");

                entity.Property(e => e.TypeCol23)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_23");

                entity.Property(e => e.TypeCol24)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_24");

                entity.Property(e => e.TypeCol25)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_25");

                entity.Property(e => e.TypeCol26)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_26");

                entity.Property(e => e.TypeCol27)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_27");

                entity.Property(e => e.TypeCol28)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_28");

                entity.Property(e => e.TypeCol29)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_29");

                entity.Property(e => e.TypeCol3)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_3");

                entity.Property(e => e.TypeCol30)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_30");

                entity.Property(e => e.TypeCol31)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_31");

                entity.Property(e => e.TypeCol32)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_32");

                entity.Property(e => e.TypeCol33)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_33");

                entity.Property(e => e.TypeCol34)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_34");

                entity.Property(e => e.TypeCol35)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_35");

                entity.Property(e => e.TypeCol36)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_36");

                entity.Property(e => e.TypeCol37)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_37");

                entity.Property(e => e.TypeCol38)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_38");

                entity.Property(e => e.TypeCol39)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_39");

                entity.Property(e => e.TypeCol4)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_4");

                entity.Property(e => e.TypeCol40)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_40");

                entity.Property(e => e.TypeCol41)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_41");

                entity.Property(e => e.TypeCol42)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_42");

                entity.Property(e => e.TypeCol43)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_43");

                entity.Property(e => e.TypeCol44)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_44");

                entity.Property(e => e.TypeCol45)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_45");

                entity.Property(e => e.TypeCol46)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_46");

                entity.Property(e => e.TypeCol47)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_47");

                entity.Property(e => e.TypeCol48)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_48");

                entity.Property(e => e.TypeCol49)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_49");

                entity.Property(e => e.TypeCol5)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_5");

                entity.Property(e => e.TypeCol50)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_50");

                entity.Property(e => e.TypeCol51)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_51");

                entity.Property(e => e.TypeCol52)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_52");

                entity.Property(e => e.TypeCol53)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_53");

                entity.Property(e => e.TypeCol54)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_54");

                entity.Property(e => e.TypeCol55)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_55");

                entity.Property(e => e.TypeCol56)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_56");

                entity.Property(e => e.TypeCol57)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_57");

                entity.Property(e => e.TypeCol58)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_58");

                entity.Property(e => e.TypeCol59)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_59");

                entity.Property(e => e.TypeCol6)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_6");

                entity.Property(e => e.TypeCol60)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_60");

                entity.Property(e => e.TypeCol7)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_7");

                entity.Property(e => e.TypeCol8)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_8");

                entity.Property(e => e.TypeCol9)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_COL_9");

                entity.Property(e => e.TypePv)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_PV");
            });

            modelBuilder.Entity<EspRealise>(entity =>
            {
                entity.HasKey(e => new { e.IdDr, e.Titre })
                    .HasName("PK_REALISE");

                entity.ToTable("ESP_REALISE");

                entity.Property(e => e.IdDr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_DR");

                entity.Property(e => e.Titre)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("TITRE");

                entity.Property(e => e.NbJours)
                    .HasColumnType("NUMBER")
                    .HasColumnName("NB_JOURS");

                entity.Property(e => e.NomDr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOM_DR");

                entity.Property(e => e.Resultat)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("RESULTAT");
            });

            modelBuilder.Entity<EspReglementOnline>(entity =>
            {
                entity.HasKey(e => new { e.IdEt, e.AnneeDeb, e.DateRglt })
                    .HasName("PK_REGLEMENT");

                entity.ToTable("ESP_REGLEMENT_ONLINE");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.DateRglt)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_RGLT");

                entity.Property(e => e.AnneeRglt)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_RGLT");

                entity.Property(e => e.Comptabilise)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COMPTABILISE")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.MotifRglt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOTIF_RGLT");

                entity.Property(e => e.RgltVeridfie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RGLT_VERIDFIE")
                    .HasDefaultValueSql("'N'");

                entity.HasOne(d => d.IdEtNavigation)
                    .WithMany(p => p.EspReglementOnline)
                    .HasForeignKey(d => d.IdEt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_RGLT_ETUDIANT");
            });

            modelBuilder.Entity<EspRemarqueAbsence>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.Semestre, e.IdEt, e.CodeCl, e.IdEns, e.DateRemarque })
                    .HasName("PK_ESP_REMARQUE");

                entity.ToTable("ESP_REMARQUE_ABSENCE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.Semestre)
                    .HasPrecision(1)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.DateRemarque)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_REMARQUE");

                entity.Property(e => e.EtatConvocation)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ETAT_CONVOCATION");

                entity.Property(e => e.LibelleRemarque)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("LIBELLE_REMARQUE");

                entity.HasOne(d => d.IdEtNavigation)
                    .WithMany(p => p.EspRemarqueAbsence)
                    .HasForeignKey(d => d.IdEt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ESP_REMARQUE_ID_ET");

                entity.HasOne(d => d.EspSaisonClasse)
                    .WithMany(p => p.EspRemarqueAbsence)
                    .HasForeignKey(d => new { d.AnneeDeb, d.Semestre, d.CodeCl })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ESP_REMARQUE_CODE_CL");
            });

            modelBuilder.Entity<EspResultat>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_RESULTAT");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.Codemati)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODEMATI");

                entity.Property(e => e.Codeperiexam)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODEPERIEXAM");

                entity.Property(e => e.Codetypeepre)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODETYPEEPRE");

                entity.Property(e => e.Coefmati)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("COEFMATI");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.Idenelev)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("IDENELEV");

                entity.Property(e => e.Libematifr)
                    .HasMaxLength(23)
                    .IsUnicode(false)
                    .HasColumnName("LIBEMATIFR");

                entity.Property(e => e.Libetypeeprefr)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("LIBETYPEEPREFR");

                entity.Property(e => e.Moyemati)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("MOYEMATI");

                entity.Property(e => e.Noteepre)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NOTEEPRE");

                entity.Property(e => e.Numeepre)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NUMEEPRE");

                entity.Property(e => e.Rangmati)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RANGMATI");
            });

            modelBuilder.Entity<EspRubrique>(entity =>
            {
                entity.HasKey(e => e.CodeRub)
                    .HasName("PK_RUBRIQUE");

                entity.ToTable("ESP_RUBRIQUE");

                entity.Property(e => e.CodeRub)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_RUB");

                entity.Property(e => e.Libelle)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LIBELLE");

                entity.Property(e => e.Signe)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SIGNE");

                entity.Property(e => e.Taux)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("TAUX");

                entity.Property(e => e.Valeur)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("VALEUR");
            });

            modelBuilder.Entity<EspSaisonClasse>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.Semestre, e.CodeCl });

                entity.ToTable("ESP_SAISON_CLASSE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.Semestre)
                    .HasPrecision(1)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.AnneeFin)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_FIN");

                entity.Property(e => e.ClAvecDispense)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CL_AVEC_DISPENSE");

                entity.Property(e => e.ClEclate)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CL_ECLATE")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.ClasseEntreprise)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLASSE_ENTREPRISE");

                entity.Property(e => e.ClasseS2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLASSE_S2");

                entity.Property(e => e.CodeCls1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CLS1");

                entity.Property(e => e.DateDemarrage)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_DEMARRAGE");

                entity.Property(e => e.DateEclatement)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_ECLATEMENT");

                entity.Property(e => e.Description)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Filiere)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FILIERE");

                entity.Property(e => e.Nature)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NATURE");

                entity.Property(e => e.NbEtudiant)
                    .HasPrecision(2)
                    .HasColumnName("NB_ETUDIANT");

                entity.Property(e => e.NbSeance)
                    .HasPrecision(1)
                    .HasColumnName("NB_SEANCE");

                entity.Property(e => e.NiveauAcces)
                    .HasPrecision(1)
                    .HasColumnName("NIVEAU_ACCES");

                entity.Property(e => e.Numpromotioncs)
                    .HasPrecision(4)
                    .HasColumnName("NUMPROMOTIONCS");

                entity.Property(e => e.PvSpSaved)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PV_SP_SAVED")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.PvSrSaved)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PV_SR_SAVED")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.SallePrincipale)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SALLE_PRINCIPALE");

                entity.Property(e => e.SalleSecondaire1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SALLE_SECONDAIRE_1");

                entity.Property(e => e.SalleSecondaire2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SALLE_SECONDAIRE_2");

                entity.Property(e => e.TypeClasse)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_CLASSE");

                entity.Property(e => e.TypePv)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_PV")
                    .HasDefaultValueSql("'E'");

                entity.HasOne(d => d.AnneeDebNavigation)
                    .WithMany(p => p.EspSaisonClasse)
                    .HasForeignKey(d => d.AnneeDeb)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ESP_SAIS_REFERENCE_ESP_SAIS");

                entity.HasOne(d => d.CodeClNavigation)
                    .WithMany(p => p.EspSaisonClasse)
                    .HasForeignKey(d => d.CodeCl)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ESP_SAIS_REFERENCE_CLASSE");
            });

            modelBuilder.Entity<EspSaisonUniversitaire>(entity =>
            {
                entity.HasKey(e => e.AnneeDeb);

                entity.ToTable("ESP_SAISON_UNIVERSITAIRE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.AnneeFin)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_FIN");

                entity.Property(e => e.Description)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");
            });

            modelBuilder.Entity<EspSalleClasse>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_SALLE_CLASSE");

                entity.Property(e => e.AnneeDeb)
                    .HasColumnType("FLOAT")
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.Id)
                    .HasColumnType("FLOAT")
                    .HasColumnName("ID");

                entity.Property(e => e.Salle)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SALLE");
            });

            modelBuilder.Entity<EspSanction>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_SANCTION");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.Motif)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("MOTIF");

                entity.Property(e => e.Nature)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NATURE");

                entity.Property(e => e.Observation)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVATION");

                entity.Property(e => e.Semestre)
                    .HasColumnType("NUMBER")
                    .HasColumnName("SEMESTRE");
            });

            modelBuilder.Entity<EspScoreSpecialite>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.CodeSpec, e.NiveauAcces })
                    .HasName("PK_SCORE_SPEC");

                entity.ToTable("ESP_SCORE_SPECIALITE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeSpec)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_SPEC");

                entity.Property(e => e.NiveauAcces)
                    .HasPrecision(1)
                    .HasColumnName("NIVEAU_ACCES");

                entity.Property(e => e.CapaciteAccueuil)
                    .HasPrecision(4)
                    .HasColumnName("CAPACITE_ACCUEUIL");

                entity.Property(e => e.ScoreMin)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("SCORE_MIN");
            });

            modelBuilder.Entity<EspSeanceEns>(entity =>
            {
                entity.HasKey(e => new { e.IdEns, e.CodeModule, e.AnneeDeb, e.CodeCl, e.DateSeance, e.Semestre })
                    .HasName("PK_ABSENCE_ENS_1");

                entity.ToTable("ESP_SEANCE_ENS");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.CodeModule)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MODULE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.DateSeance)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SEANCE");

                entity.Property(e => e.Semestre)
                    .HasPrecision(1)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.CodeMotif)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_MOTIF");

                entity.Property(e => e.HeureEntree)
                    .HasPrecision(2)
                    .HasColumnName("HEURE_ENTREE");

                entity.Property(e => e.HeureSortie)
                    .HasPrecision(10)
                    .HasColumnName("HEURE_SORTIE");

                entity.Property(e => e.MinuteEntree)
                    .HasPrecision(10)
                    .HasColumnName("MINUTE_ENTREE");

                entity.Property(e => e.MinuteSortie)
                    .HasPrecision(10)
                    .HasColumnName("MINUTE_SORTIE");

                entity.Property(e => e.NbMinPause)
                    .HasPrecision(10)
                    .HasColumnName("NB_MIN_PAUSE");

                entity.Property(e => e.NbSeance)
                    .HasPrecision(2)
                    .HasColumnName("NB_SEANCE");

                entity.Property(e => e.NumSeance)
                    .HasPrecision(1)
                    .HasColumnName("NUM_SEANCE");

                entity.Property(e => e.Observation)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVATION");

                entity.Property(e => e.Realisation)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("REALISATION");

                entity.Property(e => e.Utilisateur)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR");

                entity.HasOne(d => d.CodeModuleNavigation)
                    .WithMany(p => p.EspSeanceEns)
                    .HasForeignKey(d => d.CodeModule)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SEANCE_ENS_MODULE_1");
            });

            modelBuilder.Entity<EspSession>(entity =>
            {
                entity.HasKey(e => e.IdAdmin)
                    .HasName("SYS_C008610");

                entity.ToTable("ESP_SESSION");

                entity.Property(e => e.IdAdmin)
                    .HasPrecision(10)
                    .ValueGeneratedNever()
                    .HasColumnName("ID_ADMIN");

                entity.Property(e => e.EspensIdEns)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ESPENS_ID_ENS");

                entity.Property(e => e.Lgn)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("LGN");

                entity.Property(e => e.Pwd)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PWD");

                entity.Property(e => e.Type)
                    .HasPrecision(10)
                    .HasColumnName("TYPE");
            });

            modelBuilder.Entity<EspSuiviProjetIndiv>(entity =>
            {
                entity.HasKey(e => new { e.IdGroupe, e.AnneeDeb, e.IdEt, e.DateSuivi })
                    .HasName("PK_SUIVI_ET");

                entity.ToTable("ESP_SUIVI_PROJET_INDIV");

                entity.Property(e => e.IdGroupe)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_GROUPE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.DateSuivi)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SUIVI");

                entity.Property(e => e.Absent)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ABSENT");

                entity.Property(e => e.HeureDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("HEURE_DEB");

                entity.Property(e => e.HeureFin)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("HEURE_FIN");

                entity.Property(e => e.NoteComm)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("NOTE_COMM");

                entity.Property(e => e.NoteMotivation)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("NOTE_MOTIVATION");

                entity.Property(e => e.NoteRedaction)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("NOTE_REDACTION");

                entity.Property(e => e.NoteTechnique)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("NOTE_TECHNIQUE");

                entity.Property(e => e.Observation)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVATION");

                entity.HasOne(d => d.EspAffGroupEtudiant)
                    .WithMany(p => p.EspSuiviProjetIndiv)
                    .HasForeignKey(d => new { d.IdGroupe, d.AnneeDeb, d.IdEt })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SUIVI_ET");
            });

            modelBuilder.Entity<EspTabPlanSalle>(entity =>
            {
                entity.HasKey(e => e.CritereTri);

                entity.ToTable("ESP_TAB_PLAN_SALLE");

                entity.Property(e => e.CritereTri)
                    .HasPrecision(10)
                    .ValueGeneratedNever()
                    .HasColumnName("CRITERE_TRI");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.AnneeFin)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_FIN");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.Groupe)
                    .HasPrecision(1)
                    .HasColumnName("GROUPE");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.NomEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_ET");

                entity.Property(e => e.PnomEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PNOM_ET");
            });

            modelBuilder.Entity<EspTempEtudiantEnreg>(entity =>
            {
                entity.HasKey(e => e.IdEt)
                    .HasName("CONSTRAINT17");

                entity.ToTable("ESP_TEMP_ETUDIANT_ENREG");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE");

                entity.Property(e => e.IdEnsEntretien)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS_ENTRETIEN");

                entity.Property(e => e.ScoreEntretien)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("SCORE_ENTRETIEN")
                    .HasDefaultValueSql("NULL");
            });

            modelBuilder.Entity<EspTempScore>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_TEMP_SCORE");

                entity.Property(e => e.CScoreDossier)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("C_SCORE_DOSSIER");

                entity.Property(e => e.IdEt)
                    .IsRequired()
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<EspTestEns>(entity =>
            {
                entity.HasKey(e => new { e.IdEns, e.DateChoix })
                    .HasName("ESP_TEST_ENS_PK");

                entity.ToTable("ESP_TEST_ENS");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.DateChoix)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_CHOIX");

                entity.Property(e => e.TypeChoix)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_CHOIX");
            });

            modelBuilder.Entity<EspTestEtud>(entity =>
            {
                entity.HasKey(e => new { e.IdEt, e.DateChoix })
                    .HasName("ESP_TEST_ETUD_PK");

                entity.ToTable("ESP_TEST_ETUD");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.DateChoix)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_CHOIX");

                entity.Property(e => e.TypeChoix)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_CHOIX");

                entity.Property(e => e.TypeTest)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_TEST")
                    .HasDefaultValueSql("'T'");

                entity.HasOne(d => d.IdEtNavigation)
                    .WithMany(p => p.EspTestEtud)
                    .HasForeignKey(d => d.IdEt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ETUD");
            });

            modelBuilder.Entity<EspTicketInscription>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_TICKET_INSCRIPTION");

                entity.Property(e => e.AnneeDeb)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.CodeCl)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("CODE_CL");
            });

            modelBuilder.Entity<EspTmpMailEns>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_TMP_MAIL_ENS");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.MailEns)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MAIL_ENS");
            });

            modelBuilder.Entity<EspToeicNb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_TOEIC_NB");

                entity.Property(e => e.Datetest)
                    .HasColumnType("DATE")
                    .HasColumnName("DATETEST");

                entity.Property(e => e.NbCondidatsAng)
                    .HasColumnType("NUMBER(25)")
                    .HasColumnName("NB_CONDIDATS_ANG");

                entity.Property(e => e.NbCondidatsFr)
                    .HasColumnType("NUMBER(25)")
                    .HasColumnName("NB_CONDIDATS_FR");

                entity.Property(e => e.Nbmax)
                    .HasColumnType("NUMBER(25)")
                    .HasColumnName("NBMAX");
            });

            modelBuilder.Entity<EspTraceCorrectNumcpt>(entity =>
            {
                entity.HasKey(e => new { e.IdEt, e.DateCorrect, e.TypeCorrect })
                    .HasName("PK_TRACEè_CORRECT_NUMCPT");

                entity.ToTable("ESP_TRACE_CORRECT_NUMCPT");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.DateCorrect)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_CORRECT");

                entity.Property(e => e.TypeCorrect)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_CORRECT")
                    .HasDefaultValueSql("'SN'");

                entity.Property(e => e.NewNumcpt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NEW_NUMCPT");

                entity.Property(e => e.OldNumcpt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("OLD_NUMCPT");
            });

            modelBuilder.Entity<EspTraceImpPiece>(entity =>
            {
                entity.HasKey(e => new { e.AnneeDeb, e.NumImp })
                    .HasName("PK_TRACE_IMP");

                entity.ToTable("ESP_TRACE_IMP_PIECE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.NumImp)
                    .HasPrecision(10)
                    .HasColumnName("NUM_IMP");

                entity.Property(e => e.DateImp)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_IMP");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.IpImp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IP_IMP");

                entity.Property(e => e.MachineImp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MACHINE_IMP");

                entity.Property(e => e.TypePiece)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_PIECE");

                entity.Property(e => e.UserImp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USER_IMP");
            });

            modelBuilder.Entity<EspTrvCours>(entity =>
            {
                entity.HasKey(e => new { e.IdDr, e.Titre })
                    .HasName("PK_COURS");

                entity.ToTable("ESP_TRV_COURS");

                entity.Property(e => e.IdDr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_DR");

                entity.Property(e => e.Titre)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("TITRE");

                entity.Property(e => e.DateDeb)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_DEB");

                entity.Property(e => e.NbrJoursPrsv)
                    .HasColumnType("NUMBER")
                    .HasColumnName("NBR_JOURS_PRSV");

                entity.Property(e => e.NomDr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOM_DR");
            });

            modelBuilder.Entity<EspTrvQuot>(entity =>
            {
                entity.HasKey(e => new { e.IdDr, e.Titre })
                    .HasName("PK_QUOT");

                entity.ToTable("ESP_TRV_QUOT");

                entity.Property(e => e.IdDr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_DR");

                entity.Property(e => e.Titre)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("TITRE");

                entity.Property(e => e.DateDebAffec)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_DEB_AFFEC");

                entity.Property(e => e.NomDr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOM_DR");
            });

            modelBuilder.Entity<EspUe>(entity =>
            {
                entity.HasKey(e => new { e.CodeUe, e.AnneeDeb })
                    .HasName("PK_UE");

                entity.ToTable("ESP_UE");

                entity.Property(e => e.CodeUe)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("CODE_UE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.ChargeH)
                    .HasPrecision(3)
                    .HasColumnName("CHARGE_H");

                entity.Property(e => e.CodeFiliere)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_FILIERE");

                entity.Property(e => e.LibUe)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LIB_UE");

                entity.Property(e => e.NatureUe)
                    .HasMaxLength(10)
                    .HasColumnName("NATURE_UE")
                    .HasDefaultValueSql("'O'");

                entity.Property(e => e.NbEcts)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("NB_ECTS");

                entity.Property(e => e.TypeUe)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_UE")
                    .HasDefaultValueSql("'N'");

                entity.HasOne(d => d.CodeFiliereNavigation)
                    .WithMany(p => p.EspUe)
                    .HasForeignKey(d => d.CodeFiliere)
                    .HasConstraintName("FK_UE_FILIERE");
            });

            modelBuilder.Entity<EspUe5emetelinfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESP_UE_5EMETELINFO");

                entity.Property(e => e.ChargeH)
                    .HasPrecision(3)
                    .HasColumnName("CHARGE_H");

                entity.Property(e => e.CodeFiliere)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_FILIERE");

                entity.Property(e => e.CodeUe)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("CODE_UE");

                entity.Property(e => e.LibUe)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("LIB_UE");

                entity.Property(e => e.NbEcts)
                    .HasPrecision(3)
                    .HasColumnName("NB_ECTS");
            });

            modelBuilder.Entity<EspUp>(entity =>
            {
                entity.HasKey(e => e.Up)
                    .HasName("PK_UP");

                entity.ToTable("ESP_UP");

                entity.Property(e => e.Up)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UP");

                entity.Property(e => e.CodeDept)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_DEPT");

                entity.Property(e => e.Designantion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DESIGNANTION");
            });

            modelBuilder.Entity<EspWhiteList>(entity =>
            {
                entity.HasKey(e => e.IdEt)
                    .HasName("PK_WHITE_ET");

                entity.ToTable("ESP_WHITE_LIST");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.CodeCl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_CL");

                entity.Property(e => e.DateLimite)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_LIMITE");

                entity.Property(e => e.MontFrais)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("MONT_FRAIS");

                entity.Property(e => e.MontRegle)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("MONT_REGLE");

                entity.Property(e => e.NomEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_ET");

                entity.Property(e => e.NumCpt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CPT");

                entity.Property(e => e.PnomEt)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PNOM_ET");
            });

            modelBuilder.Entity<EtatPaiement>(entity =>
            {
                entity.HasKey(e => new { e.IdEt, e.AnneeDeb, e.Ordernumber })
                    .HasName("ETAT_PAIEMENT_PK");

                entity.ToTable("ETAT_PAIEMENT");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.Ordernumber)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ORDERNUMBER");

                entity.Property(e => e.Amount)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("AMOUNT");

                entity.Property(e => e.Authcode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("AUTHCODE");

                entity.Property(e => e.Cardholdername)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CARDHOLDERNAME");

                entity.Property(e => e.Currency)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CURRENCY");

                entity.Property(e => e.DateSaisie)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_SAISIE")
                    .HasDefaultValueSql("sysdate\n	 \n   ");

                entity.Property(e => e.Depositamount)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEPOSITAMOUNT");

                entity.Property(e => e.Errorcode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ERRORCODE");

                entity.Property(e => e.Errormessage)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("ERRORMESSAGE");

                entity.Property(e => e.Expiration)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXPIRATION");

                entity.Property(e => e.Ip)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IP");

                entity.Property(e => e.Orderstatus)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ORDERSTATUS");

                entity.Property(e => e.Pan)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PAN");
            });

            modelBuilder.Entity<EtuEmp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ETU_EMP");

                entity.Property(e => e.Codemploi)
                    .HasPrecision(19)
                    .HasColumnName("CODEMPLOI");

                entity.Property(e => e.Idet)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("IDET");

                entity.HasOne(d => d.IdetNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.Idet)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FKD63F166FCEB409AB");
            });

            modelBuilder.Entity<Fichepfe>(entity =>
            {
                entity.HasKey(e => e.IdFiche)
                    .HasName("SYS_C008665");

                entity.ToTable("FICHEPFE");

                entity.Property(e => e.IdFiche)
                    .HasPrecision(10)
                    .ValueGeneratedNever()
                    .HasColumnName("ID_FICHE");

                entity.Property(e => e.Acorrigerstage)
                    .HasPrecision(1)
                    .HasColumnName("ACORRIGERSTAGE");

                entity.Property(e => e.AdressEntreprise)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ADRESS_ENTREPRISE");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.Avis)
                    .IsUnicode(false)
                    .HasColumnName("AVIS");

                entity.Property(e => e.Dateenvoie)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("DATEENVOIE");

                entity.Property(e => e.Descriptionsujet)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTIONSUJET");

                entity.Property(e => e.EtIdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ET_ID_ET");

                entity.Property(e => e.Etat)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ETAT");

                entity.Property(e => e.Fonctionnalitesujet)
                    .IsUnicode(false)
                    .HasColumnName("FONCTIONNALITESUJET");

                entity.Property(e => e.MailEntreprise)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("MAIL_ENTREPRISE");

                entity.Property(e => e.NomEncad)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("NOM_ENCAD");

                entity.Property(e => e.NomEncadEsprit)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("NOM_ENCAD_ESPRIT");

                entity.Property(e => e.NomEntreprise)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("NOM_ENTREPRISE");

                entity.Property(e => e.Prerequisujet)
                    .IsUnicode(false)
                    .HasColumnName("PREREQUISUJET");

                entity.Property(e => e.Probelematiquesujet)
                    .IsUnicode(false)
                    .HasColumnName("PROBELEMATIQUESUJET");

                entity.Property(e => e.Regectedinfo)
                    .HasPrecision(1)
                    .HasColumnName("REGECTEDINFO");

                entity.Property(e => e.Regis)
                    .HasPrecision(1)
                    .HasColumnName("REGIS");

                entity.Property(e => e.Rehectedstage)
                    .HasPrecision(1)
                    .HasColumnName("REHECTEDSTAGE");

                entity.Property(e => e.TelephoneEntreprise)
                    .HasPrecision(10)
                    .HasColumnName("TELEPHONE_ENTREPRISE");

                entity.Property(e => e.Valid)
                    .HasPrecision(1)
                    .HasColumnName("VALID");

                entity.Property(e => e.Validateinfo)
                    .HasPrecision(1)
                    .HasColumnName("VALIDATEINFO");

                entity.HasOne(d => d.EtIdEtNavigation)
                    .WithMany(p => p.Fichepfe)
                    .HasForeignKey(d => d.EtIdEt)
                    .HasConstraintName("FKC8D9071287CE2D70");
            });

            modelBuilder.Entity<FrCursus>(entity =>
            {
                entity.HasKey(e => e.IdCursus)
                    .HasName("SYS_C008668");

                entity.ToTable("FR_CURSUS");

                entity.Property(e => e.IdCursus)
                    .HasColumnType("NUMBER")
                    .HasColumnName("ID_CURSUS");

                entity.Property(e => e.AnneeCursus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_CURSUS");

                entity.Property(e => e.FinCursus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FIN_CURSUS");

                entity.Property(e => e.IdEns)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ENS");

                entity.Property(e => e.LibelleCursus)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("LIBELLE_CURSUS");

                entity.Property(e => e.TypeCursus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_CURSUS");
            });

            modelBuilder.Entity<Fran>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FRAN");

                entity.Property(e => e.IdEt)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.Niveau)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NIVEAU");
            });

            modelBuilder.Entity<HistoriquePaiement>(entity =>
            {
                entity.HasKey(e => e.Ordernumber)
                    .HasName("HISTORIQUE_PAIEMENT_PK");

                entity.ToTable("HISTORIQUE_PAIEMENT");

                entity.Property(e => e.Ordernumber)
                    .HasColumnType("NUMBER(25)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ORDERNUMBER");

                entity.Property(e => e.Amount)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("AMOUNT");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.Currency)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CURRENCY");

                entity.Property(e => e.DatePaiement)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_PAIEMENT")
                    .HasDefaultValueSql("SYSDATE");

                entity.Property(e => e.Etat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ETAT")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.Orderid)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ORDERID");

                entity.Property(e => e.Password)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PASSWORD");

                entity.Property(e => e.Returnurl)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("RETURNURL");

                entity.Property(e => e.Username)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("USERNAME");
            });

            modelBuilder.Entity<LiaisonNavScoNumtel>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("LIAISON_NAV_SCO_NUMTEL");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NAME")
                    .IsFixedLength(true);

                entity.Property(e => e.Name2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NAME2")
                    .IsFixedLength(true);

                entity.Property(e => e.NumTel)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NUM_TEL")
                    .IsFixedLength(true);

                entity.Property(e => e.Numcompte)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMCOMPTE")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<LiaisonScoNavFikr>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("LIAISON_SCO_NAV_FIKR");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET")
                    .IsFixedLength(true);

                entity.Property(e => e.No)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO_")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Messages>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MESSAGES");

                entity.HasIndex(e => e.Msgid, "MESSAGES_X")
                    .IsUnique();

                entity.Property(e => e.Msgbutton)
                    .IsRequired()
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("MSGBUTTON");

                entity.Property(e => e.Msgdefaultbutton)
                    .HasColumnType("FLOAT")
                    .HasColumnName("MSGDEFAULTBUTTON");

                entity.Property(e => e.Msgicon)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MSGICON");

                entity.Property(e => e.Msgid)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("MSGID");

                entity.Property(e => e.Msgprint)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MSGPRINT");

                entity.Property(e => e.Msgseverity)
                    .HasColumnType("FLOAT")
                    .HasColumnName("MSGSEVERITY");

                entity.Property(e => e.Msgtext)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("MSGTEXT");

                entity.Property(e => e.Msgtitle)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("MSGTITLE");

                entity.Property(e => e.Msguserinput)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MSGUSERINPUT");
            });

            modelBuilder.Entity<NoteS12018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOTE_S1_2018");

                entity.Property(e => e.Codemati)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODEMATI");

                entity.Property(e => e.Codeperiexam)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODEPERIEXAM");

                entity.Property(e => e.Codetypeepre)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CODETYPEEPRE");

                entity.Property(e => e.Coefepre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COEFEPRE");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.Idenelev)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDENELEV");

                entity.Property(e => e.Libematifr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LIBEMATIFR");

                entity.Property(e => e.Libetypeeprefr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LIBETYPEEPREFR");

                entity.Property(e => e.Moyemati)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MOYEMATI");

                entity.Property(e => e.Noteepre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOTEEPRE");

                entity.Property(e => e.Numeepre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMEEPRE");

                entity.Property(e => e.Rangmati)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RANGMATI");
            });

            modelBuilder.Entity<Noteseminaire>(entity =>
            {
                entity.HasKey(e => e.Idnote)
                    .HasName("SYS_C008685");

                entity.ToTable("NOTESEMINAIRE");

                entity.Property(e => e.Idnote)
                    .HasPrecision(10)
                    .ValueGeneratedNever()
                    .HasColumnName("IDNOTE");

                entity.Property(e => e.EtudiantIdEt)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ETUDIANT_ID_ET");

                entity.Property(e => e.Note)
                    .HasColumnType("FLOAT")
                    .HasColumnName("NOTE");

                entity.Property(e => e.Notecontrole)
                    .HasColumnType("FLOAT")
                    .HasColumnName("NOTECONTROLE");

                entity.Property(e => e.SeminaireIdseminaire)
                    .HasPrecision(10)
                    .HasColumnName("SEMINAIRE_IDSEMINAIRE");

                entity.HasOne(d => d.EtudiantIdEtNavigation)
                    .WithMany(p => p.Noteseminaire)
                    .HasForeignKey(d => d.EtudiantIdEt)
                    .HasConstraintName("FK2803DF296C2C1C5D");

                entity.HasOne(d => d.SeminaireIdseminaireNavigation)
                    .WithMany(p => p.Noteseminaire)
                    .HasForeignKey(d => d.SeminaireIdseminaire)
                    .HasConstraintName("FK2803DF294E3C526");
            });

            modelBuilder.Entity<Pbcatcol>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PBCATCOL");

                entity.HasIndex(e => new { e.PbcTnam, e.PbcOwnr, e.PbcCnam }, "PBSYSCATCOLDICT_IDX")
                    .IsUnique();

                entity.Property(e => e.PbcBmap)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PBC_BMAP")
                    .IsFixedLength(true);

                entity.Property(e => e.PbcCase)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBC_CASE");

                entity.Property(e => e.PbcCid)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBC_CID");

                entity.Property(e => e.PbcCmnt)
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasColumnName("PBC_CMNT");

                entity.Property(e => e.PbcCnam)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PBC_CNAM");

                entity.Property(e => e.PbcEdit)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("PBC_EDIT");

                entity.Property(e => e.PbcHdr)
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasColumnName("PBC_HDR");

                entity.Property(e => e.PbcHght)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBC_HGHT");

                entity.Property(e => e.PbcHpos)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBC_HPOS");

                entity.Property(e => e.PbcInit)
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasColumnName("PBC_INIT");

                entity.Property(e => e.PbcJtfy)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBC_JTFY");

                entity.Property(e => e.PbcLabl)
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasColumnName("PBC_LABL");

                entity.Property(e => e.PbcLpos)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBC_LPOS");

                entity.Property(e => e.PbcMask)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("PBC_MASK");

                entity.Property(e => e.PbcOwnr)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PBC_OWNR");

                entity.Property(e => e.PbcPtrn)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("PBC_PTRN");

                entity.Property(e => e.PbcTag)
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasColumnName("PBC_TAG");

                entity.Property(e => e.PbcTid)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBC_TID");

                entity.Property(e => e.PbcTnam)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PBC_TNAM");

                entity.Property(e => e.PbcWdth)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBC_WDTH");
            });

            modelBuilder.Entity<Pbcatedt>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PBCATEDT");

                entity.HasIndex(e => new { e.PbeName, e.PbeSeqn }, "PBSYSPBE_IDX")
                    .IsUnique();

                entity.Property(e => e.PbeCntr)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBE_CNTR");

                entity.Property(e => e.PbeEdit)
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasColumnName("PBE_EDIT");

                entity.Property(e => e.PbeFlag)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBE_FLAG");

                entity.Property(e => e.PbeName)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PBE_NAME");

                entity.Property(e => e.PbeSeqn)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBE_SEQN");

                entity.Property(e => e.PbeType)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBE_TYPE");

                entity.Property(e => e.PbeWork)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("PBE_WORK");
            });

            modelBuilder.Entity<Pbcatfmt>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PBCATFMT");

                entity.HasIndex(e => e.PbfName, "PBSYSCATFRMTS_IDX")
                    .IsUnique();

                entity.Property(e => e.PbfCntr)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBF_CNTR");

                entity.Property(e => e.PbfFrmt)
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasColumnName("PBF_FRMT");

                entity.Property(e => e.PbfName)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PBF_NAME");

                entity.Property(e => e.PbfType)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBF_TYPE");
            });

            modelBuilder.Entity<Pbcattbl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PBCATTBL");

                entity.HasIndex(e => new { e.PbtTnam, e.PbtOwnr }, "PBSYSCATPBT_IDX")
                    .IsUnique();

                entity.Property(e => e.PbdFchr)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBD_FCHR");

                entity.Property(e => e.PbdFfce)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("PBD_FFCE");

                entity.Property(e => e.PbdFhgt)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBD_FHGT");

                entity.Property(e => e.PbdFitl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PBD_FITL")
                    .IsFixedLength(true);

                entity.Property(e => e.PbdFptc)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBD_FPTC");

                entity.Property(e => e.PbdFunl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PBD_FUNL")
                    .IsFixedLength(true);

                entity.Property(e => e.PbdFwgt)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBD_FWGT");

                entity.Property(e => e.PbhFchr)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBH_FCHR");

                entity.Property(e => e.PbhFfce)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("PBH_FFCE");

                entity.Property(e => e.PbhFhgt)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBH_FHGT");

                entity.Property(e => e.PbhFitl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PBH_FITL")
                    .IsFixedLength(true);

                entity.Property(e => e.PbhFptc)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBH_FPTC");

                entity.Property(e => e.PbhFunl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PBH_FUNL")
                    .IsFixedLength(true);

                entity.Property(e => e.PbhFwgt)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBH_FWGT");

                entity.Property(e => e.PblFchr)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBL_FCHR");

                entity.Property(e => e.PblFfce)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("PBL_FFCE");

                entity.Property(e => e.PblFhgt)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBL_FHGT");

                entity.Property(e => e.PblFitl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PBL_FITL")
                    .IsFixedLength(true);

                entity.Property(e => e.PblFptc)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBL_FPTC");

                entity.Property(e => e.PblFunl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PBL_FUNL")
                    .IsFixedLength(true);

                entity.Property(e => e.PblFwgt)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBL_FWGT");

                entity.Property(e => e.PbtCmnt)
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasColumnName("PBT_CMNT");

                entity.Property(e => e.PbtOwnr)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PBT_OWNR");

                entity.Property(e => e.PbtTid)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBT_TID");

                entity.Property(e => e.PbtTnam)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PBT_TNAM");
            });

            modelBuilder.Entity<Pbcatvld>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PBCATVLD");

                entity.HasIndex(e => e.PbvName, "PBSYSCATVLDS_IDX")
                    .IsUnique();

                entity.Property(e => e.PbvCntr)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBV_CNTR");

                entity.Property(e => e.PbvMsg)
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasColumnName("PBV_MSG");

                entity.Property(e => e.PbvName)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PBV_NAME");

                entity.Property(e => e.PbvType)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PBV_TYPE");

                entity.Property(e => e.PbvVald)
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasColumnName("PBV_VALD");
            });

            modelBuilder.Entity<PlanTable>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PLAN_TABLE");

                entity.Property(e => e.Bytes)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("BYTES");

                entity.Property(e => e.Cardinality)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("CARDINALITY");

                entity.Property(e => e.Cost)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("COST");

                entity.Property(e => e.CpuCost)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("CPU_COST");

                entity.Property(e => e.Distribution)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("DISTRIBUTION");

                entity.Property(e => e.Id)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("ID");

                entity.Property(e => e.IoCost)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("IO_COST");

                entity.Property(e => e.ObjectInstance)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("OBJECT_INSTANCE");

                entity.Property(e => e.ObjectName)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("OBJECT_NAME");

                entity.Property(e => e.ObjectNode)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("OBJECT_NODE");

                entity.Property(e => e.ObjectOwner)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("OBJECT_OWNER");

                entity.Property(e => e.ObjectType)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("OBJECT_TYPE");

                entity.Property(e => e.Operation)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("OPERATION");

                entity.Property(e => e.Optimizer)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("OPTIMIZER");

                entity.Property(e => e.Options)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("OPTIONS");

                entity.Property(e => e.Other)
                    .HasColumnType("LONG")
                    .HasColumnName("OTHER");

                entity.Property(e => e.OtherTag)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("OTHER_TAG");

                entity.Property(e => e.ParentId)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PARENT_ID");

                entity.Property(e => e.PartitionId)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("PARTITION_ID");

                entity.Property(e => e.PartitionStart)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PARTITION_START");

                entity.Property(e => e.PartitionStop)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PARTITION_STOP");

                entity.Property(e => e.Position)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("POSITION");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("REMARKS");

                entity.Property(e => e.SearchColumns)
                    .HasColumnType("NUMBER")
                    .HasColumnName("SEARCH_COLUMNS");

                entity.Property(e => e.StatementId)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("STATEMENT_ID");

                entity.Property(e => e.TempSpace)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("TEMP_SPACE");

                entity.Property(e => e.Timestamp)
                    .HasColumnType("DATE")
                    .HasColumnName("TIMESTAMP");
            });

            modelBuilder.Entity<Presidentjury>(entity =>
            {
                entity.ToTable("PRESIDENTJURY");

                entity.Property(e => e.Id)
                    .HasPrecision(10)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Email)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL");

                entity.Property(e => e.Fonction)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FONCTION");

                entity.Property(e => e.Juryref)
                    .HasPrecision(10)
                    .HasColumnName("JURYREF");

                entity.Property(e => e.Nom)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("NOM");

                entity.Property(e => e.Prenom)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PRENOM");

                entity.Property(e => e.Societe)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SOCIETE");

                entity.Property(e => e.Tel)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("TEL");
            });

            modelBuilder.Entity<Presoutenance>(entity =>
            {
                entity.HasKey(e => e.IdPresoutenance)
                    .HasName("SYS_C008697");

                entity.ToTable("PRESOUTENANCE");

                entity.Property(e => e.IdPresoutenance)
                    .HasPrecision(10)
                    .ValueGeneratedNever()
                    .HasColumnName("ID_PRESOUTENANCE");

                entity.Property(e => e.Dte)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("DTE");

                entity.Property(e => e.EtIdEt)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ET_ID_ET");

                entity.Property(e => e.Etat)
                    .HasPrecision(10)
                    .HasColumnName("ETAT");

                entity.Property(e => e.Heure)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("HEURE");

                entity.Property(e => e.SessionpsoutIdsoutenance)
                    .HasPrecision(10)
                    .HasColumnName("SESSIONPSOUT_IDSOUTENANCE");

                entity.HasOne(d => d.EtIdEtNavigation)
                    .WithMany(p => p.Presoutenance)
                    .HasForeignKey(d => d.EtIdEt)
                    .HasConstraintName("FK5695AE1687CE2D70");

                entity.HasOne(d => d.SessionpsoutIdsoutenanceNavigation)
                    .WithMany(p => p.Presoutenance)
                    .HasForeignKey(d => d.SessionpsoutIdsoutenance)
                    .HasConstraintName("FK5695AE16E573C3E9");
            });

            modelBuilder.Entity<Quitus>(entity =>
            {
                entity.HasKey(e => e.Idquitus)
                    .HasName("SYS_C008700");

                entity.ToTable("QUITUS");

                entity.Property(e => e.Idquitus)
                    .HasPrecision(10)
                    .ValueGeneratedNever()
                    .HasColumnName("IDQUITUS");

                entity.Property(e => e.Comite)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("COMITE");

                entity.Property(e => e.Credit)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("CREDIT");

                entity.Property(e => e.Depotrapport)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("DEPOTRAPPORT");

                entity.Property(e => e.Encadeur)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ENCADEUR");

                entity.Property(e => e.Etatfinancier)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ETATFINANCIER");

                entity.Property(e => e.EtdIdEt)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ETD_ID_ET");

                entity.HasOne(d => d.EtdIdEtNavigation)
                    .WithMany(p => p.Quitus)
                    .HasForeignKey(d => d.EtdIdEt)
                    .HasConstraintName("FK90DAC54DCE9BE5D6");
            });

            modelBuilder.Entity<Reclamationn>(entity =>
            {
                entity.HasKey(e => e.IdReclamtion)
                    .HasName("PK_RECLAMATION");

                entity.ToTable("RECLAMATIONN");

                entity.Property(e => e.IdReclamtion)
                    .HasColumnType("NUMBER")
                    .HasColumnName("ID_RECLAMTION");

                entity.Property(e => e.DateTraitement)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_TRAITEMENT");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.IdEnteteReclamation)
                    .HasColumnType("NUMBER")
                    .HasColumnName("ID_ENTETE_RECLAMATION");

                entity.Property(e => e.NomEns)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_ENS");

                entity.Property(e => e.Traiter)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TRAITER");

                entity.Property(e => e.Utilisateur)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UTILISATEUR");
            });

            modelBuilder.Entity<ResultatEtEdserve>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RESULTAT_ET_EDSERVE");

                entity.Property(e => e.Codecondassi)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODECONDASSI");

                entity.Property(e => e.Codedecicons)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODEDECICONS");

                entity.Property(e => e.Codeetab)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODEETAB");

                entity.Property(e => e.Codementexam)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODEMENTEXAM");

                entity.Property(e => e.Codeperiexam)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODEPERIEXAM");

                entity.Property(e => e.Codeprix)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODEPRIX");

                entity.Property(e => e.Codesectorie)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODESECTORIE");

                entity.Property(e => e.Idenelev)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDENELEV");

                entity.Property(e => e.Moyeexamnati)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MOYEEXAMNATI");

                entity.Property(e => e.Moyeperiexam)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MOYEPERIEXAM");

                entity.Property(e => e.Obsecons)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("OBSECONS");

                entity.Property(e => e.Rangperiexam)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RANGPERIEXAM");
            });

            modelBuilder.Entity<ResultatFinalS12018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RESULTAT_FINAL_S1_2018");

                entity.Property(e => e.Codecondassi)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODECONDASSI");

                entity.Property(e => e.Codedecicons)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODEDECICONS");

                entity.Property(e => e.Codeetab)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODEETAB");

                entity.Property(e => e.Codementexam)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODEMENTEXAM");

                entity.Property(e => e.Codeperiexam)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODEPERIEXAM");

                entity.Property(e => e.Codeprix)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODEPRIX");

                entity.Property(e => e.Codesectorie)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODESECTORIE");

                entity.Property(e => e.Idenelev)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDENELEV");

                entity.Property(e => e.Moyeexamnati)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MOYEEXAMNATI");

                entity.Property(e => e.Moyeperiexam)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MOYEPERIEXAM");

                entity.Property(e => e.Obsecons)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("OBSECONS");

                entity.Property(e => e.Rangperiexam)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("RANGPERIEXAM");
            });

            modelBuilder.Entity<ResultatFinaleSem2>(entity =>
            {
                entity.HasKey(e => new { e.Idenelev, e.Codeperiexam })
                    .HasName("RESULTAT_FINALE_SEM2_PK");

                entity.ToTable("RESULTAT_FINALE_SEM2");

                entity.Property(e => e.Idenelev)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDENELEV");

                entity.Property(e => e.Codeperiexam)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CODEPERIEXAM");

                entity.Property(e => e.Codecondassi)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CODECONDASSI");

                entity.Property(e => e.Codedecicons)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CODEDECICONS");

                entity.Property(e => e.Codeetab)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODEETAB");

                entity.Property(e => e.Codementexam)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CODEMENTEXAM");

                entity.Property(e => e.Codeprix)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CODEPRIX");

                entity.Property(e => e.Codesectorie)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CODESECTORIE");

                entity.Property(e => e.Moyeexamnati)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MOYEEXAMNATI");

                entity.Property(e => e.Moyeperiexam)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MOYEPERIEXAM");

                entity.Property(e => e.Obsecons)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("OBSECONS");

                entity.Property(e => e.Rangperiexam)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("RANGPERIEXAM");
            });

            modelBuilder.Entity<ResultatSemestre2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RESULTAT_SEMESTRE2");

                entity.Property(e => e.Codemati)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODEMATI");

                entity.Property(e => e.Codeperiexam)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODEPERIEXAM");

                entity.Property(e => e.Codetypeepre)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CODETYPEEPRE");

                entity.Property(e => e.Coefmati)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COEFMATI");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.Idenelev)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDENELEV");

                entity.Property(e => e.Libematifr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LIBEMATIFR");

                entity.Property(e => e.Libetypeeprefr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LIBETYPEEPREFR");

                entity.Property(e => e.Moyemati)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MOYEMATI");

                entity.Property(e => e.Noteepre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOTEEPRE");

                entity.Property(e => e.Numeepre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMEEPRE");

                entity.Property(e => e.Rangmati)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RANGMATI");
            });

            modelBuilder.Entity<Salle>(entity =>
            {
                entity.HasKey(e => e.CodeSalle);

                entity.ToTable("SALLE");

                entity.Property(e => e.CodeSalle)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODE_SALLE");

                entity.Property(e => e.Description)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");
            });

            modelBuilder.Entity<Scoredo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SCOREDO");

                entity.Property(e => e.Dossier)
                    .HasColumnType("NUMBER(10,6)")
                    .HasColumnName("DOSSIER");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");
            });

            modelBuilder.Entity<Seminaire>(entity =>
            {
                entity.HasKey(e => e.Idseminaire)
                    .HasName("SYS_C008718");

                entity.ToTable("SEMINAIRE");

                entity.Property(e => e.Idseminaire)
                    .HasPrecision(10)
                    .ValueGeneratedNever()
                    .HasColumnName("IDSEMINAIRE");

                entity.Property(e => e.Dateexamen)
                    .HasPrecision(6)
                    .HasColumnName("DATEEXAMEN");

                entity.Property(e => e.Datefin)
                    .HasPrecision(6)
                    .HasColumnName("DATEFIN");

                entity.Property(e => e.Dateseminaire)
                    .HasPrecision(6)
                    .HasColumnName("DATESEMINAIRE");

                entity.Property(e => e.Enseignant)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ENSEIGNANT");

                entity.Property(e => e.Heuredebut)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("HEUREDEBUT");

                entity.Property(e => e.Heurefin)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("HEUREFIN");

                entity.Property(e => e.Libelle)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("LIBELLE");

                entity.Property(e => e.Salle)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SALLE");
            });

            modelBuilder.Entity<Sequence>(entity =>
            {
                entity.HasKey(e => e.SeqName)
                    .HasName("SYS_C008721");

                entity.ToTable("SEQUENCE");

                entity.Property(e => e.SeqName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEQ_NAME");

                entity.Property(e => e.SeqCount)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("SEQ_COUNT");
            });

            modelBuilder.Entity<Sessionetudiant>(entity =>
            {
                entity.HasKey(e => e.Idsessionet)
                    .HasName("SYS_C008724");

                entity.ToTable("SESSIONETUDIANT");

                entity.Property(e => e.Idsessionet)
                    .HasPrecision(10)
                    .ValueGeneratedNever()
                    .HasColumnName("IDSESSIONET");

                entity.Property(e => e.Email)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL");

                entity.Property(e => e.Matricule)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULE");

                entity.Property(e => e.Password)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PASSWORD");
            });

            modelBuilder.Entity<Sessionpresoutenance>(entity =>
            {
                entity.HasKey(e => e.Idsoutenance)
                    .HasName("SYS_C008727");

                entity.ToTable("SESSIONPRESOUTENANCE");

                entity.Property(e => e.Idsoutenance)
                    .HasPrecision(10)
                    .ValueGeneratedNever()
                    .HasColumnName("IDSOUTENANCE");

                entity.Property(e => e.Datedebut)
                    .HasPrecision(6)
                    .HasColumnName("DATEDEBUT");

                entity.Property(e => e.Datefin)
                    .HasPrecision(6)
                    .HasColumnName("DATEFIN");

                entity.Property(e => e.Libelle)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("LIBELLE");
            });

            modelBuilder.Entity<Sessionsoutenance>(entity =>
            {
                entity.HasKey(e => e.Idsoutenance)
                    .HasName("SYS_C008731");

                entity.ToTable("SESSIONSOUTENANCE");

                entity.Property(e => e.Idsoutenance)
                    .HasPrecision(10)
                    .ValueGeneratedNever()
                    .HasColumnName("IDSOUTENANCE");

                entity.Property(e => e.Datedebut)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("DATEDEBUT");

                entity.Property(e => e.Datefin)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("DATEFIN");

                entity.Property(e => e.Etat)
                    .HasPrecision(10)
                    .HasColumnName("ETAT");

                entity.Property(e => e.Libelle)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("LIBELLE");
            });

            modelBuilder.Entity<Societe>(entity =>
            {
                entity.HasKey(e => e.CodeSoc);

                entity.ToTable("SOCIETE");

                entity.Property(e => e.CodeSoc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_SOC");

                entity.Property(e => e.ActiveDispenseAuto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ACTIVE_DISPENSE_AUTO");

                entity.Property(e => e.ActiveModuleOpt)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ACTIVE_MODULE_OPT");

                entity.Property(e => e.ActiveMpEns)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ACTIVE_MP_ENS");

                entity.Property(e => e.ActiverTauxAbsence)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ACTIVER_TAUX_ABSENCE");

                entity.Property(e => e.AdrSoc)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ADR_SOC");

                entity.Property(e => e.AnneeAdmission)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_ADMISSION")
                    .HasDefaultValueSql("NULL ");

                entity.Property(e => e.AnneeDeb)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_DEB");

                entity.Property(e => e.AnneeFin)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANNEE_FIN");

                entity.Property(e => e.Banque)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BANQUE");

                entity.Property(e => e.BiRachat)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("BI_RACHAT");

                entity.Property(e => e.BlockOtherRat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BLOCK_OTHER_RAT")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.BsRachat)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("BS_RACHAT");

                entity.Property(e => e.CheminFichierDonnee)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CHEMIN_FICHIER_DONNEE");

                entity.Property(e => e.CodePostal)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODE_POSTAL");

                entity.Property(e => e.CodeRgltComptant)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODE_RGLT_COMPTANT");

                entity.Property(e => e.CodeRgltEspece)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODE_RGLT_ESPECE");

                entity.Property(e => e.CodeTva)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODE_TVA");

                entity.Property(e => e.ControlBalckliste)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CONTROL_BALCKLISTE");

                entity.Property(e => e.CreditMax)
                    .HasColumnType("NUMBER(18,6)")
                    .HasColumnName("CREDIT_MAX");

                entity.Property(e => e.CtrlConformEcts)
                    .HasPrecision(1)
                    .HasColumnName("CTRL_CONFORM_ECTS");

                entity.Property(e => e.CtrlFinStat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CTRL_FIN_STAT")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.DateCr)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_CR");

                entity.Property(e => e.DateDebutSaison)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_DEBUT_SAISON");

                entity.Property(e => e.DateMaj)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_MAJ");

                entity.Property(e => e.Datedemarragecs)
                    .HasColumnType("DATE")
                    .HasColumnName("DATEDEMARRAGECS");

                entity.Property(e => e.EMail)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL");

                entity.Property(e => e.FaxSoc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FAX_SOC");

                entity.Property(e => e.FrScolariteCj)
                    .HasColumnType("NUMBER(18,6)")
                    .HasColumnName("FR_SCOLARITE_CJ");

                entity.Property(e => e.FrScolariteCs)
                    .HasColumnType("NUMBER(18,6)")
                    .HasColumnName("FR_SCOLARITE_CS");

                entity.Property(e => e.GererSemestre)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GERER_SEMESTRE");

                entity.Property(e => e.IdDiret)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("ID_DIRET");

                entity.Property(e => e.IdServScolaire)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("ID_SERV_SCOLAIRE");

                entity.Property(e => e.IdVacataire)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("ID_VACATAIRE");

                entity.Property(e => e.LiaisonFinancier)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("LIAISON_FINANCIER");

                entity.Property(e => e.LiaisonSite)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("LIAISON_SITE");

                entity.Property(e => e.MaxTauxCreditAccepte)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MAX_TAUX_CREDIT_ACCEPTE");

                entity.Property(e => e.MaxValCreditAccepte)
                    .HasColumnType("NUMBER(18,6)")
                    .HasColumnName("MAX_VAL_CREDIT_ACCEPTE");

                entity.Property(e => e.MinMoyResussite)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MIN_MOY_RESUSSITE");

                entity.Property(e => e.MinPanier)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("MIN_PANIER");

                entity.Property(e => e.NbMaxAbsModule)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("NB_MAX_ABS_MODULE");

                entity.Property(e => e.NbSceanceJour)
                    .HasColumnType("NUMBER(38)")
                    .HasColumnName("NB_SCEANCE_JOUR");

                entity.Property(e => e.NbhSemaine)
                    .HasColumnType("NUMBER(4,1)")
                    .HasColumnName("NBH_SEMAINE");

                entity.Property(e => e.NomSoc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_SOC");

                entity.Property(e => e.NumSemestreActuel)
                    .HasPrecision(1)
                    .HasColumnName("NUM_SEMESTRE_ACTUEL");

                entity.Property(e => e.Numpromotioncs)
                    .HasPrecision(4)
                    .HasColumnName("NUMPROMOTIONCS");

                entity.Property(e => e.QuotaEctsNv)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("QUOTA_ECTS_NV");

                entity.Property(e => e.Rc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RC");

                entity.Property(e => e.Rib)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("RIB");

                entity.Property(e => e.Sigle)
                    .HasColumnType("BFILE")
                    .HasColumnName("SIGLE");

                entity.Property(e => e.Symbole)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SYMBOLE")
                    .IsFixedLength(true);

                entity.Property(e => e.TauxDs)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("TAUX_DS");

                entity.Property(e => e.TauxExam)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("TAUX_EXAM");

                entity.Property(e => e.TauxExamWithCc)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("TAUX_EXAM_WITH_CC");

                entity.Property(e => e.TauxExamWithTpCc)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("TAUX_EXAM_WITH_TP_CC");

                entity.Property(e => e.TauxMaxAbsence)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("TAUX_MAX_ABSENCE");

                entity.Property(e => e.TauxOrale)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("TAUX_ORALE");

                entity.Property(e => e.TauxRglt)
                    .HasColumnType("NUMBER(10,3)")
                    .HasColumnName("TAUX_RGLT");

                entity.Property(e => e.TauxTp)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("TAUX_TP");

                entity.Property(e => e.TelSoc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TEL_SOC");

                entity.Property(e => e.TimbFiscal)
                    .HasColumnType("NUMBER(6,3)")
                    .HasColumnName("TIMB_FISCAL");

                entity.Property(e => e.TimbreFiscal)
                    .HasColumnType("NUMBER(6,3)")
                    .HasColumnName("TIMBRE_FISCAL");

                entity.Property(e => e.TotEctsAdmis)
                    .HasColumnType("NUMBER(5,2)")
                    .HasColumnName("TOT_ECTS_ADMIS");

                entity.Property(e => e.VerrouPlEtude)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VERROU_PL_ETUDE")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.VerrouResul)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VERROU_RESUL")
                    .HasDefaultValueSql("'N'");

                entity.Property(e => e.Ville)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("VILLE");
            });

            modelBuilder.Entity<Soutenance>(entity =>
            {
                entity.ToTable("SOUTENANCE");

                entity.Property(e => e.Soutenanceid)
                    .HasPrecision(10)
                    .ValueGeneratedNever()
                    .HasColumnName("SOUTENANCEID");

                entity.Property(e => e.Dte)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("DTE");

                entity.Property(e => e.EtIdEt)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ET_ID_ET");

                entity.Property(e => e.Etat)
                    .HasPrecision(1)
                    .HasColumnName("ETAT");

                entity.Property(e => e.Heure)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("HEURE");

                entity.Property(e => e.Idrapporteur)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("IDRAPPORTEUR");

                entity.Property(e => e.Jury)
                    .HasPrecision(10)
                    .HasColumnName("JURY");

                entity.Property(e => e.PrId)
                    .HasPrecision(10)
                    .HasColumnName("PR_ID");

                entity.Property(e => e.Repporteur)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("REPPORTEUR");

                entity.Property(e => e.SessionsoutenanceIdsoutenance)
                    .HasPrecision(10)
                    .HasColumnName("SESSIONSOUTENANCE_IDSOUTENANCE");

                entity.HasOne(d => d.EtIdEtNavigation)
                    .WithMany(p => p.Soutenance)
                    .HasForeignKey(d => d.EtIdEt)
                    .HasConstraintName("FKA24D7B5387CE2D70");

                entity.HasOne(d => d.Pr)
                    .WithMany(p => p.Soutenance)
                    .HasForeignKey(d => d.PrId)
                    .HasConstraintName("FKA24D7B531D585C79");

                entity.HasOne(d => d.SessionsoutenanceIdsoutenanceNavigation)
                    .WithMany(p => p.Soutenance)
                    .HasForeignKey(d => d.SessionsoutenanceIdsoutenance)
                    .HasConstraintName("FKA24D7B53FADDF4FC");
            });

            modelBuilder.Entity<Specialite>(entity =>
            {
                entity.ToTable("SPECIALITE");

                entity.Property(e => e.Id)
                    .HasPrecision(10)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.NomSpec)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("NOM_SPEC");
            });

            modelBuilder.Entity<StrNome>(entity =>
            {
                entity.HasKey(e => e.CodeStr);

                entity.ToTable("STR_NOME");

                entity.Property(e => e.CodeStr)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODE_STR");

                entity.Property(e => e.NomStr)
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("NOM_STR");
            });

            modelBuilder.Entity<TableImport>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TABLE_IMPORT");

                entity.Property(e => e.IdEt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_ET");

                entity.Property(e => e.NivAcquisAnglais)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NIV_ACQUIS_ANGLAIS");

                entity.Property(e => e.NivAcquisFrancais)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("NIV_ACQUIS_FRANCAIS");
            });

            modelBuilder.Entity<TypeMvt>(entity =>
            {
                entity.HasKey(e => e.TypeMvt1)
                    .HasName("SYS_C002804");

                entity.ToTable("TYPE_MVT");

                entity.Property(e => e.TypeMvt1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_MVT");

                entity.Property(e => e.CodePrix)
                    .HasPrecision(2)
                    .HasColumnName("CODE_PRIX");

                entity.Property(e => e.CompteurAuto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COMPTEUR_AUTO");

                entity.Property(e => e.DateLastMvt)
                    .HasColumnType("DATE")
                    .HasColumnName("DATE_LAST_MVT");

                entity.Property(e => e.Designation)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("DESIGNATION");

                entity.Property(e => e.LibelleType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LIBELLE_TYPE");

                entity.Property(e => e.NumAuto)
                    .HasPrecision(10)
                    .HasColumnName("NUM_AUTO");

                entity.Property(e => e.Signe)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SIGNE");

                entity.Property(e => e.TailleCompteur)
                    .HasPrecision(2)
                    .HasColumnName("TAILLE_COMPTEUR");
            });

            modelBuilder.HasSequence("DISPSEMCLAS_SEQ");

            modelBuilder.HasSequence("ETUDIANT_SEQ");

            modelBuilder.HasSequence("PAIEMENT_ALFIKR");

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}